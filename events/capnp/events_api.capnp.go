// Code generated by capnpc-go. DO NOT EDIT.

package capnp

import (
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
)

type Event struct{ capnp.Struct }

// Event_TypeID is the unique identifier for the type Event.
const Event_TypeID = 0x9c032508b61d1d09

func NewEvent(s *capnp.Segment) (Event, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Event{st}, err
}

func NewRootEvent(s *capnp.Segment) (Event, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Event{st}, err
}

func ReadRootEvent(msg *capnp.Message) (Event, error) {
	root, err := msg.RootPtr()
	return Event{root.Struct()}, err
}

func (s Event) String() string {
	str, _ := text.Marshal(0x9c032508b61d1d09, s.Struct)
	return str
}

func (s Event) Type() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Event) HasType() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Event) TypeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Event) SetType(v string) error {
	return s.Struct.SetText(0, v)
}

// Event_List is a list of Event.
type Event_List struct{ capnp.List }

// NewEvent creates a new list of Event.
func NewEvent_List(s *capnp.Segment, sz int32) (Event_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Event_List{l}, err
}

func (s Event_List) At(i int) Event { return Event{s.List.Struct(i)} }

func (s Event_List) Set(i int, v Event) error { return s.List.SetStruct(i, v.Struct) }

func (s Event_List) String() string {
	str, _ := text.MarshalList(0x9c032508b61d1d09, s.List)
	return str
}

// Event_Promise is a wrapper for a Event promised by a client call.
type Event_Promise struct{ *capnp.Pipeline }

func (p Event_Promise) Struct() (Event, error) {
	s, err := p.Pipeline.Struct()
	return Event{s}, err
}

const schema_fc8938b535319bfe = "x\xda\x12\xd0s`\x12d\x8dg`\x08dae\xfb" +
	"\xcf)+\xbb\x8dC\x95y\x0e\x83\xa0\x1c\xe3\xff\x7f\xb3" +
	"\x0dM\xb7Zt\xfea`edg`0\x14Ub" +
	"\x14Te\x17T\x95\x17t\xb5g`\xfc\x9fZ\x96\x9a" +
	"WR\xac\x9f\xcc\x9cX\x90W\xa0\x0f\xe1\xc5'\x16d" +
	"\xea%\x83\x04\xac\\\xcb\xd8S\xf3J\x02\x18\x19\x03Y" +
	"\x18\x99\xfe\xc7M\x9e\x1f\xb8\xf7Z\xd7Q\x86@\x16&" +
	"FG\x01FF\x1e\x06\x06AF.\x06\xc6@\x16f" +
	"\x16\x06\x06\x16F\x06\x06A^-\x06\x86@\x0ef\xc6" +
	"@\x11&F\xfe\x92\xca\x82TF\x1e\x06&F\x1e\x06" +
	"F@\x00\x00\x00\xff\xff\x11'$\xac"

func init() {
	schemas.Register(schema_fc8938b535319bfe,
		0x9c032508b61d1d09)
}
