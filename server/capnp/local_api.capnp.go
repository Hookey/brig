// Code generated by capnpc-go. DO NOT EDIT.

package capnp

import (
	capnp2 "github.com/sahib/brig/gateway/db/capnp"
	context "golang.org/x/net/context"
	math "math"
	capnp "zombiezen.com/go/capnproto2"
	text "zombiezen.com/go/capnproto2/encoding/text"
	schemas "zombiezen.com/go/capnproto2/schemas"
	server "zombiezen.com/go/capnproto2/server"
)

type Hint struct{ capnp.Struct }

// Hint_TypeID is the unique identifier for the type Hint.
const Hint_TypeID = 0xb2ec3fe21ddc803f

func NewHint(s *capnp.Segment) (Hint, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Hint{st}, err
}

func NewRootHint(s *capnp.Segment) (Hint, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Hint{st}, err
}

func ReadRootHint(msg *capnp.Message) (Hint, error) {
	root, err := msg.RootPtr()
	return Hint{root.Struct()}, err
}

func (s Hint) String() string {
	str, _ := text.Marshal(0xb2ec3fe21ddc803f, s.Struct)
	return str
}

func (s Hint) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Hint) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Hint) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Hint) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Hint) EncryptionAlgo() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Hint) HasEncryptionAlgo() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Hint) EncryptionAlgoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Hint) SetEncryptionAlgo(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Hint) CompressionAlgo() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Hint) HasCompressionAlgo() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Hint) CompressionAlgoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Hint) SetCompressionAlgo(v string) error {
	return s.Struct.SetText(2, v)
}

// Hint_List is a list of Hint.
type Hint_List struct{ capnp.List }

// NewHint creates a new list of Hint.
func NewHint_List(s *capnp.Segment, sz int32) (Hint_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Hint_List{l}, err
}

func (s Hint_List) At(i int) Hint { return Hint{s.List.Struct(i)} }

func (s Hint_List) Set(i int, v Hint) error { return s.List.SetStruct(i, v.Struct) }

func (s Hint_List) String() string {
	str, _ := text.MarshalList(0xb2ec3fe21ddc803f, s.List)
	return str
}

// Hint_Promise is a wrapper for a Hint promised by a client call.
type Hint_Promise struct{ *capnp.Pipeline }

func (p Hint_Promise) Struct() (Hint, error) {
	s, err := p.Pipeline.Struct()
	return Hint{s}, err
}

// StatInfo is a stat-like description of any node
type StatInfo struct{ capnp.Struct }

// StatInfo_TypeID is the unique identifier for the type StatInfo.
const StatInfo_TypeID = 0xa2305f2ea25a3484

func NewStatInfo(s *capnp.Segment) (StatInfo, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 8})
	return StatInfo{st}, err
}

func NewRootStatInfo(s *capnp.Segment) (StatInfo, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 32, PointerCount: 8})
	return StatInfo{st}, err
}

func ReadRootStatInfo(msg *capnp.Message) (StatInfo, error) {
	root, err := msg.RootPtr()
	return StatInfo{root.Struct()}, err
}

func (s StatInfo) String() string {
	str, _ := text.Marshal(0xa2305f2ea25a3484, s.Struct)
	return str
}

func (s StatInfo) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s StatInfo) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s StatInfo) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s StatInfo) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s StatInfo) TreeHash() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s StatInfo) HasTreeHash() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetTreeHash(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s StatInfo) Size() uint64 {
	return s.Struct.Uint64(0)
}

func (s StatInfo) SetSize(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s StatInfo) CachedSize() int64 {
	return int64(s.Struct.Uint64(8))
}

func (s StatInfo) SetCachedSize(v int64) {
	s.Struct.SetUint64(8, uint64(v))
}

func (s StatInfo) Inode() uint64 {
	return s.Struct.Uint64(16)
}

func (s StatInfo) SetInode(v uint64) {
	s.Struct.SetUint64(16, v)
}

func (s StatInfo) IsDir() bool {
	return s.Struct.Bit(192)
}

func (s StatInfo) SetIsDir(v bool) {
	s.Struct.SetBit(192, v)
}

func (s StatInfo) Depth() int32 {
	return int32(s.Struct.Uint32(28))
}

func (s StatInfo) SetDepth(v int32) {
	s.Struct.SetUint32(28, uint32(v))
}

func (s StatInfo) ModTime() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s StatInfo) HasModTime() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s StatInfo) ModTimeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s StatInfo) SetModTime(v string) error {
	return s.Struct.SetText(2, v)
}

func (s StatInfo) IsPinned() bool {
	return s.Struct.Bit(193)
}

func (s StatInfo) SetIsPinned(v bool) {
	s.Struct.SetBit(193, v)
}

func (s StatInfo) IsExplicit() bool {
	return s.Struct.Bit(194)
}

func (s StatInfo) SetIsExplicit(v bool) {
	s.Struct.SetBit(194, v)
}

func (s StatInfo) ContentHash() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return []byte(p.Data()), err
}

func (s StatInfo) HasContentHash() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetContentHash(v []byte) error {
	return s.Struct.SetData(3, v)
}

func (s StatInfo) User() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s StatInfo) HasUser() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s StatInfo) UserBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s StatInfo) SetUser(v string) error {
	return s.Struct.SetText(4, v)
}

func (s StatInfo) BackendHash() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return []byte(p.Data()), err
}

func (s StatInfo) HasBackendHash() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetBackendHash(v []byte) error {
	return s.Struct.SetData(5, v)
}

func (s StatInfo) Key() ([]byte, error) {
	p, err := s.Struct.Ptr(6)
	return []byte(p.Data()), err
}

func (s StatInfo) HasKey() bool {
	p, err := s.Struct.Ptr(6)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetKey(v []byte) error {
	return s.Struct.SetData(6, v)
}

func (s StatInfo) IsRaw() bool {
	return s.Struct.Bit(195)
}

func (s StatInfo) SetIsRaw(v bool) {
	s.Struct.SetBit(195, v)
}

func (s StatInfo) Hint() (Hint, error) {
	p, err := s.Struct.Ptr(7)
	return Hint{Struct: p.Struct()}, err
}

func (s StatInfo) HasHint() bool {
	p, err := s.Struct.Ptr(7)
	return p.IsValid() || err != nil
}

func (s StatInfo) SetHint(v Hint) error {
	return s.Struct.SetPtr(7, v.Struct.ToPtr())
}

// NewHint sets the hint field to a newly
// allocated Hint struct, preferring placement in s's segment.
func (s StatInfo) NewHint() (Hint, error) {
	ss, err := NewHint(s.Struct.Segment())
	if err != nil {
		return Hint{}, err
	}
	err = s.Struct.SetPtr(7, ss.Struct.ToPtr())
	return ss, err
}

// StatInfo_List is a list of StatInfo.
type StatInfo_List struct{ capnp.List }

// NewStatInfo creates a new list of StatInfo.
func NewStatInfo_List(s *capnp.Segment, sz int32) (StatInfo_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 32, PointerCount: 8}, sz)
	return StatInfo_List{l}, err
}

func (s StatInfo_List) At(i int) StatInfo { return StatInfo{s.List.Struct(i)} }

func (s StatInfo_List) Set(i int, v StatInfo) error { return s.List.SetStruct(i, v.Struct) }

func (s StatInfo_List) String() string {
	str, _ := text.MarshalList(0xa2305f2ea25a3484, s.List)
	return str
}

// StatInfo_Promise is a wrapper for a StatInfo promised by a client call.
type StatInfo_Promise struct{ *capnp.Pipeline }

func (p StatInfo_Promise) Struct() (StatInfo, error) {
	s, err := p.Pipeline.Struct()
	return StatInfo{s}, err
}

func (p StatInfo_Promise) Hint() Hint_Promise {
	return Hint_Promise{Pipeline: p.Pipeline.GetPipeline(7)}
}

// Single log entry
type Commit struct{ capnp.Struct }

// Commit_TypeID is the unique identifier for the type Commit.
const Commit_TypeID = 0xb47c58aa23289d55

func NewCommit(s *capnp.Segment) (Commit, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Commit{st}, err
}

func NewRootCommit(s *capnp.Segment) (Commit, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Commit{st}, err
}

func ReadRootCommit(msg *capnp.Message) (Commit, error) {
	root, err := msg.RootPtr()
	return Commit{root.Struct()}, err
}

func (s Commit) String() string {
	str, _ := text.Marshal(0xb47c58aa23289d55, s.Struct)
	return str
}

func (s Commit) Hash() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Commit) HasHash() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Commit) SetHash(v []byte) error {
	return s.Struct.SetData(0, v)
}

func (s Commit) Msg() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Commit) HasMsg() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Commit) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Commit) SetMsg(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Commit) Tags() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s Commit) HasTags() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Commit) SetTags(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewTags sets the tags field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Commit) NewTags(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Commit) Date() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Commit) HasDate() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Commit) DateBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Commit) SetDate(v string) error {
	return s.Struct.SetText(3, v)
}

// Commit_List is a list of Commit.
type Commit_List struct{ capnp.List }

// NewCommit creates a new list of Commit.
func NewCommit_List(s *capnp.Segment, sz int32) (Commit_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Commit_List{l}, err
}

func (s Commit_List) At(i int) Commit { return Commit{s.List.Struct(i)} }

func (s Commit_List) Set(i int, v Commit) error { return s.List.SetStruct(i, v.Struct) }

func (s Commit_List) String() string {
	str, _ := text.MarshalList(0xb47c58aa23289d55, s.List)
	return str
}

// Commit_Promise is a wrapper for a Commit promised by a client call.
type Commit_Promise struct{ *capnp.Pipeline }

func (p Commit_Promise) Struct() (Commit, error) {
	s, err := p.Pipeline.Struct()
	return Commit{s}, err
}

// A config entry (including meta info)
type ConfigEntry struct{ capnp.Struct }

// ConfigEntry_TypeID is the unique identifier for the type ConfigEntry.
const ConfigEntry_TypeID = 0x974c11f8cfed4247

func NewConfigEntry(s *capnp.Segment) (ConfigEntry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return ConfigEntry{st}, err
}

func NewRootConfigEntry(s *capnp.Segment) (ConfigEntry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return ConfigEntry{st}, err
}

func ReadRootConfigEntry(msg *capnp.Message) (ConfigEntry, error) {
	root, err := msg.RootPtr()
	return ConfigEntry{root.Struct()}, err
}

func (s ConfigEntry) String() string {
	str, _ := text.Marshal(0x974c11f8cfed4247, s.Struct)
	return str
}

func (s ConfigEntry) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s ConfigEntry) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s ConfigEntry) Val() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s ConfigEntry) HasVal() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) ValBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetVal(v string) error {
	return s.Struct.SetText(1, v)
}

func (s ConfigEntry) Doc() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s ConfigEntry) HasDoc() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) DocBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetDoc(v string) error {
	return s.Struct.SetText(2, v)
}

func (s ConfigEntry) Default() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s ConfigEntry) HasDefault() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s ConfigEntry) DefaultBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s ConfigEntry) SetDefault(v string) error {
	return s.Struct.SetText(3, v)
}

func (s ConfigEntry) NeedsRestart() bool {
	return s.Struct.Bit(0)
}

func (s ConfigEntry) SetNeedsRestart(v bool) {
	s.Struct.SetBit(0, v)
}

// ConfigEntry_List is a list of ConfigEntry.
type ConfigEntry_List struct{ capnp.List }

// NewConfigEntry creates a new list of ConfigEntry.
func NewConfigEntry_List(s *capnp.Segment, sz int32) (ConfigEntry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return ConfigEntry_List{l}, err
}

func (s ConfigEntry_List) At(i int) ConfigEntry { return ConfigEntry{s.List.Struct(i)} }

func (s ConfigEntry_List) Set(i int, v ConfigEntry) error { return s.List.SetStruct(i, v.Struct) }

func (s ConfigEntry_List) String() string {
	str, _ := text.MarshalList(0x974c11f8cfed4247, s.List)
	return str
}

// ConfigEntry_Promise is a wrapper for a ConfigEntry promised by a client call.
type ConfigEntry_Promise struct{ *capnp.Pipeline }

func (p ConfigEntry_Promise) Struct() (ConfigEntry, error) {
	s, err := p.Pipeline.Struct()
	return ConfigEntry{s}, err
}

// One history entry for a file
type Change struct{ capnp.Struct }

// Change_TypeID is the unique identifier for the type Change.
const Change_TypeID = 0xd01613feea87ee6a

func NewChange(s *capnp.Segment) (Change, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return Change{st}, err
}

func NewRootChange(s *capnp.Segment) (Change, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6})
	return Change{st}, err
}

func ReadRootChange(msg *capnp.Message) (Change, error) {
	root, err := msg.RootPtr()
	return Change{root.Struct()}, err
}

func (s Change) String() string {
	str, _ := text.Marshal(0xd01613feea87ee6a, s.Struct)
	return str
}

func (s Change) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Change) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Change) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Change) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Change) Change() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Change) HasChange() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Change) ChangeBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Change) SetChange(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Change) Head() (Commit, error) {
	p, err := s.Struct.Ptr(2)
	return Commit{Struct: p.Struct()}, err
}

func (s Change) HasHead() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Change) SetHead(v Commit) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewHead sets the head field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s Change) NewHead() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

func (s Change) Next() (Commit, error) {
	p, err := s.Struct.Ptr(3)
	return Commit{Struct: p.Struct()}, err
}

func (s Change) HasNext() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Change) SetNext(v Commit) error {
	return s.Struct.SetPtr(3, v.Struct.ToPtr())
}

// NewNext sets the next field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s Change) NewNext() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(3, ss.Struct.ToPtr())
	return ss, err
}

func (s Change) MovedTo() (string, error) {
	p, err := s.Struct.Ptr(4)
	return p.Text(), err
}

func (s Change) HasMovedTo() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s Change) MovedToBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(4)
	return p.TextBytes(), err
}

func (s Change) SetMovedTo(v string) error {
	return s.Struct.SetText(4, v)
}

func (s Change) WasPreviouslyAt() (string, error) {
	p, err := s.Struct.Ptr(5)
	return p.Text(), err
}

func (s Change) HasWasPreviouslyAt() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s Change) WasPreviouslyAtBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(5)
	return p.TextBytes(), err
}

func (s Change) SetWasPreviouslyAt(v string) error {
	return s.Struct.SetText(5, v)
}

func (s Change) IsPinned() bool {
	return s.Struct.Bit(0)
}

func (s Change) SetIsPinned(v bool) {
	s.Struct.SetBit(0, v)
}

func (s Change) IsExplicit() bool {
	return s.Struct.Bit(1)
}

func (s Change) SetIsExplicit(v bool) {
	s.Struct.SetBit(1, v)
}

// Change_List is a list of Change.
type Change_List struct{ capnp.List }

// NewChange creates a new list of Change.
func NewChange_List(s *capnp.Segment, sz int32) (Change_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 6}, sz)
	return Change_List{l}, err
}

func (s Change_List) At(i int) Change { return Change{s.List.Struct(i)} }

func (s Change_List) Set(i int, v Change) error { return s.List.SetStruct(i, v.Struct) }

func (s Change_List) String() string {
	str, _ := text.MarshalList(0xd01613feea87ee6a, s.List)
	return str
}

// Change_Promise is a wrapper for a Change promised by a client call.
type Change_Promise struct{ *capnp.Pipeline }

func (p Change_Promise) Struct() (Change, error) {
	s, err := p.Pipeline.Struct()
	return Change{s}, err
}

func (p Change_Promise) Head() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(2)}
}

func (p Change_Promise) Next() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(3)}
}

// Represent two differing files
type DiffPair struct{ capnp.Struct }

// DiffPair_TypeID is the unique identifier for the type DiffPair.
const DiffPair_TypeID = 0xf8551f83bb42e152

func NewDiffPair(s *capnp.Segment) (DiffPair, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DiffPair{st}, err
}

func NewRootDiffPair(s *capnp.Segment) (DiffPair, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return DiffPair{st}, err
}

func ReadRootDiffPair(msg *capnp.Message) (DiffPair, error) {
	root, err := msg.RootPtr()
	return DiffPair{root.Struct()}, err
}

func (s DiffPair) String() string {
	str, _ := text.Marshal(0xf8551f83bb42e152, s.Struct)
	return str
}

func (s DiffPair) Src() (StatInfo, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo{Struct: p.Struct()}, err
}

func (s DiffPair) HasSrc() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s DiffPair) SetSrc(v StatInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewSrc sets the src field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s DiffPair) NewSrc() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s DiffPair) Dst() (StatInfo, error) {
	p, err := s.Struct.Ptr(1)
	return StatInfo{Struct: p.Struct()}, err
}

func (s DiffPair) HasDst() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s DiffPair) SetDst(v StatInfo) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewDst sets the dst field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s DiffPair) NewDst() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// DiffPair_List is a list of DiffPair.
type DiffPair_List struct{ capnp.List }

// NewDiffPair creates a new list of DiffPair.
func NewDiffPair_List(s *capnp.Segment, sz int32) (DiffPair_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return DiffPair_List{l}, err
}

func (s DiffPair_List) At(i int) DiffPair { return DiffPair{s.List.Struct(i)} }

func (s DiffPair_List) Set(i int, v DiffPair) error { return s.List.SetStruct(i, v.Struct) }

func (s DiffPair_List) String() string {
	str, _ := text.MarshalList(0xf8551f83bb42e152, s.List)
	return str
}

// DiffPair_Promise is a wrapper for a DiffPair promised by a client call.
type DiffPair_Promise struct{ *capnp.Pipeline }

func (p DiffPair_Promise) Struct() (DiffPair, error) {
	s, err := p.Pipeline.Struct()
	return DiffPair{s}, err
}

func (p DiffPair_Promise) Src() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

func (p DiffPair_Promise) Dst() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

// Difference between two commits
type Diff struct{ capnp.Struct }

// Diff_TypeID is the unique identifier for the type Diff.
const Diff_TypeID = 0xc9601ec89a6aa066

func NewDiff(s *capnp.Segment) (Diff, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7})
	return Diff{st}, err
}

func NewRootDiff(s *capnp.Segment) (Diff, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7})
	return Diff{st}, err
}

func ReadRootDiff(msg *capnp.Message) (Diff, error) {
	root, err := msg.RootPtr()
	return Diff{root.Struct()}, err
}

func (s Diff) String() string {
	str, _ := text.Marshal(0xc9601ec89a6aa066, s.Struct)
	return str
}

func (s Diff) Added() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasAdded() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Diff) SetAdded(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAdded sets the added field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewAdded(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

func (s Diff) Removed() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(1)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasRemoved() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Diff) SetRemoved(v StatInfo_List) error {
	return s.Struct.SetPtr(1, v.List.ToPtr())
}

// NewRemoved sets the removed field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewRemoved(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(1, l.List.ToPtr())
	return l, err
}

func (s Diff) Ignored() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(2)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasIgnored() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Diff) SetIgnored(v StatInfo_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewIgnored sets the ignored field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewIgnored(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Diff) Missing() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(3)
	return StatInfo_List{List: p.List()}, err
}

func (s Diff) HasMissing() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Diff) SetMissing(v StatInfo_List) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewMissing sets the missing field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s Diff) NewMissing(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

func (s Diff) Moved() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(4)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasMoved() bool {
	p, err := s.Struct.Ptr(4)
	return p.IsValid() || err != nil
}

func (s Diff) SetMoved(v DiffPair_List) error {
	return s.Struct.SetPtr(4, v.List.ToPtr())
}

// NewMoved sets the moved field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewMoved(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(4, l.List.ToPtr())
	return l, err
}

func (s Diff) Merged() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(5)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasMerged() bool {
	p, err := s.Struct.Ptr(5)
	return p.IsValid() || err != nil
}

func (s Diff) SetMerged(v DiffPair_List) error {
	return s.Struct.SetPtr(5, v.List.ToPtr())
}

// NewMerged sets the merged field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewMerged(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(5, l.List.ToPtr())
	return l, err
}

func (s Diff) Conflict() (DiffPair_List, error) {
	p, err := s.Struct.Ptr(6)
	return DiffPair_List{List: p.List()}, err
}

func (s Diff) HasConflict() bool {
	p, err := s.Struct.Ptr(6)
	return p.IsValid() || err != nil
}

func (s Diff) SetConflict(v DiffPair_List) error {
	return s.Struct.SetPtr(6, v.List.ToPtr())
}

// NewConflict sets the conflict field to a newly
// allocated DiffPair_List, preferring placement in s's segment.
func (s Diff) NewConflict(n int32) (DiffPair_List, error) {
	l, err := NewDiffPair_List(s.Struct.Segment(), n)
	if err != nil {
		return DiffPair_List{}, err
	}
	err = s.Struct.SetPtr(6, l.List.ToPtr())
	return l, err
}

// Diff_List is a list of Diff.
type Diff_List struct{ capnp.List }

// NewDiff creates a new list of Diff.
func NewDiff_List(s *capnp.Segment, sz int32) (Diff_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 7}, sz)
	return Diff_List{l}, err
}

func (s Diff_List) At(i int) Diff { return Diff{s.List.Struct(i)} }

func (s Diff_List) Set(i int, v Diff) error { return s.List.SetStruct(i, v.Struct) }

func (s Diff_List) String() string {
	str, _ := text.MarshalList(0xc9601ec89a6aa066, s.List)
	return str
}

// Diff_Promise is a wrapper for a Diff promised by a client call.
type Diff_Promise struct{ *capnp.Pipeline }

func (p Diff_Promise) Struct() (Diff, error) {
	s, err := p.Pipeline.Struct()
	return Diff{s}, err
}

// A folder that a remote is allowed to access
type RemoteFolder struct{ capnp.Struct }

// RemoteFolder_TypeID is the unique identifier for the type RemoteFolder.
const RemoteFolder_TypeID = 0x8ed051e9369ac720

func NewRemoteFolder(s *capnp.Segment) (RemoteFolder, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return RemoteFolder{st}, err
}

func NewRootRemoteFolder(s *capnp.Segment) (RemoteFolder, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return RemoteFolder{st}, err
}

func ReadRootRemoteFolder(msg *capnp.Message) (RemoteFolder, error) {
	root, err := msg.RootPtr()
	return RemoteFolder{root.Struct()}, err
}

func (s RemoteFolder) String() string {
	str, _ := text.Marshal(0x8ed051e9369ac720, s.Struct)
	return str
}

func (s RemoteFolder) Folder() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s RemoteFolder) HasFolder() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RemoteFolder) FolderBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s RemoteFolder) SetFolder(v string) error {
	return s.Struct.SetText(0, v)
}

func (s RemoteFolder) ReadOnly() bool {
	return s.Struct.Bit(0)
}

func (s RemoteFolder) SetReadOnly(v bool) {
	s.Struct.SetBit(0, v)
}

func (s RemoteFolder) ConflictStrategy() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s RemoteFolder) HasConflictStrategy() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s RemoteFolder) ConflictStrategyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s RemoteFolder) SetConflictStrategy(v string) error {
	return s.Struct.SetText(1, v)
}

// RemoteFolder_List is a list of RemoteFolder.
type RemoteFolder_List struct{ capnp.List }

// NewRemoteFolder creates a new list of RemoteFolder.
func NewRemoteFolder_List(s *capnp.Segment, sz int32) (RemoteFolder_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return RemoteFolder_List{l}, err
}

func (s RemoteFolder_List) At(i int) RemoteFolder { return RemoteFolder{s.List.Struct(i)} }

func (s RemoteFolder_List) Set(i int, v RemoteFolder) error { return s.List.SetStruct(i, v.Struct) }

func (s RemoteFolder_List) String() string {
	str, _ := text.MarshalList(0x8ed051e9369ac720, s.List)
	return str
}

// RemoteFolder_Promise is a wrapper for a RemoteFolder promised by a client call.
type RemoteFolder_Promise struct{ *capnp.Pipeline }

func (p RemoteFolder_Promise) Struct() (RemoteFolder, error) {
	s, err := p.Pipeline.Struct()
	return RemoteFolder{s}, err
}

type LocateResult struct{ capnp.Struct }

// LocateResult_TypeID is the unique identifier for the type LocateResult.
const LocateResult_TypeID = 0xd95473f6f8a89a69

func NewLocateResult(s *capnp.Segment) (LocateResult, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return LocateResult{st}, err
}

func NewRootLocateResult(s *capnp.Segment) (LocateResult, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return LocateResult{st}, err
}

func ReadRootLocateResult(msg *capnp.Message) (LocateResult, error) {
	root, err := msg.RootPtr()
	return LocateResult{root.Struct()}, err
}

func (s LocateResult) String() string {
	str, _ := text.Marshal(0xd95473f6f8a89a69, s.Struct)
	return str
}

func (s LocateResult) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s LocateResult) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s LocateResult) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s LocateResult) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s LocateResult) Addr() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s LocateResult) HasAddr() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s LocateResult) AddrBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s LocateResult) SetAddr(v string) error {
	return s.Struct.SetText(1, v)
}

func (s LocateResult) Mask() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s LocateResult) HasMask() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s LocateResult) MaskBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s LocateResult) SetMask(v string) error {
	return s.Struct.SetText(2, v)
}

func (s LocateResult) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s LocateResult) HasFingerprint() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s LocateResult) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s LocateResult) SetFingerprint(v string) error {
	return s.Struct.SetText(3, v)
}

// LocateResult_List is a list of LocateResult.
type LocateResult_List struct{ capnp.List }

// NewLocateResult creates a new list of LocateResult.
func NewLocateResult_List(s *capnp.Segment, sz int32) (LocateResult_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return LocateResult_List{l}, err
}

func (s LocateResult_List) At(i int) LocateResult { return LocateResult{s.List.Struct(i)} }

func (s LocateResult_List) Set(i int, v LocateResult) error { return s.List.SetStruct(i, v.Struct) }

func (s LocateResult_List) String() string {
	str, _ := text.MarshalList(0xd95473f6f8a89a69, s.List)
	return str
}

// LocateResult_Promise is a wrapper for a LocateResult promised by a client call.
type LocateResult_Promise struct{ *capnp.Pipeline }

func (p LocateResult_Promise) Struct() (LocateResult, error) {
	s, err := p.Pipeline.Struct()
	return LocateResult{s}, err
}

// Info about our current user state
type Identity struct{ capnp.Struct }

// Identity_TypeID is the unique identifier for the type Identity.
const Identity_TypeID = 0xd49a2570fb5a4342

func NewIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Identity{st}, err
}

func NewRootIdentity(s *capnp.Segment) (Identity, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return Identity{st}, err
}

func ReadRootIdentity(msg *capnp.Message) (Identity, error) {
	root, err := msg.RootPtr()
	return Identity{root.Struct()}, err
}

func (s Identity) String() string {
	str, _ := text.Marshal(0xd49a2570fb5a4342, s.Struct)
	return str
}

func (s Identity) CurrentUser() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Identity) HasCurrentUser() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Identity) CurrentUserBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Identity) SetCurrentUser(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Identity) Owner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Identity) HasOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Identity) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Identity) SetOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Identity) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Identity) HasFingerprint() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Identity) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Identity) SetFingerprint(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Identity) IsOnline() bool {
	return s.Struct.Bit(0)
}

func (s Identity) SetIsOnline(v bool) {
	s.Struct.SetBit(0, v)
}

// Identity_List is a list of Identity.
type Identity_List struct{ capnp.List }

// NewIdentity creates a new list of Identity.
func NewIdentity_List(s *capnp.Segment, sz int32) (Identity_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return Identity_List{l}, err
}

func (s Identity_List) At(i int) Identity { return Identity{s.List.Struct(i)} }

func (s Identity_List) Set(i int, v Identity) error { return s.List.SetStruct(i, v.Struct) }

func (s Identity_List) String() string {
	str, _ := text.MarshalList(0xd49a2570fb5a4342, s.List)
	return str
}

// Identity_Promise is a wrapper for a Identity promised by a client call.
type Identity_Promise struct{ *capnp.Pipeline }

func (p Identity_Promise) Struct() (Identity, error) {
	s, err := p.Pipeline.Struct()
	return Identity{s}, err
}

type MountOptions struct{ capnp.Struct }

// MountOptions_TypeID is the unique identifier for the type MountOptions.
const MountOptions_TypeID = 0xbc4d5c31427dc498

func NewMountOptions(s *capnp.Segment) (MountOptions, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return MountOptions{st}, err
}

func NewRootMountOptions(s *capnp.Segment) (MountOptions, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return MountOptions{st}, err
}

func ReadRootMountOptions(msg *capnp.Message) (MountOptions, error) {
	root, err := msg.RootPtr()
	return MountOptions{root.Struct()}, err
}

func (s MountOptions) String() string {
	str, _ := text.Marshal(0xbc4d5c31427dc498, s.Struct)
	return str
}

func (s MountOptions) ReadOnly() bool {
	return s.Struct.Bit(0)
}

func (s MountOptions) SetReadOnly(v bool) {
	s.Struct.SetBit(0, v)
}

func (s MountOptions) RootPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s MountOptions) HasRootPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s MountOptions) RootPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s MountOptions) SetRootPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s MountOptions) Offline() bool {
	return s.Struct.Bit(1)
}

func (s MountOptions) SetOffline(v bool) {
	s.Struct.SetBit(1, v)
}

// MountOptions_List is a list of MountOptions.
type MountOptions_List struct{ capnp.List }

// NewMountOptions creates a new list of MountOptions.
func NewMountOptions_List(s *capnp.Segment, sz int32) (MountOptions_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return MountOptions_List{l}, err
}

func (s MountOptions_List) At(i int) MountOptions { return MountOptions{s.List.Struct(i)} }

func (s MountOptions_List) Set(i int, v MountOptions) error { return s.List.SetStruct(i, v.Struct) }

func (s MountOptions_List) String() string {
	str, _ := text.MarshalList(0xbc4d5c31427dc498, s.List)
	return str
}

// MountOptions_Promise is a wrapper for a MountOptions promised by a client call.
type MountOptions_Promise struct{ *capnp.Pipeline }

func (p MountOptions_Promise) Struct() (MountOptions, error) {
	s, err := p.Pipeline.Struct()
	return MountOptions{s}, err
}

// Info a remote peer we might sync with
type Remote struct{ capnp.Struct }

// Remote_TypeID is the unique identifier for the type Remote.
const Remote_TypeID = 0xbe71bb7b0ed4539a

func NewRemote(s *capnp.Segment) (Remote, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Remote{st}, err
}

func NewRootRemote(s *capnp.Segment) (Remote, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return Remote{st}, err
}

func ReadRootRemote(msg *capnp.Message) (Remote, error) {
	root, err := msg.RootPtr()
	return Remote{root.Struct()}, err
}

func (s Remote) String() string {
	str, _ := text.Marshal(0xbe71bb7b0ed4539a, s.Struct)
	return str
}

func (s Remote) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Remote) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Remote) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Remote) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Remote) Fingerprint() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Remote) HasFingerprint() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Remote) FingerprintBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Remote) SetFingerprint(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Remote) Folders() (RemoteFolder_List, error) {
	p, err := s.Struct.Ptr(2)
	return RemoteFolder_List{List: p.List()}, err
}

func (s Remote) HasFolders() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Remote) SetFolders(v RemoteFolder_List) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewFolders sets the folders field to a newly
// allocated RemoteFolder_List, preferring placement in s's segment.
func (s Remote) NewFolders(n int32) (RemoteFolder_List, error) {
	l, err := NewRemoteFolder_List(s.Struct.Segment(), n)
	if err != nil {
		return RemoteFolder_List{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Remote) AcceptAutoUpdates() bool {
	return s.Struct.Bit(0)
}

func (s Remote) SetAcceptAutoUpdates(v bool) {
	s.Struct.SetBit(0, v)
}

func (s Remote) AcceptPush() bool {
	return s.Struct.Bit(1)
}

func (s Remote) SetAcceptPush(v bool) {
	s.Struct.SetBit(1, v)
}

func (s Remote) ConflictStrategy() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Remote) HasConflictStrategy() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Remote) ConflictStrategyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Remote) SetConflictStrategy(v string) error {
	return s.Struct.SetText(3, v)
}

// Remote_List is a list of Remote.
type Remote_List struct{ capnp.List }

// NewRemote creates a new list of Remote.
func NewRemote_List(s *capnp.Segment, sz int32) (Remote_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return Remote_List{l}, err
}

func (s Remote_List) At(i int) Remote { return Remote{s.List.Struct(i)} }

func (s Remote_List) Set(i int, v Remote) error { return s.List.SetStruct(i, v.Struct) }

func (s Remote_List) String() string {
	str, _ := text.MarshalList(0xbe71bb7b0ed4539a, s.List)
	return str
}

// Remote_Promise is a wrapper for a Remote promised by a client call.
type Remote_Promise struct{ *capnp.Pipeline }

func (p Remote_Promise) Struct() (Remote, error) {
	s, err := p.Pipeline.Struct()
	return Remote{s}, err
}

// net status of a remote
type RemoteStatus struct{ capnp.Struct }

// RemoteStatus_TypeID is the unique identifier for the type RemoteStatus.
const RemoteStatus_TypeID = 0xa9e401c52756826a

func NewRemoteStatus(s *capnp.Segment) (RemoteStatus, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return RemoteStatus{st}, err
}

func NewRootRemoteStatus(s *capnp.Segment) (RemoteStatus, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return RemoteStatus{st}, err
}

func ReadRootRemoteStatus(msg *capnp.Message) (RemoteStatus, error) {
	root, err := msg.RootPtr()
	return RemoteStatus{root.Struct()}, err
}

func (s RemoteStatus) String() string {
	str, _ := text.Marshal(0xa9e401c52756826a, s.Struct)
	return str
}

func (s RemoteStatus) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s RemoteStatus) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s RemoteStatus) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s RemoteStatus) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

func (s RemoteStatus) LastSeen() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s RemoteStatus) HasLastSeen() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s RemoteStatus) LastSeenBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s RemoteStatus) SetLastSeen(v string) error {
	return s.Struct.SetText(1, v)
}

func (s RemoteStatus) RoundtripMs() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s RemoteStatus) SetRoundtripMs(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

func (s RemoteStatus) Error() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s RemoteStatus) HasError() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s RemoteStatus) ErrorBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s RemoteStatus) SetError(v string) error {
	return s.Struct.SetText(2, v)
}

func (s RemoteStatus) Authenticated() bool {
	return s.Struct.Bit(32)
}

func (s RemoteStatus) SetAuthenticated(v bool) {
	s.Struct.SetBit(32, v)
}

// RemoteStatus_List is a list of RemoteStatus.
type RemoteStatus_List struct{ capnp.List }

// NewRemoteStatus creates a new list of RemoteStatus.
func NewRemoteStatus_List(s *capnp.Segment, sz int32) (RemoteStatus_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return RemoteStatus_List{l}, err
}

func (s RemoteStatus_List) At(i int) RemoteStatus { return RemoteStatus{s.List.Struct(i)} }

func (s RemoteStatus_List) Set(i int, v RemoteStatus) error { return s.List.SetStruct(i, v.Struct) }

func (s RemoteStatus_List) String() string {
	str, _ := text.MarshalList(0xa9e401c52756826a, s.List)
	return str
}

// RemoteStatus_Promise is a wrapper for a RemoteStatus promised by a client call.
type RemoteStatus_Promise struct{ *capnp.Pipeline }

func (p RemoteStatus_Promise) Struct() (RemoteStatus, error) {
	s, err := p.Pipeline.Struct()
	return RemoteStatus{s}, err
}

func (p RemoteStatus_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

// A single item that was killed by the gc
type GarbageItem struct{ capnp.Struct }

// GarbageItem_TypeID is the unique identifier for the type GarbageItem.
const GarbageItem_TypeID = 0xecb10f87fbe0d6c5

func NewGarbageItem(s *capnp.Segment) (GarbageItem, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GarbageItem{st}, err
}

func NewRootGarbageItem(s *capnp.Segment) (GarbageItem, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return GarbageItem{st}, err
}

func ReadRootGarbageItem(msg *capnp.Message) (GarbageItem, error) {
	root, err := msg.RootPtr()
	return GarbageItem{root.Struct()}, err
}

func (s GarbageItem) String() string {
	str, _ := text.Marshal(0xecb10f87fbe0d6c5, s.Struct)
	return str
}

func (s GarbageItem) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s GarbageItem) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s GarbageItem) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s GarbageItem) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s GarbageItem) Content() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return []byte(p.Data()), err
}

func (s GarbageItem) HasContent() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s GarbageItem) SetContent(v []byte) error {
	return s.Struct.SetData(1, v)
}

func (s GarbageItem) Owner() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s GarbageItem) HasOwner() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s GarbageItem) OwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s GarbageItem) SetOwner(v string) error {
	return s.Struct.SetText(2, v)
}

// GarbageItem_List is a list of GarbageItem.
type GarbageItem_List struct{ capnp.List }

// NewGarbageItem creates a new list of GarbageItem.
func NewGarbageItem_List(s *capnp.Segment, sz int32) (GarbageItem_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return GarbageItem_List{l}, err
}

func (s GarbageItem_List) At(i int) GarbageItem { return GarbageItem{s.List.Struct(i)} }

func (s GarbageItem_List) Set(i int, v GarbageItem) error { return s.List.SetStruct(i, v.Struct) }

func (s GarbageItem_List) String() string {
	str, _ := text.MarshalList(0xecb10f87fbe0d6c5, s.List)
	return str
}

// GarbageItem_Promise is a wrapper for a GarbageItem promised by a client call.
type GarbageItem_Promise struct{ *capnp.Pipeline }

func (p GarbageItem_Promise) Struct() (GarbageItem, error) {
	s, err := p.Pipeline.Struct()
	return GarbageItem{s}, err
}

type Version struct{ capnp.Struct }

// Version_TypeID is the unique identifier for the type Version.
const Version_TypeID = 0xe1b522247fc407ad

func NewVersion(s *capnp.Segment) (Version, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Version{st}, err
}

func NewRootVersion(s *capnp.Segment) (Version, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Version{st}, err
}

func ReadRootVersion(msg *capnp.Message) (Version, error) {
	root, err := msg.RootPtr()
	return Version{root.Struct()}, err
}

func (s Version) String() string {
	str, _ := text.Marshal(0xe1b522247fc407ad, s.Struct)
	return str
}

func (s Version) ServerVersion() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Version) HasServerVersion() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Version) ServerVersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Version) SetServerVersion(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Version) ServerRev() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Version) HasServerRev() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Version) ServerRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Version) SetServerRev(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Version) BackendVersion() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s Version) HasBackendVersion() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Version) BackendVersionBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s Version) SetBackendVersion(v string) error {
	return s.Struct.SetText(2, v)
}

func (s Version) BackendRev() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s Version) HasBackendRev() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Version) BackendRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s Version) SetBackendRev(v string) error {
	return s.Struct.SetText(3, v)
}

// Version_List is a list of Version.
type Version_List struct{ capnp.List }

// NewVersion creates a new list of Version.
func NewVersion_List(s *capnp.Segment, sz int32) (Version_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Version_List{l}, err
}

func (s Version_List) At(i int) Version { return Version{s.List.Struct(i)} }

func (s Version_List) Set(i int, v Version) error { return s.List.SetStruct(i, v.Struct) }

func (s Version_List) String() string {
	str, _ := text.MarshalList(0xe1b522247fc407ad, s.List)
	return str
}

// Version_Promise is a wrapper for a Version promised by a client call.
type Version_Promise struct{ *capnp.Pipeline }

func (p Version_Promise) Struct() (Version, error) {
	s, err := p.Pipeline.Struct()
	return Version{s}, err
}

type ExplicitPin struct{ capnp.Struct }

// ExplicitPin_TypeID is the unique identifier for the type ExplicitPin.
const ExplicitPin_TypeID = 0xdc876697979bc7e5

func NewExplicitPin(s *capnp.Segment) (ExplicitPin, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ExplicitPin{st}, err
}

func NewRootExplicitPin(s *capnp.Segment) (ExplicitPin, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return ExplicitPin{st}, err
}

func ReadRootExplicitPin(msg *capnp.Message) (ExplicitPin, error) {
	root, err := msg.RootPtr()
	return ExplicitPin{root.Struct()}, err
}

func (s ExplicitPin) String() string {
	str, _ := text.Marshal(0xdc876697979bc7e5, s.Struct)
	return str
}

func (s ExplicitPin) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s ExplicitPin) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s ExplicitPin) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s ExplicitPin) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s ExplicitPin) Commit() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s ExplicitPin) HasCommit() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s ExplicitPin) CommitBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s ExplicitPin) SetCommit(v string) error {
	return s.Struct.SetText(1, v)
}

// ExplicitPin_List is a list of ExplicitPin.
type ExplicitPin_List struct{ capnp.List }

// NewExplicitPin creates a new list of ExplicitPin.
func NewExplicitPin_List(s *capnp.Segment, sz int32) (ExplicitPin_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return ExplicitPin_List{l}, err
}

func (s ExplicitPin_List) At(i int) ExplicitPin { return ExplicitPin{s.List.Struct(i)} }

func (s ExplicitPin_List) Set(i int, v ExplicitPin) error { return s.List.SetStruct(i, v.Struct) }

func (s ExplicitPin_List) String() string {
	str, _ := text.MarshalList(0xdc876697979bc7e5, s.List)
	return str
}

// ExplicitPin_Promise is a wrapper for a ExplicitPin promised by a client call.
type ExplicitPin_Promise struct{ *capnp.Pipeline }

func (p ExplicitPin_Promise) Struct() (ExplicitPin, error) {
	s, err := p.Pipeline.Struct()
	return ExplicitPin{s}, err
}

type FsTabEntry struct{ capnp.Struct }

// FsTabEntry_TypeID is the unique identifier for the type FsTabEntry.
const FsTabEntry_TypeID = 0xf7da25d3ead6c0d3

func NewFsTabEntry(s *capnp.Segment) (FsTabEntry, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return FsTabEntry{st}, err
}

func NewRootFsTabEntry(s *capnp.Segment) (FsTabEntry, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3})
	return FsTabEntry{st}, err
}

func ReadRootFsTabEntry(msg *capnp.Message) (FsTabEntry, error) {
	root, err := msg.RootPtr()
	return FsTabEntry{root.Struct()}, err
}

func (s FsTabEntry) String() string {
	str, _ := text.Marshal(0xf7da25d3ead6c0d3, s.Struct)
	return str
}

func (s FsTabEntry) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FsTabEntry) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FsTabEntry) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FsTabEntry) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FsTabEntry) Path() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FsTabEntry) HasPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FsTabEntry) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FsTabEntry) SetPath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s FsTabEntry) ReadOnly() bool {
	return s.Struct.Bit(0)
}

func (s FsTabEntry) SetReadOnly(v bool) {
	s.Struct.SetBit(0, v)
}

func (s FsTabEntry) Root() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s FsTabEntry) HasRoot() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s FsTabEntry) RootBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s FsTabEntry) SetRoot(v string) error {
	return s.Struct.SetText(2, v)
}

func (s FsTabEntry) Active() bool {
	return s.Struct.Bit(1)
}

func (s FsTabEntry) SetActive(v bool) {
	s.Struct.SetBit(1, v)
}

func (s FsTabEntry) Offline() bool {
	return s.Struct.Bit(2)
}

func (s FsTabEntry) SetOffline(v bool) {
	s.Struct.SetBit(2, v)
}

// FsTabEntry_List is a list of FsTabEntry.
type FsTabEntry_List struct{ capnp.List }

// NewFsTabEntry creates a new list of FsTabEntry.
func NewFsTabEntry_List(s *capnp.Segment, sz int32) (FsTabEntry_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 3}, sz)
	return FsTabEntry_List{l}, err
}

func (s FsTabEntry_List) At(i int) FsTabEntry { return FsTabEntry{s.List.Struct(i)} }

func (s FsTabEntry_List) Set(i int, v FsTabEntry) error { return s.List.SetStruct(i, v.Struct) }

func (s FsTabEntry_List) String() string {
	str, _ := text.MarshalList(0xf7da25d3ead6c0d3, s.List)
	return str
}

// FsTabEntry_Promise is a wrapper for a FsTabEntry promised by a client call.
type FsTabEntry_Promise struct{ *capnp.Pipeline }

func (p FsTabEntry_Promise) Struct() (FsTabEntry, error) {
	s, err := p.Pipeline.Struct()
	return FsTabEntry{s}, err
}

type FS struct{ Client capnp.Client }

// FS_TypeID is the unique identifier for the type FS.
const FS_TypeID = 0xe2b3585db47cd4f9

func (c FS) Stage(ctx context.Context, params func(FS_stage_Params) error, opts ...capnp.CallOption) FS_stage_Results_Promise {
	if c.Client == nil {
		return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stage_Params{Struct: s}) }
	}
	return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) List(ctx context.Context, params func(FS_list_Params) error, opts ...capnp.CallOption) FS_list_Results_Promise {
	if c.Client == nil {
		return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_list_Params{Struct: s}) }
	}
	return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Cat(ctx context.Context, params func(FS_cat_Params) error, opts ...capnp.CallOption) FS_cat_Results_Promise {
	if c.Client == nil {
		return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_cat_Params{Struct: s}) }
	}
	return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Mkdir(ctx context.Context, params func(FS_mkdir_Params) error, opts ...capnp.CallOption) FS_mkdir_Results_Promise {
	if c.Client == nil {
		return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_mkdir_Params{Struct: s}) }
	}
	return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Remove(ctx context.Context, params func(FS_remove_Params) error, opts ...capnp.CallOption) FS_remove_Results_Promise {
	if c.Client == nil {
		return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_remove_Params{Struct: s}) }
	}
	return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Move(ctx context.Context, params func(FS_move_Params) error, opts ...capnp.CallOption) FS_move_Results_Promise {
	if c.Client == nil {
		return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_move_Params{Struct: s}) }
	}
	return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Copy(ctx context.Context, params func(FS_copy_Params) error, opts ...capnp.CallOption) FS_copy_Results_Promise {
	if c.Client == nil {
		return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_copy_Params{Struct: s}) }
	}
	return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Pin(ctx context.Context, params func(FS_pin_Params) error, opts ...capnp.CallOption) FS_pin_Results_Promise {
	if c.Client == nil {
		return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_pin_Params{Struct: s}) }
	}
	return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Unpin(ctx context.Context, params func(FS_unpin_Params) error, opts ...capnp.CallOption) FS_unpin_Results_Promise {
	if c.Client == nil {
		return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_unpin_Params{Struct: s}) }
	}
	return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Stat(ctx context.Context, params func(FS_stat_Params) error, opts ...capnp.CallOption) FS_stat_Results_Promise {
	if c.Client == nil {
		return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stat_Params{Struct: s}) }
	}
	return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) GarbageCollect(ctx context.Context, params func(FS_garbageCollect_Params) error, opts ...capnp.CallOption) FS_garbageCollect_Results_Promise {
	if c.Client == nil {
		return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_garbageCollect_Params{Struct: s}) }
	}
	return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Touch(ctx context.Context, params func(FS_touch_Params) error, opts ...capnp.CallOption) FS_touch_Results_Promise {
	if c.Client == nil {
		return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_touch_Params{Struct: s}) }
	}
	return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Exists(ctx context.Context, params func(FS_exists_Params) error, opts ...capnp.CallOption) FS_exists_Results_Promise {
	if c.Client == nil {
		return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_exists_Params{Struct: s}) }
	}
	return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Tar(ctx context.Context, params func(FS_tar_Params) error, opts ...capnp.CallOption) FS_tar_Results_Promise {
	if c.Client == nil {
		return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_tar_Params{Struct: s}) }
	}
	return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) DeletedNodes(ctx context.Context, params func(FS_deletedNodes_Params) error, opts ...capnp.CallOption) FS_deletedNodes_Results_Promise {
	if c.Client == nil {
		return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_deletedNodes_Params{Struct: s}) }
	}
	return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Undelete(ctx context.Context, params func(FS_undelete_Params) error, opts ...capnp.CallOption) FS_undelete_Results_Promise {
	if c.Client == nil {
		return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_undelete_Params{Struct: s}) }
	}
	return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) Repin(ctx context.Context, params func(FS_repin_Params) error, opts ...capnp.CallOption) FS_repin_Results_Promise {
	if c.Client == nil {
		return FS_repin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "repin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_repin_Params{Struct: s}) }
	}
	return FS_repin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) IsCached(ctx context.Context, params func(FS_isCached_Params) error, opts ...capnp.CallOption) FS_isCached_Results_Promise {
	if c.Client == nil {
		return FS_isCached_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "isCached",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_isCached_Params{Struct: s}) }
	}
	return FS_isCached_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) StageFromStream(ctx context.Context, params func(FS_stageFromStream_Params) error, opts ...capnp.CallOption) FS_stageFromStream_Results_Promise {
	if c.Client == nil {
		return FS_stageFromStream_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stageFromStream",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stageFromStream_Params{Struct: s}) }
	}
	return FS_stageFromStream_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS) RecodeStream(ctx context.Context, params func(FS_recodeStream_Params) error, opts ...capnp.CallOption) FS_recodeStream_Results_Promise {
	if c.Client == nil {
		return FS_recodeStream_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "recodeStream",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_recodeStream_Params{Struct: s}) }
	}
	return FS_recodeStream_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type FS_Server interface {
	Stage(FS_stage) error

	List(FS_list) error

	Cat(FS_cat) error

	Mkdir(FS_mkdir) error

	Remove(FS_remove) error

	Move(FS_move) error

	Copy(FS_copy) error

	Pin(FS_pin) error

	Unpin(FS_unpin) error

	Stat(FS_stat) error

	GarbageCollect(FS_garbageCollect) error

	Touch(FS_touch) error

	Exists(FS_exists) error

	Tar(FS_tar) error

	DeletedNodes(FS_deletedNodes) error

	Undelete(FS_undelete) error

	Repin(FS_repin) error

	IsCached(FS_isCached) error

	StageFromStream(FS_stageFromStream) error

	RecodeStream(FS_recodeStream) error
}

func FS_ServerToClient(s FS_Server) FS {
	c, _ := s.(server.Closer)
	return FS{Client: server.New(FS_Methods(nil, s), c)}
}

func FS_Methods(methods []server.Method, s FS_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 20)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stage{c, opts, FS_stage_Params{Struct: p}, FS_stage_Results{Struct: r}}
			return s.Stage(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_list{c, opts, FS_list_Params{Struct: p}, FS_list_Results{Struct: r}}
			return s.List(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_cat{c, opts, FS_cat_Params{Struct: p}, FS_cat_Results{Struct: r}}
			return s.Cat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_mkdir{c, opts, FS_mkdir_Params{Struct: p}, FS_mkdir_Results{Struct: r}}
			return s.Mkdir(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_remove{c, opts, FS_remove_Params{Struct: p}, FS_remove_Results{Struct: r}}
			return s.Remove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_move{c, opts, FS_move_Params{Struct: p}, FS_move_Results{Struct: r}}
			return s.Move(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_copy{c, opts, FS_copy_Params{Struct: p}, FS_copy_Results{Struct: r}}
			return s.Copy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_pin{c, opts, FS_pin_Params{Struct: p}, FS_pin_Results{Struct: r}}
			return s.Pin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_unpin{c, opts, FS_unpin_Params{Struct: p}, FS_unpin_Results{Struct: r}}
			return s.Unpin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stat{c, opts, FS_stat_Params{Struct: p}, FS_stat_Results{Struct: r}}
			return s.Stat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_garbageCollect{c, opts, FS_garbageCollect_Params{Struct: p}, FS_garbageCollect_Results{Struct: r}}
			return s.GarbageCollect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_touch{c, opts, FS_touch_Params{Struct: p}, FS_touch_Results{Struct: r}}
			return s.Touch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_exists{c, opts, FS_exists_Params{Struct: p}, FS_exists_Results{Struct: r}}
			return s.Exists(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_tar{c, opts, FS_tar_Params{Struct: p}, FS_tar_Results{Struct: r}}
			return s.Tar(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_deletedNodes{c, opts, FS_deletedNodes_Params{Struct: p}, FS_deletedNodes_Results{Struct: r}}
			return s.DeletedNodes(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_undelete{c, opts, FS_undelete_Params{Struct: p}, FS_undelete_Results{Struct: r}}
			return s.Undelete(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "repin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_repin{c, opts, FS_repin_Params{Struct: p}, FS_repin_Results{Struct: r}}
			return s.Repin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "isCached",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_isCached{c, opts, FS_isCached_Params{Struct: p}, FS_isCached_Results{Struct: r}}
			return s.IsCached(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stageFromStream",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stageFromStream{c, opts, FS_stageFromStream_Params{Struct: p}, FS_stageFromStream_Results{Struct: r}}
			return s.StageFromStream(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "recodeStream",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_recodeStream{c, opts, FS_recodeStream_Params{Struct: p}, FS_recodeStream_Results{Struct: r}}
			return s.RecodeStream(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// FS_stage holds the arguments for a server call to FS.stage.
type FS_stage struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_stage_Params
	Results FS_stage_Results
}

// FS_list holds the arguments for a server call to FS.list.
type FS_list struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_list_Params
	Results FS_list_Results
}

// FS_cat holds the arguments for a server call to FS.cat.
type FS_cat struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_cat_Params
	Results FS_cat_Results
}

// FS_mkdir holds the arguments for a server call to FS.mkdir.
type FS_mkdir struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_mkdir_Params
	Results FS_mkdir_Results
}

// FS_remove holds the arguments for a server call to FS.remove.
type FS_remove struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_remove_Params
	Results FS_remove_Results
}

// FS_move holds the arguments for a server call to FS.move.
type FS_move struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_move_Params
	Results FS_move_Results
}

// FS_copy holds the arguments for a server call to FS.copy.
type FS_copy struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_copy_Params
	Results FS_copy_Results
}

// FS_pin holds the arguments for a server call to FS.pin.
type FS_pin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_pin_Params
	Results FS_pin_Results
}

// FS_unpin holds the arguments for a server call to FS.unpin.
type FS_unpin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_unpin_Params
	Results FS_unpin_Results
}

// FS_stat holds the arguments for a server call to FS.stat.
type FS_stat struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_stat_Params
	Results FS_stat_Results
}

// FS_garbageCollect holds the arguments for a server call to FS.garbageCollect.
type FS_garbageCollect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_garbageCollect_Params
	Results FS_garbageCollect_Results
}

// FS_touch holds the arguments for a server call to FS.touch.
type FS_touch struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_touch_Params
	Results FS_touch_Results
}

// FS_exists holds the arguments for a server call to FS.exists.
type FS_exists struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_exists_Params
	Results FS_exists_Results
}

// FS_tar holds the arguments for a server call to FS.tar.
type FS_tar struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_tar_Params
	Results FS_tar_Results
}

// FS_deletedNodes holds the arguments for a server call to FS.deletedNodes.
type FS_deletedNodes struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_deletedNodes_Params
	Results FS_deletedNodes_Results
}

// FS_undelete holds the arguments for a server call to FS.undelete.
type FS_undelete struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_undelete_Params
	Results FS_undelete_Results
}

// FS_repin holds the arguments for a server call to FS.repin.
type FS_repin struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_repin_Params
	Results FS_repin_Results
}

// FS_isCached holds the arguments for a server call to FS.isCached.
type FS_isCached struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_isCached_Params
	Results FS_isCached_Results
}

// FS_stageFromStream holds the arguments for a server call to FS.stageFromStream.
type FS_stageFromStream struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_stageFromStream_Params
	Results FS_stageFromStream_Results
}

// FS_recodeStream holds the arguments for a server call to FS.recodeStream.
type FS_recodeStream struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_recodeStream_Params
	Results FS_recodeStream_Results
}

type FS_StageStream struct{ Client capnp.Client }

// FS_StageStream_TypeID is the unique identifier for the type FS_StageStream.
const FS_StageStream_TypeID = 0xb14deff4ede8084c

func (c FS_StageStream) SendChunk(ctx context.Context, params func(FS_StageStream_sendChunk_Params) error, opts ...capnp.CallOption) FS_StageStream_sendChunk_Results_Promise {
	if c.Client == nil {
		return FS_StageStream_sendChunk_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb14deff4ede8084c,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS.StageStream",
			MethodName:    "sendChunk",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_StageStream_sendChunk_Params{Struct: s}) }
	}
	return FS_StageStream_sendChunk_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c FS_StageStream) Done(ctx context.Context, params func(FS_StageStream_done_Params) error, opts ...capnp.CallOption) FS_StageStream_done_Results_Promise {
	if c.Client == nil {
		return FS_StageStream_done_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xb14deff4ede8084c,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS.StageStream",
			MethodName:    "done",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_StageStream_done_Params{Struct: s}) }
	}
	return FS_StageStream_done_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type FS_StageStream_Server interface {
	SendChunk(FS_StageStream_sendChunk) error

	Done(FS_StageStream_done) error
}

func FS_StageStream_ServerToClient(s FS_StageStream_Server) FS_StageStream {
	c, _ := s.(server.Closer)
	return FS_StageStream{Client: server.New(FS_StageStream_Methods(nil, s), c)}
}

func FS_StageStream_Methods(methods []server.Method, s FS_StageStream_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 2)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb14deff4ede8084c,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS.StageStream",
			MethodName:    "sendChunk",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_StageStream_sendChunk{c, opts, FS_StageStream_sendChunk_Params{Struct: p}, FS_StageStream_sendChunk_Results{Struct: r}}
			return s.SendChunk(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xb14deff4ede8084c,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS.StageStream",
			MethodName:    "done",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_StageStream_done{c, opts, FS_StageStream_done_Params{Struct: p}, FS_StageStream_done_Results{Struct: r}}
			return s.Done(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// FS_StageStream_sendChunk holds the arguments for a server call to FS_StageStream.sendChunk.
type FS_StageStream_sendChunk struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_StageStream_sendChunk_Params
	Results FS_StageStream_sendChunk_Results
}

// FS_StageStream_done holds the arguments for a server call to FS_StageStream.done.
type FS_StageStream_done struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  FS_StageStream_done_Params
	Results FS_StageStream_done_Results
}

type FS_StageStream_sendChunk_Params struct{ capnp.Struct }

// FS_StageStream_sendChunk_Params_TypeID is the unique identifier for the type FS_StageStream_sendChunk_Params.
const FS_StageStream_sendChunk_Params_TypeID = 0xf09939b7753e795c

func NewFS_StageStream_sendChunk_Params(s *capnp.Segment) (FS_StageStream_sendChunk_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_StageStream_sendChunk_Params{st}, err
}

func NewRootFS_StageStream_sendChunk_Params(s *capnp.Segment) (FS_StageStream_sendChunk_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_StageStream_sendChunk_Params{st}, err
}

func ReadRootFS_StageStream_sendChunk_Params(msg *capnp.Message) (FS_StageStream_sendChunk_Params, error) {
	root, err := msg.RootPtr()
	return FS_StageStream_sendChunk_Params{root.Struct()}, err
}

func (s FS_StageStream_sendChunk_Params) String() string {
	str, _ := text.Marshal(0xf09939b7753e795c, s.Struct)
	return str
}

func (s FS_StageStream_sendChunk_Params) Chunk() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s FS_StageStream_sendChunk_Params) HasChunk() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_StageStream_sendChunk_Params) SetChunk(v []byte) error {
	return s.Struct.SetData(0, v)
}

// FS_StageStream_sendChunk_Params_List is a list of FS_StageStream_sendChunk_Params.
type FS_StageStream_sendChunk_Params_List struct{ capnp.List }

// NewFS_StageStream_sendChunk_Params creates a new list of FS_StageStream_sendChunk_Params.
func NewFS_StageStream_sendChunk_Params_List(s *capnp.Segment, sz int32) (FS_StageStream_sendChunk_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_StageStream_sendChunk_Params_List{l}, err
}

func (s FS_StageStream_sendChunk_Params_List) At(i int) FS_StageStream_sendChunk_Params {
	return FS_StageStream_sendChunk_Params{s.List.Struct(i)}
}

func (s FS_StageStream_sendChunk_Params_List) Set(i int, v FS_StageStream_sendChunk_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_StageStream_sendChunk_Params_List) String() string {
	str, _ := text.MarshalList(0xf09939b7753e795c, s.List)
	return str
}

// FS_StageStream_sendChunk_Params_Promise is a wrapper for a FS_StageStream_sendChunk_Params promised by a client call.
type FS_StageStream_sendChunk_Params_Promise struct{ *capnp.Pipeline }

func (p FS_StageStream_sendChunk_Params_Promise) Struct() (FS_StageStream_sendChunk_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_StageStream_sendChunk_Params{s}, err
}

type FS_StageStream_sendChunk_Results struct{ capnp.Struct }

// FS_StageStream_sendChunk_Results_TypeID is the unique identifier for the type FS_StageStream_sendChunk_Results.
const FS_StageStream_sendChunk_Results_TypeID = 0xd36e267b961bffd3

func NewFS_StageStream_sendChunk_Results(s *capnp.Segment) (FS_StageStream_sendChunk_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_StageStream_sendChunk_Results{st}, err
}

func NewRootFS_StageStream_sendChunk_Results(s *capnp.Segment) (FS_StageStream_sendChunk_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_StageStream_sendChunk_Results{st}, err
}

func ReadRootFS_StageStream_sendChunk_Results(msg *capnp.Message) (FS_StageStream_sendChunk_Results, error) {
	root, err := msg.RootPtr()
	return FS_StageStream_sendChunk_Results{root.Struct()}, err
}

func (s FS_StageStream_sendChunk_Results) String() string {
	str, _ := text.Marshal(0xd36e267b961bffd3, s.Struct)
	return str
}

// FS_StageStream_sendChunk_Results_List is a list of FS_StageStream_sendChunk_Results.
type FS_StageStream_sendChunk_Results_List struct{ capnp.List }

// NewFS_StageStream_sendChunk_Results creates a new list of FS_StageStream_sendChunk_Results.
func NewFS_StageStream_sendChunk_Results_List(s *capnp.Segment, sz int32) (FS_StageStream_sendChunk_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_StageStream_sendChunk_Results_List{l}, err
}

func (s FS_StageStream_sendChunk_Results_List) At(i int) FS_StageStream_sendChunk_Results {
	return FS_StageStream_sendChunk_Results{s.List.Struct(i)}
}

func (s FS_StageStream_sendChunk_Results_List) Set(i int, v FS_StageStream_sendChunk_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_StageStream_sendChunk_Results_List) String() string {
	str, _ := text.MarshalList(0xd36e267b961bffd3, s.List)
	return str
}

// FS_StageStream_sendChunk_Results_Promise is a wrapper for a FS_StageStream_sendChunk_Results promised by a client call.
type FS_StageStream_sendChunk_Results_Promise struct{ *capnp.Pipeline }

func (p FS_StageStream_sendChunk_Results_Promise) Struct() (FS_StageStream_sendChunk_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_StageStream_sendChunk_Results{s}, err
}

type FS_StageStream_done_Params struct{ capnp.Struct }

// FS_StageStream_done_Params_TypeID is the unique identifier for the type FS_StageStream_done_Params.
const FS_StageStream_done_Params_TypeID = 0xfbae9f53eadd9cda

func NewFS_StageStream_done_Params(s *capnp.Segment) (FS_StageStream_done_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_StageStream_done_Params{st}, err
}

func NewRootFS_StageStream_done_Params(s *capnp.Segment) (FS_StageStream_done_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_StageStream_done_Params{st}, err
}

func ReadRootFS_StageStream_done_Params(msg *capnp.Message) (FS_StageStream_done_Params, error) {
	root, err := msg.RootPtr()
	return FS_StageStream_done_Params{root.Struct()}, err
}

func (s FS_StageStream_done_Params) String() string {
	str, _ := text.Marshal(0xfbae9f53eadd9cda, s.Struct)
	return str
}

// FS_StageStream_done_Params_List is a list of FS_StageStream_done_Params.
type FS_StageStream_done_Params_List struct{ capnp.List }

// NewFS_StageStream_done_Params creates a new list of FS_StageStream_done_Params.
func NewFS_StageStream_done_Params_List(s *capnp.Segment, sz int32) (FS_StageStream_done_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_StageStream_done_Params_List{l}, err
}

func (s FS_StageStream_done_Params_List) At(i int) FS_StageStream_done_Params {
	return FS_StageStream_done_Params{s.List.Struct(i)}
}

func (s FS_StageStream_done_Params_List) Set(i int, v FS_StageStream_done_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_StageStream_done_Params_List) String() string {
	str, _ := text.MarshalList(0xfbae9f53eadd9cda, s.List)
	return str
}

// FS_StageStream_done_Params_Promise is a wrapper for a FS_StageStream_done_Params promised by a client call.
type FS_StageStream_done_Params_Promise struct{ *capnp.Pipeline }

func (p FS_StageStream_done_Params_Promise) Struct() (FS_StageStream_done_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_StageStream_done_Params{s}, err
}

type FS_StageStream_done_Results struct{ capnp.Struct }

// FS_StageStream_done_Results_TypeID is the unique identifier for the type FS_StageStream_done_Results.
const FS_StageStream_done_Results_TypeID = 0xa6e50865be515244

func NewFS_StageStream_done_Results(s *capnp.Segment) (FS_StageStream_done_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_StageStream_done_Results{st}, err
}

func NewRootFS_StageStream_done_Results(s *capnp.Segment) (FS_StageStream_done_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_StageStream_done_Results{st}, err
}

func ReadRootFS_StageStream_done_Results(msg *capnp.Message) (FS_StageStream_done_Results, error) {
	root, err := msg.RootPtr()
	return FS_StageStream_done_Results{root.Struct()}, err
}

func (s FS_StageStream_done_Results) String() string {
	str, _ := text.Marshal(0xa6e50865be515244, s.Struct)
	return str
}

// FS_StageStream_done_Results_List is a list of FS_StageStream_done_Results.
type FS_StageStream_done_Results_List struct{ capnp.List }

// NewFS_StageStream_done_Results creates a new list of FS_StageStream_done_Results.
func NewFS_StageStream_done_Results_List(s *capnp.Segment, sz int32) (FS_StageStream_done_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_StageStream_done_Results_List{l}, err
}

func (s FS_StageStream_done_Results_List) At(i int) FS_StageStream_done_Results {
	return FS_StageStream_done_Results{s.List.Struct(i)}
}

func (s FS_StageStream_done_Results_List) Set(i int, v FS_StageStream_done_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_StageStream_done_Results_List) String() string {
	str, _ := text.MarshalList(0xa6e50865be515244, s.List)
	return str
}

// FS_StageStream_done_Results_Promise is a wrapper for a FS_StageStream_done_Results promised by a client call.
type FS_StageStream_done_Results_Promise struct{ *capnp.Pipeline }

func (p FS_StageStream_done_Results_Promise) Struct() (FS_StageStream_done_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_StageStream_done_Results{s}, err
}

type FS_stage_Params struct{ capnp.Struct }

// FS_stage_Params_TypeID is the unique identifier for the type FS_stage_Params.
const FS_stage_Params_TypeID = 0x9ba7a818970a029c

func NewFS_stage_Params(s *capnp.Segment) (FS_stage_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_stage_Params{st}, err
}

func NewRootFS_stage_Params(s *capnp.Segment) (FS_stage_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_stage_Params{st}, err
}

func ReadRootFS_stage_Params(msg *capnp.Message) (FS_stage_Params, error) {
	root, err := msg.RootPtr()
	return FS_stage_Params{root.Struct()}, err
}

func (s FS_stage_Params) String() string {
	str, _ := text.Marshal(0x9ba7a818970a029c, s.Struct)
	return str
}

func (s FS_stage_Params) LocalPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_stage_Params) HasLocalPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stage_Params) LocalPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_stage_Params) SetLocalPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_stage_Params) RepoPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_stage_Params) HasRepoPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_stage_Params) RepoPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_stage_Params) SetRepoPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_stage_Params_List is a list of FS_stage_Params.
type FS_stage_Params_List struct{ capnp.List }

// NewFS_stage_Params creates a new list of FS_stage_Params.
func NewFS_stage_Params_List(s *capnp.Segment, sz int32) (FS_stage_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_stage_Params_List{l}, err
}

func (s FS_stage_Params_List) At(i int) FS_stage_Params { return FS_stage_Params{s.List.Struct(i)} }

func (s FS_stage_Params_List) Set(i int, v FS_stage_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stage_Params_List) String() string {
	str, _ := text.MarshalList(0x9ba7a818970a029c, s.List)
	return str
}

// FS_stage_Params_Promise is a wrapper for a FS_stage_Params promised by a client call.
type FS_stage_Params_Promise struct{ *capnp.Pipeline }

func (p FS_stage_Params_Promise) Struct() (FS_stage_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_stage_Params{s}, err
}

type FS_stage_Results struct{ capnp.Struct }

// FS_stage_Results_TypeID is the unique identifier for the type FS_stage_Results.
const FS_stage_Results_TypeID = 0x884238694e8b8d88

func NewFS_stage_Results(s *capnp.Segment) (FS_stage_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_stage_Results{st}, err
}

func NewRootFS_stage_Results(s *capnp.Segment) (FS_stage_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_stage_Results{st}, err
}

func ReadRootFS_stage_Results(msg *capnp.Message) (FS_stage_Results, error) {
	root, err := msg.RootPtr()
	return FS_stage_Results{root.Struct()}, err
}

func (s FS_stage_Results) String() string {
	str, _ := text.Marshal(0x884238694e8b8d88, s.Struct)
	return str
}

// FS_stage_Results_List is a list of FS_stage_Results.
type FS_stage_Results_List struct{ capnp.List }

// NewFS_stage_Results creates a new list of FS_stage_Results.
func NewFS_stage_Results_List(s *capnp.Segment, sz int32) (FS_stage_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_stage_Results_List{l}, err
}

func (s FS_stage_Results_List) At(i int) FS_stage_Results { return FS_stage_Results{s.List.Struct(i)} }

func (s FS_stage_Results_List) Set(i int, v FS_stage_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stage_Results_List) String() string {
	str, _ := text.MarshalList(0x884238694e8b8d88, s.List)
	return str
}

// FS_stage_Results_Promise is a wrapper for a FS_stage_Results promised by a client call.
type FS_stage_Results_Promise struct{ *capnp.Pipeline }

func (p FS_stage_Results_Promise) Struct() (FS_stage_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_stage_Results{s}, err
}

type FS_list_Params struct{ capnp.Struct }

// FS_list_Params_TypeID is the unique identifier for the type FS_list_Params.
const FS_list_Params_TypeID = 0xfd86771dd5950237

func NewFS_list_Params(s *capnp.Segment) (FS_list_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_list_Params{st}, err
}

func NewRootFS_list_Params(s *capnp.Segment) (FS_list_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_list_Params{st}, err
}

func ReadRootFS_list_Params(msg *capnp.Message) (FS_list_Params, error) {
	root, err := msg.RootPtr()
	return FS_list_Params{root.Struct()}, err
}

func (s FS_list_Params) String() string {
	str, _ := text.Marshal(0xfd86771dd5950237, s.Struct)
	return str
}

func (s FS_list_Params) Root() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_list_Params) HasRoot() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_list_Params) RootBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_list_Params) SetRoot(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_list_Params) MaxDepth() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_list_Params) SetMaxDepth(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_list_Params_List is a list of FS_list_Params.
type FS_list_Params_List struct{ capnp.List }

// NewFS_list_Params creates a new list of FS_list_Params.
func NewFS_list_Params_List(s *capnp.Segment, sz int32) (FS_list_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_list_Params_List{l}, err
}

func (s FS_list_Params_List) At(i int) FS_list_Params { return FS_list_Params{s.List.Struct(i)} }

func (s FS_list_Params_List) Set(i int, v FS_list_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_list_Params_List) String() string {
	str, _ := text.MarshalList(0xfd86771dd5950237, s.List)
	return str
}

// FS_list_Params_Promise is a wrapper for a FS_list_Params promised by a client call.
type FS_list_Params_Promise struct{ *capnp.Pipeline }

func (p FS_list_Params_Promise) Struct() (FS_list_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_list_Params{s}, err
}

type FS_list_Results struct{ capnp.Struct }

// FS_list_Results_TypeID is the unique identifier for the type FS_list_Results.
const FS_list_Results_TypeID = 0xe92935bf20cc2856

func NewFS_list_Results(s *capnp.Segment) (FS_list_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_list_Results{st}, err
}

func NewRootFS_list_Results(s *capnp.Segment) (FS_list_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_list_Results{st}, err
}

func ReadRootFS_list_Results(msg *capnp.Message) (FS_list_Results, error) {
	root, err := msg.RootPtr()
	return FS_list_Results{root.Struct()}, err
}

func (s FS_list_Results) String() string {
	str, _ := text.Marshal(0xe92935bf20cc2856, s.Struct)
	return str
}

func (s FS_list_Results) Entries() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s FS_list_Results) HasEntries() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_list_Results) SetEntries(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s FS_list_Results) NewEntries(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_list_Results_List is a list of FS_list_Results.
type FS_list_Results_List struct{ capnp.List }

// NewFS_list_Results creates a new list of FS_list_Results.
func NewFS_list_Results_List(s *capnp.Segment, sz int32) (FS_list_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_list_Results_List{l}, err
}

func (s FS_list_Results_List) At(i int) FS_list_Results { return FS_list_Results{s.List.Struct(i)} }

func (s FS_list_Results_List) Set(i int, v FS_list_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_list_Results_List) String() string {
	str, _ := text.MarshalList(0xe92935bf20cc2856, s.List)
	return str
}

// FS_list_Results_Promise is a wrapper for a FS_list_Results promised by a client call.
type FS_list_Results_Promise struct{ *capnp.Pipeline }

func (p FS_list_Results_Promise) Struct() (FS_list_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_list_Results{s}, err
}

type FS_cat_Params struct{ capnp.Struct }

// FS_cat_Params_TypeID is the unique identifier for the type FS_cat_Params.
const FS_cat_Params_TypeID = 0xa9095b4cff1e5634

func NewFS_cat_Params(s *capnp.Segment) (FS_cat_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_cat_Params{st}, err
}

func NewRootFS_cat_Params(s *capnp.Segment) (FS_cat_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_cat_Params{st}, err
}

func ReadRootFS_cat_Params(msg *capnp.Message) (FS_cat_Params, error) {
	root, err := msg.RootPtr()
	return FS_cat_Params{root.Struct()}, err
}

func (s FS_cat_Params) String() string {
	str, _ := text.Marshal(0xa9095b4cff1e5634, s.Struct)
	return str
}

func (s FS_cat_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_cat_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_cat_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_cat_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_cat_Params) Offline() bool {
	return s.Struct.Bit(0)
}

func (s FS_cat_Params) SetOffline(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_cat_Params_List is a list of FS_cat_Params.
type FS_cat_Params_List struct{ capnp.List }

// NewFS_cat_Params creates a new list of FS_cat_Params.
func NewFS_cat_Params_List(s *capnp.Segment, sz int32) (FS_cat_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_cat_Params_List{l}, err
}

func (s FS_cat_Params_List) At(i int) FS_cat_Params { return FS_cat_Params{s.List.Struct(i)} }

func (s FS_cat_Params_List) Set(i int, v FS_cat_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_cat_Params_List) String() string {
	str, _ := text.MarshalList(0xa9095b4cff1e5634, s.List)
	return str
}

// FS_cat_Params_Promise is a wrapper for a FS_cat_Params promised by a client call.
type FS_cat_Params_Promise struct{ *capnp.Pipeline }

func (p FS_cat_Params_Promise) Struct() (FS_cat_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_cat_Params{s}, err
}

type FS_cat_Results struct{ capnp.Struct }

// FS_cat_Results_TypeID is the unique identifier for the type FS_cat_Results.
const FS_cat_Results_TypeID = 0x9fe8d2cd92c27a38

func NewFS_cat_Results(s *capnp.Segment) (FS_cat_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_cat_Results{st}, err
}

func NewRootFS_cat_Results(s *capnp.Segment) (FS_cat_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_cat_Results{st}, err
}

func ReadRootFS_cat_Results(msg *capnp.Message) (FS_cat_Results, error) {
	root, err := msg.RootPtr()
	return FS_cat_Results{root.Struct()}, err
}

func (s FS_cat_Results) String() string {
	str, _ := text.Marshal(0x9fe8d2cd92c27a38, s.Struct)
	return str
}

func (s FS_cat_Results) Port() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_cat_Results) SetPort(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_cat_Results_List is a list of FS_cat_Results.
type FS_cat_Results_List struct{ capnp.List }

// NewFS_cat_Results creates a new list of FS_cat_Results.
func NewFS_cat_Results_List(s *capnp.Segment, sz int32) (FS_cat_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_cat_Results_List{l}, err
}

func (s FS_cat_Results_List) At(i int) FS_cat_Results { return FS_cat_Results{s.List.Struct(i)} }

func (s FS_cat_Results_List) Set(i int, v FS_cat_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_cat_Results_List) String() string {
	str, _ := text.MarshalList(0x9fe8d2cd92c27a38, s.List)
	return str
}

// FS_cat_Results_Promise is a wrapper for a FS_cat_Results promised by a client call.
type FS_cat_Results_Promise struct{ *capnp.Pipeline }

func (p FS_cat_Results_Promise) Struct() (FS_cat_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_cat_Results{s}, err
}

type FS_mkdir_Params struct{ capnp.Struct }

// FS_mkdir_Params_TypeID is the unique identifier for the type FS_mkdir_Params.
const FS_mkdir_Params_TypeID = 0xb030fc18cb3b0e61

func NewFS_mkdir_Params(s *capnp.Segment) (FS_mkdir_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_mkdir_Params{st}, err
}

func NewRootFS_mkdir_Params(s *capnp.Segment) (FS_mkdir_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_mkdir_Params{st}, err
}

func ReadRootFS_mkdir_Params(msg *capnp.Message) (FS_mkdir_Params, error) {
	root, err := msg.RootPtr()
	return FS_mkdir_Params{root.Struct()}, err
}

func (s FS_mkdir_Params) String() string {
	str, _ := text.Marshal(0xb030fc18cb3b0e61, s.Struct)
	return str
}

func (s FS_mkdir_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_mkdir_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_mkdir_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_mkdir_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_mkdir_Params) CreateParents() bool {
	return s.Struct.Bit(0)
}

func (s FS_mkdir_Params) SetCreateParents(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_mkdir_Params_List is a list of FS_mkdir_Params.
type FS_mkdir_Params_List struct{ capnp.List }

// NewFS_mkdir_Params creates a new list of FS_mkdir_Params.
func NewFS_mkdir_Params_List(s *capnp.Segment, sz int32) (FS_mkdir_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_mkdir_Params_List{l}, err
}

func (s FS_mkdir_Params_List) At(i int) FS_mkdir_Params { return FS_mkdir_Params{s.List.Struct(i)} }

func (s FS_mkdir_Params_List) Set(i int, v FS_mkdir_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_mkdir_Params_List) String() string {
	str, _ := text.MarshalList(0xb030fc18cb3b0e61, s.List)
	return str
}

// FS_mkdir_Params_Promise is a wrapper for a FS_mkdir_Params promised by a client call.
type FS_mkdir_Params_Promise struct{ *capnp.Pipeline }

func (p FS_mkdir_Params_Promise) Struct() (FS_mkdir_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_mkdir_Params{s}, err
}

type FS_mkdir_Results struct{ capnp.Struct }

// FS_mkdir_Results_TypeID is the unique identifier for the type FS_mkdir_Results.
const FS_mkdir_Results_TypeID = 0xf3243256580294f3

func NewFS_mkdir_Results(s *capnp.Segment) (FS_mkdir_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_mkdir_Results{st}, err
}

func NewRootFS_mkdir_Results(s *capnp.Segment) (FS_mkdir_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_mkdir_Results{st}, err
}

func ReadRootFS_mkdir_Results(msg *capnp.Message) (FS_mkdir_Results, error) {
	root, err := msg.RootPtr()
	return FS_mkdir_Results{root.Struct()}, err
}

func (s FS_mkdir_Results) String() string {
	str, _ := text.Marshal(0xf3243256580294f3, s.Struct)
	return str
}

// FS_mkdir_Results_List is a list of FS_mkdir_Results.
type FS_mkdir_Results_List struct{ capnp.List }

// NewFS_mkdir_Results creates a new list of FS_mkdir_Results.
func NewFS_mkdir_Results_List(s *capnp.Segment, sz int32) (FS_mkdir_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_mkdir_Results_List{l}, err
}

func (s FS_mkdir_Results_List) At(i int) FS_mkdir_Results { return FS_mkdir_Results{s.List.Struct(i)} }

func (s FS_mkdir_Results_List) Set(i int, v FS_mkdir_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_mkdir_Results_List) String() string {
	str, _ := text.MarshalList(0xf3243256580294f3, s.List)
	return str
}

// FS_mkdir_Results_Promise is a wrapper for a FS_mkdir_Results promised by a client call.
type FS_mkdir_Results_Promise struct{ *capnp.Pipeline }

func (p FS_mkdir_Results_Promise) Struct() (FS_mkdir_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_mkdir_Results{s}, err
}

type FS_remove_Params struct{ capnp.Struct }

// FS_remove_Params_TypeID is the unique identifier for the type FS_remove_Params.
const FS_remove_Params_TypeID = 0xa99c622e110c1203

func NewFS_remove_Params(s *capnp.Segment) (FS_remove_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_remove_Params{st}, err
}

func NewRootFS_remove_Params(s *capnp.Segment) (FS_remove_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_remove_Params{st}, err
}

func ReadRootFS_remove_Params(msg *capnp.Message) (FS_remove_Params, error) {
	root, err := msg.RootPtr()
	return FS_remove_Params{root.Struct()}, err
}

func (s FS_remove_Params) String() string {
	str, _ := text.Marshal(0xa99c622e110c1203, s.Struct)
	return str
}

func (s FS_remove_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_remove_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_remove_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_remove_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_remove_Params_List is a list of FS_remove_Params.
type FS_remove_Params_List struct{ capnp.List }

// NewFS_remove_Params creates a new list of FS_remove_Params.
func NewFS_remove_Params_List(s *capnp.Segment, sz int32) (FS_remove_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_remove_Params_List{l}, err
}

func (s FS_remove_Params_List) At(i int) FS_remove_Params { return FS_remove_Params{s.List.Struct(i)} }

func (s FS_remove_Params_List) Set(i int, v FS_remove_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_remove_Params_List) String() string {
	str, _ := text.MarshalList(0xa99c622e110c1203, s.List)
	return str
}

// FS_remove_Params_Promise is a wrapper for a FS_remove_Params promised by a client call.
type FS_remove_Params_Promise struct{ *capnp.Pipeline }

func (p FS_remove_Params_Promise) Struct() (FS_remove_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_remove_Params{s}, err
}

type FS_remove_Results struct{ capnp.Struct }

// FS_remove_Results_TypeID is the unique identifier for the type FS_remove_Results.
const FS_remove_Results_TypeID = 0xc9b3a8263f6853d7

func NewFS_remove_Results(s *capnp.Segment) (FS_remove_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_remove_Results{st}, err
}

func NewRootFS_remove_Results(s *capnp.Segment) (FS_remove_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_remove_Results{st}, err
}

func ReadRootFS_remove_Results(msg *capnp.Message) (FS_remove_Results, error) {
	root, err := msg.RootPtr()
	return FS_remove_Results{root.Struct()}, err
}

func (s FS_remove_Results) String() string {
	str, _ := text.Marshal(0xc9b3a8263f6853d7, s.Struct)
	return str
}

// FS_remove_Results_List is a list of FS_remove_Results.
type FS_remove_Results_List struct{ capnp.List }

// NewFS_remove_Results creates a new list of FS_remove_Results.
func NewFS_remove_Results_List(s *capnp.Segment, sz int32) (FS_remove_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_remove_Results_List{l}, err
}

func (s FS_remove_Results_List) At(i int) FS_remove_Results {
	return FS_remove_Results{s.List.Struct(i)}
}

func (s FS_remove_Results_List) Set(i int, v FS_remove_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_remove_Results_List) String() string {
	str, _ := text.MarshalList(0xc9b3a8263f6853d7, s.List)
	return str
}

// FS_remove_Results_Promise is a wrapper for a FS_remove_Results promised by a client call.
type FS_remove_Results_Promise struct{ *capnp.Pipeline }

func (p FS_remove_Results_Promise) Struct() (FS_remove_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_remove_Results{s}, err
}

type FS_move_Params struct{ capnp.Struct }

// FS_move_Params_TypeID is the unique identifier for the type FS_move_Params.
const FS_move_Params_TypeID = 0xb76f3dc1dcf4fdf1

func NewFS_move_Params(s *capnp.Segment) (FS_move_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_move_Params{st}, err
}

func NewRootFS_move_Params(s *capnp.Segment) (FS_move_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_move_Params{st}, err
}

func ReadRootFS_move_Params(msg *capnp.Message) (FS_move_Params, error) {
	root, err := msg.RootPtr()
	return FS_move_Params{root.Struct()}, err
}

func (s FS_move_Params) String() string {
	str, _ := text.Marshal(0xb76f3dc1dcf4fdf1, s.Struct)
	return str
}

func (s FS_move_Params) SrcPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_move_Params) HasSrcPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_move_Params) SrcPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_move_Params) SetSrcPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_move_Params) DstPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_move_Params) HasDstPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_move_Params) DstPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_move_Params) SetDstPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_move_Params_List is a list of FS_move_Params.
type FS_move_Params_List struct{ capnp.List }

// NewFS_move_Params creates a new list of FS_move_Params.
func NewFS_move_Params_List(s *capnp.Segment, sz int32) (FS_move_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_move_Params_List{l}, err
}

func (s FS_move_Params_List) At(i int) FS_move_Params { return FS_move_Params{s.List.Struct(i)} }

func (s FS_move_Params_List) Set(i int, v FS_move_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_move_Params_List) String() string {
	str, _ := text.MarshalList(0xb76f3dc1dcf4fdf1, s.List)
	return str
}

// FS_move_Params_Promise is a wrapper for a FS_move_Params promised by a client call.
type FS_move_Params_Promise struct{ *capnp.Pipeline }

func (p FS_move_Params_Promise) Struct() (FS_move_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_move_Params{s}, err
}

type FS_move_Results struct{ capnp.Struct }

// FS_move_Results_TypeID is the unique identifier for the type FS_move_Results.
const FS_move_Results_TypeID = 0xab89c6fc9bf26f2a

func NewFS_move_Results(s *capnp.Segment) (FS_move_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_move_Results{st}, err
}

func NewRootFS_move_Results(s *capnp.Segment) (FS_move_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_move_Results{st}, err
}

func ReadRootFS_move_Results(msg *capnp.Message) (FS_move_Results, error) {
	root, err := msg.RootPtr()
	return FS_move_Results{root.Struct()}, err
}

func (s FS_move_Results) String() string {
	str, _ := text.Marshal(0xab89c6fc9bf26f2a, s.Struct)
	return str
}

// FS_move_Results_List is a list of FS_move_Results.
type FS_move_Results_List struct{ capnp.List }

// NewFS_move_Results creates a new list of FS_move_Results.
func NewFS_move_Results_List(s *capnp.Segment, sz int32) (FS_move_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_move_Results_List{l}, err
}

func (s FS_move_Results_List) At(i int) FS_move_Results { return FS_move_Results{s.List.Struct(i)} }

func (s FS_move_Results_List) Set(i int, v FS_move_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_move_Results_List) String() string {
	str, _ := text.MarshalList(0xab89c6fc9bf26f2a, s.List)
	return str
}

// FS_move_Results_Promise is a wrapper for a FS_move_Results promised by a client call.
type FS_move_Results_Promise struct{ *capnp.Pipeline }

func (p FS_move_Results_Promise) Struct() (FS_move_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_move_Results{s}, err
}

type FS_copy_Params struct{ capnp.Struct }

// FS_copy_Params_TypeID is the unique identifier for the type FS_copy_Params.
const FS_copy_Params_TypeID = 0xc0dd66dedad92ef8

func NewFS_copy_Params(s *capnp.Segment) (FS_copy_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_copy_Params{st}, err
}

func NewRootFS_copy_Params(s *capnp.Segment) (FS_copy_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return FS_copy_Params{st}, err
}

func ReadRootFS_copy_Params(msg *capnp.Message) (FS_copy_Params, error) {
	root, err := msg.RootPtr()
	return FS_copy_Params{root.Struct()}, err
}

func (s FS_copy_Params) String() string {
	str, _ := text.Marshal(0xc0dd66dedad92ef8, s.Struct)
	return str
}

func (s FS_copy_Params) SrcPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_copy_Params) HasSrcPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_copy_Params) SrcPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_copy_Params) SetSrcPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_copy_Params) DstPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s FS_copy_Params) HasDstPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s FS_copy_Params) DstPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s FS_copy_Params) SetDstPath(v string) error {
	return s.Struct.SetText(1, v)
}

// FS_copy_Params_List is a list of FS_copy_Params.
type FS_copy_Params_List struct{ capnp.List }

// NewFS_copy_Params creates a new list of FS_copy_Params.
func NewFS_copy_Params_List(s *capnp.Segment, sz int32) (FS_copy_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return FS_copy_Params_List{l}, err
}

func (s FS_copy_Params_List) At(i int) FS_copy_Params { return FS_copy_Params{s.List.Struct(i)} }

func (s FS_copy_Params_List) Set(i int, v FS_copy_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_copy_Params_List) String() string {
	str, _ := text.MarshalList(0xc0dd66dedad92ef8, s.List)
	return str
}

// FS_copy_Params_Promise is a wrapper for a FS_copy_Params promised by a client call.
type FS_copy_Params_Promise struct{ *capnp.Pipeline }

func (p FS_copy_Params_Promise) Struct() (FS_copy_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_copy_Params{s}, err
}

type FS_copy_Results struct{ capnp.Struct }

// FS_copy_Results_TypeID is the unique identifier for the type FS_copy_Results.
const FS_copy_Results_TypeID = 0xccf4f28c8951edf6

func NewFS_copy_Results(s *capnp.Segment) (FS_copy_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_copy_Results{st}, err
}

func NewRootFS_copy_Results(s *capnp.Segment) (FS_copy_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_copy_Results{st}, err
}

func ReadRootFS_copy_Results(msg *capnp.Message) (FS_copy_Results, error) {
	root, err := msg.RootPtr()
	return FS_copy_Results{root.Struct()}, err
}

func (s FS_copy_Results) String() string {
	str, _ := text.Marshal(0xccf4f28c8951edf6, s.Struct)
	return str
}

// FS_copy_Results_List is a list of FS_copy_Results.
type FS_copy_Results_List struct{ capnp.List }

// NewFS_copy_Results creates a new list of FS_copy_Results.
func NewFS_copy_Results_List(s *capnp.Segment, sz int32) (FS_copy_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_copy_Results_List{l}, err
}

func (s FS_copy_Results_List) At(i int) FS_copy_Results { return FS_copy_Results{s.List.Struct(i)} }

func (s FS_copy_Results_List) Set(i int, v FS_copy_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_copy_Results_List) String() string {
	str, _ := text.MarshalList(0xccf4f28c8951edf6, s.List)
	return str
}

// FS_copy_Results_Promise is a wrapper for a FS_copy_Results promised by a client call.
type FS_copy_Results_Promise struct{ *capnp.Pipeline }

func (p FS_copy_Results_Promise) Struct() (FS_copy_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_copy_Results{s}, err
}

type FS_pin_Params struct{ capnp.Struct }

// FS_pin_Params_TypeID is the unique identifier for the type FS_pin_Params.
const FS_pin_Params_TypeID = 0x9efc974402f016f6

func NewFS_pin_Params(s *capnp.Segment) (FS_pin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_pin_Params{st}, err
}

func NewRootFS_pin_Params(s *capnp.Segment) (FS_pin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_pin_Params{st}, err
}

func ReadRootFS_pin_Params(msg *capnp.Message) (FS_pin_Params, error) {
	root, err := msg.RootPtr()
	return FS_pin_Params{root.Struct()}, err
}

func (s FS_pin_Params) String() string {
	str, _ := text.Marshal(0x9efc974402f016f6, s.Struct)
	return str
}

func (s FS_pin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_pin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_pin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_pin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_pin_Params_List is a list of FS_pin_Params.
type FS_pin_Params_List struct{ capnp.List }

// NewFS_pin_Params creates a new list of FS_pin_Params.
func NewFS_pin_Params_List(s *capnp.Segment, sz int32) (FS_pin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_pin_Params_List{l}, err
}

func (s FS_pin_Params_List) At(i int) FS_pin_Params { return FS_pin_Params{s.List.Struct(i)} }

func (s FS_pin_Params_List) Set(i int, v FS_pin_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_pin_Params_List) String() string {
	str, _ := text.MarshalList(0x9efc974402f016f6, s.List)
	return str
}

// FS_pin_Params_Promise is a wrapper for a FS_pin_Params promised by a client call.
type FS_pin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_pin_Params_Promise) Struct() (FS_pin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_pin_Params{s}, err
}

type FS_pin_Results struct{ capnp.Struct }

// FS_pin_Results_TypeID is the unique identifier for the type FS_pin_Results.
const FS_pin_Results_TypeID = 0xdba8e30445acc3f4

func NewFS_pin_Results(s *capnp.Segment) (FS_pin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_pin_Results{st}, err
}

func NewRootFS_pin_Results(s *capnp.Segment) (FS_pin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_pin_Results{st}, err
}

func ReadRootFS_pin_Results(msg *capnp.Message) (FS_pin_Results, error) {
	root, err := msg.RootPtr()
	return FS_pin_Results{root.Struct()}, err
}

func (s FS_pin_Results) String() string {
	str, _ := text.Marshal(0xdba8e30445acc3f4, s.Struct)
	return str
}

// FS_pin_Results_List is a list of FS_pin_Results.
type FS_pin_Results_List struct{ capnp.List }

// NewFS_pin_Results creates a new list of FS_pin_Results.
func NewFS_pin_Results_List(s *capnp.Segment, sz int32) (FS_pin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_pin_Results_List{l}, err
}

func (s FS_pin_Results_List) At(i int) FS_pin_Results { return FS_pin_Results{s.List.Struct(i)} }

func (s FS_pin_Results_List) Set(i int, v FS_pin_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_pin_Results_List) String() string {
	str, _ := text.MarshalList(0xdba8e30445acc3f4, s.List)
	return str
}

// FS_pin_Results_Promise is a wrapper for a FS_pin_Results promised by a client call.
type FS_pin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_pin_Results_Promise) Struct() (FS_pin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_pin_Results{s}, err
}

type FS_unpin_Params struct{ capnp.Struct }

// FS_unpin_Params_TypeID is the unique identifier for the type FS_unpin_Params.
const FS_unpin_Params_TypeID = 0xc9558eac26b0f15e

func NewFS_unpin_Params(s *capnp.Segment) (FS_unpin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_unpin_Params{st}, err
}

func NewRootFS_unpin_Params(s *capnp.Segment) (FS_unpin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_unpin_Params{st}, err
}

func ReadRootFS_unpin_Params(msg *capnp.Message) (FS_unpin_Params, error) {
	root, err := msg.RootPtr()
	return FS_unpin_Params{root.Struct()}, err
}

func (s FS_unpin_Params) String() string {
	str, _ := text.Marshal(0xc9558eac26b0f15e, s.Struct)
	return str
}

func (s FS_unpin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_unpin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_unpin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_unpin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_unpin_Params_List is a list of FS_unpin_Params.
type FS_unpin_Params_List struct{ capnp.List }

// NewFS_unpin_Params creates a new list of FS_unpin_Params.
func NewFS_unpin_Params_List(s *capnp.Segment, sz int32) (FS_unpin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_unpin_Params_List{l}, err
}

func (s FS_unpin_Params_List) At(i int) FS_unpin_Params { return FS_unpin_Params{s.List.Struct(i)} }

func (s FS_unpin_Params_List) Set(i int, v FS_unpin_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_unpin_Params_List) String() string {
	str, _ := text.MarshalList(0xc9558eac26b0f15e, s.List)
	return str
}

// FS_unpin_Params_Promise is a wrapper for a FS_unpin_Params promised by a client call.
type FS_unpin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_unpin_Params_Promise) Struct() (FS_unpin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_unpin_Params{s}, err
}

type FS_unpin_Results struct{ capnp.Struct }

// FS_unpin_Results_TypeID is the unique identifier for the type FS_unpin_Results.
const FS_unpin_Results_TypeID = 0x87c49e302c6516f8

func NewFS_unpin_Results(s *capnp.Segment) (FS_unpin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_unpin_Results{st}, err
}

func NewRootFS_unpin_Results(s *capnp.Segment) (FS_unpin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_unpin_Results{st}, err
}

func ReadRootFS_unpin_Results(msg *capnp.Message) (FS_unpin_Results, error) {
	root, err := msg.RootPtr()
	return FS_unpin_Results{root.Struct()}, err
}

func (s FS_unpin_Results) String() string {
	str, _ := text.Marshal(0x87c49e302c6516f8, s.Struct)
	return str
}

// FS_unpin_Results_List is a list of FS_unpin_Results.
type FS_unpin_Results_List struct{ capnp.List }

// NewFS_unpin_Results creates a new list of FS_unpin_Results.
func NewFS_unpin_Results_List(s *capnp.Segment, sz int32) (FS_unpin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_unpin_Results_List{l}, err
}

func (s FS_unpin_Results_List) At(i int) FS_unpin_Results { return FS_unpin_Results{s.List.Struct(i)} }

func (s FS_unpin_Results_List) Set(i int, v FS_unpin_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_unpin_Results_List) String() string {
	str, _ := text.MarshalList(0x87c49e302c6516f8, s.List)
	return str
}

// FS_unpin_Results_Promise is a wrapper for a FS_unpin_Results promised by a client call.
type FS_unpin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_unpin_Results_Promise) Struct() (FS_unpin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_unpin_Results{s}, err
}

type FS_stat_Params struct{ capnp.Struct }

// FS_stat_Params_TypeID is the unique identifier for the type FS_stat_Params.
const FS_stat_Params_TypeID = 0xd78724f6fbd5c5c5

func NewFS_stat_Params(s *capnp.Segment) (FS_stat_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Params{st}, err
}

func NewRootFS_stat_Params(s *capnp.Segment) (FS_stat_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Params{st}, err
}

func ReadRootFS_stat_Params(msg *capnp.Message) (FS_stat_Params, error) {
	root, err := msg.RootPtr()
	return FS_stat_Params{root.Struct()}, err
}

func (s FS_stat_Params) String() string {
	str, _ := text.Marshal(0xd78724f6fbd5c5c5, s.Struct)
	return str
}

func (s FS_stat_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_stat_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stat_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_stat_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_stat_Params_List is a list of FS_stat_Params.
type FS_stat_Params_List struct{ capnp.List }

// NewFS_stat_Params creates a new list of FS_stat_Params.
func NewFS_stat_Params_List(s *capnp.Segment, sz int32) (FS_stat_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stat_Params_List{l}, err
}

func (s FS_stat_Params_List) At(i int) FS_stat_Params { return FS_stat_Params{s.List.Struct(i)} }

func (s FS_stat_Params_List) Set(i int, v FS_stat_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_stat_Params_List) String() string {
	str, _ := text.MarshalList(0xd78724f6fbd5c5c5, s.List)
	return str
}

// FS_stat_Params_Promise is a wrapper for a FS_stat_Params promised by a client call.
type FS_stat_Params_Promise struct{ *capnp.Pipeline }

func (p FS_stat_Params_Promise) Struct() (FS_stat_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_stat_Params{s}, err
}

type FS_stat_Results struct{ capnp.Struct }

// FS_stat_Results_TypeID is the unique identifier for the type FS_stat_Results.
const FS_stat_Results_TypeID = 0xbdb679ec96303b53

func NewFS_stat_Results(s *capnp.Segment) (FS_stat_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Results{st}, err
}

func NewRootFS_stat_Results(s *capnp.Segment) (FS_stat_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stat_Results{st}, err
}

func ReadRootFS_stat_Results(msg *capnp.Message) (FS_stat_Results, error) {
	root, err := msg.RootPtr()
	return FS_stat_Results{root.Struct()}, err
}

func (s FS_stat_Results) String() string {
	str, _ := text.Marshal(0xbdb679ec96303b53, s.Struct)
	return str
}

func (s FS_stat_Results) Info() (StatInfo, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo{Struct: p.Struct()}, err
}

func (s FS_stat_Results) HasInfo() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stat_Results) SetInfo(v StatInfo) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewInfo sets the info field to a newly
// allocated StatInfo struct, preferring placement in s's segment.
func (s FS_stat_Results) NewInfo() (StatInfo, error) {
	ss, err := NewStatInfo(s.Struct.Segment())
	if err != nil {
		return StatInfo{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// FS_stat_Results_List is a list of FS_stat_Results.
type FS_stat_Results_List struct{ capnp.List }

// NewFS_stat_Results creates a new list of FS_stat_Results.
func NewFS_stat_Results_List(s *capnp.Segment, sz int32) (FS_stat_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stat_Results_List{l}, err
}

func (s FS_stat_Results_List) At(i int) FS_stat_Results { return FS_stat_Results{s.List.Struct(i)} }

func (s FS_stat_Results_List) Set(i int, v FS_stat_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stat_Results_List) String() string {
	str, _ := text.MarshalList(0xbdb679ec96303b53, s.List)
	return str
}

// FS_stat_Results_Promise is a wrapper for a FS_stat_Results promised by a client call.
type FS_stat_Results_Promise struct{ *capnp.Pipeline }

func (p FS_stat_Results_Promise) Struct() (FS_stat_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_stat_Results{s}, err
}

func (p FS_stat_Results_Promise) Info() StatInfo_Promise {
	return StatInfo_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type FS_garbageCollect_Params struct{ capnp.Struct }

// FS_garbageCollect_Params_TypeID is the unique identifier for the type FS_garbageCollect_Params.
const FS_garbageCollect_Params_TypeID = 0x9cb31f0ede4f5117

func NewFS_garbageCollect_Params(s *capnp.Segment) (FS_garbageCollect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_garbageCollect_Params{st}, err
}

func NewRootFS_garbageCollect_Params(s *capnp.Segment) (FS_garbageCollect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_garbageCollect_Params{st}, err
}

func ReadRootFS_garbageCollect_Params(msg *capnp.Message) (FS_garbageCollect_Params, error) {
	root, err := msg.RootPtr()
	return FS_garbageCollect_Params{root.Struct()}, err
}

func (s FS_garbageCollect_Params) String() string {
	str, _ := text.Marshal(0x9cb31f0ede4f5117, s.Struct)
	return str
}

func (s FS_garbageCollect_Params) Aggressive() bool {
	return s.Struct.Bit(0)
}

func (s FS_garbageCollect_Params) SetAggressive(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_garbageCollect_Params_List is a list of FS_garbageCollect_Params.
type FS_garbageCollect_Params_List struct{ capnp.List }

// NewFS_garbageCollect_Params creates a new list of FS_garbageCollect_Params.
func NewFS_garbageCollect_Params_List(s *capnp.Segment, sz int32) (FS_garbageCollect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_garbageCollect_Params_List{l}, err
}

func (s FS_garbageCollect_Params_List) At(i int) FS_garbageCollect_Params {
	return FS_garbageCollect_Params{s.List.Struct(i)}
}

func (s FS_garbageCollect_Params_List) Set(i int, v FS_garbageCollect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_garbageCollect_Params_List) String() string {
	str, _ := text.MarshalList(0x9cb31f0ede4f5117, s.List)
	return str
}

// FS_garbageCollect_Params_Promise is a wrapper for a FS_garbageCollect_Params promised by a client call.
type FS_garbageCollect_Params_Promise struct{ *capnp.Pipeline }

func (p FS_garbageCollect_Params_Promise) Struct() (FS_garbageCollect_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_garbageCollect_Params{s}, err
}

type FS_garbageCollect_Results struct{ capnp.Struct }

// FS_garbageCollect_Results_TypeID is the unique identifier for the type FS_garbageCollect_Results.
const FS_garbageCollect_Results_TypeID = 0xbb5ea9a03dfddab3

func NewFS_garbageCollect_Results(s *capnp.Segment) (FS_garbageCollect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_garbageCollect_Results{st}, err
}

func NewRootFS_garbageCollect_Results(s *capnp.Segment) (FS_garbageCollect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_garbageCollect_Results{st}, err
}

func ReadRootFS_garbageCollect_Results(msg *capnp.Message) (FS_garbageCollect_Results, error) {
	root, err := msg.RootPtr()
	return FS_garbageCollect_Results{root.Struct()}, err
}

func (s FS_garbageCollect_Results) String() string {
	str, _ := text.Marshal(0xbb5ea9a03dfddab3, s.Struct)
	return str
}

func (s FS_garbageCollect_Results) Freed() (GarbageItem_List, error) {
	p, err := s.Struct.Ptr(0)
	return GarbageItem_List{List: p.List()}, err
}

func (s FS_garbageCollect_Results) HasFreed() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_garbageCollect_Results) SetFreed(v GarbageItem_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewFreed sets the freed field to a newly
// allocated GarbageItem_List, preferring placement in s's segment.
func (s FS_garbageCollect_Results) NewFreed(n int32) (GarbageItem_List, error) {
	l, err := NewGarbageItem_List(s.Struct.Segment(), n)
	if err != nil {
		return GarbageItem_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_garbageCollect_Results_List is a list of FS_garbageCollect_Results.
type FS_garbageCollect_Results_List struct{ capnp.List }

// NewFS_garbageCollect_Results creates a new list of FS_garbageCollect_Results.
func NewFS_garbageCollect_Results_List(s *capnp.Segment, sz int32) (FS_garbageCollect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_garbageCollect_Results_List{l}, err
}

func (s FS_garbageCollect_Results_List) At(i int) FS_garbageCollect_Results {
	return FS_garbageCollect_Results{s.List.Struct(i)}
}

func (s FS_garbageCollect_Results_List) Set(i int, v FS_garbageCollect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_garbageCollect_Results_List) String() string {
	str, _ := text.MarshalList(0xbb5ea9a03dfddab3, s.List)
	return str
}

// FS_garbageCollect_Results_Promise is a wrapper for a FS_garbageCollect_Results promised by a client call.
type FS_garbageCollect_Results_Promise struct{ *capnp.Pipeline }

func (p FS_garbageCollect_Results_Promise) Struct() (FS_garbageCollect_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_garbageCollect_Results{s}, err
}

type FS_touch_Params struct{ capnp.Struct }

// FS_touch_Params_TypeID is the unique identifier for the type FS_touch_Params.
const FS_touch_Params_TypeID = 0xab1e48e58e4c69af

func NewFS_touch_Params(s *capnp.Segment) (FS_touch_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_touch_Params{st}, err
}

func NewRootFS_touch_Params(s *capnp.Segment) (FS_touch_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_touch_Params{st}, err
}

func ReadRootFS_touch_Params(msg *capnp.Message) (FS_touch_Params, error) {
	root, err := msg.RootPtr()
	return FS_touch_Params{root.Struct()}, err
}

func (s FS_touch_Params) String() string {
	str, _ := text.Marshal(0xab1e48e58e4c69af, s.Struct)
	return str
}

func (s FS_touch_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_touch_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_touch_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_touch_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_touch_Params_List is a list of FS_touch_Params.
type FS_touch_Params_List struct{ capnp.List }

// NewFS_touch_Params creates a new list of FS_touch_Params.
func NewFS_touch_Params_List(s *capnp.Segment, sz int32) (FS_touch_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_touch_Params_List{l}, err
}

func (s FS_touch_Params_List) At(i int) FS_touch_Params { return FS_touch_Params{s.List.Struct(i)} }

func (s FS_touch_Params_List) Set(i int, v FS_touch_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_touch_Params_List) String() string {
	str, _ := text.MarshalList(0xab1e48e58e4c69af, s.List)
	return str
}

// FS_touch_Params_Promise is a wrapper for a FS_touch_Params promised by a client call.
type FS_touch_Params_Promise struct{ *capnp.Pipeline }

func (p FS_touch_Params_Promise) Struct() (FS_touch_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_touch_Params{s}, err
}

type FS_touch_Results struct{ capnp.Struct }

// FS_touch_Results_TypeID is the unique identifier for the type FS_touch_Results.
const FS_touch_Results_TypeID = 0xbf1cf3d6e654e947

func NewFS_touch_Results(s *capnp.Segment) (FS_touch_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_touch_Results{st}, err
}

func NewRootFS_touch_Results(s *capnp.Segment) (FS_touch_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_touch_Results{st}, err
}

func ReadRootFS_touch_Results(msg *capnp.Message) (FS_touch_Results, error) {
	root, err := msg.RootPtr()
	return FS_touch_Results{root.Struct()}, err
}

func (s FS_touch_Results) String() string {
	str, _ := text.Marshal(0xbf1cf3d6e654e947, s.Struct)
	return str
}

// FS_touch_Results_List is a list of FS_touch_Results.
type FS_touch_Results_List struct{ capnp.List }

// NewFS_touch_Results creates a new list of FS_touch_Results.
func NewFS_touch_Results_List(s *capnp.Segment, sz int32) (FS_touch_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_touch_Results_List{l}, err
}

func (s FS_touch_Results_List) At(i int) FS_touch_Results { return FS_touch_Results{s.List.Struct(i)} }

func (s FS_touch_Results_List) Set(i int, v FS_touch_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_touch_Results_List) String() string {
	str, _ := text.MarshalList(0xbf1cf3d6e654e947, s.List)
	return str
}

// FS_touch_Results_Promise is a wrapper for a FS_touch_Results promised by a client call.
type FS_touch_Results_Promise struct{ *capnp.Pipeline }

func (p FS_touch_Results_Promise) Struct() (FS_touch_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_touch_Results{s}, err
}

type FS_exists_Params struct{ capnp.Struct }

// FS_exists_Params_TypeID is the unique identifier for the type FS_exists_Params.
const FS_exists_Params_TypeID = 0xdb27e243a580d2f0

func NewFS_exists_Params(s *capnp.Segment) (FS_exists_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_exists_Params{st}, err
}

func NewRootFS_exists_Params(s *capnp.Segment) (FS_exists_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_exists_Params{st}, err
}

func ReadRootFS_exists_Params(msg *capnp.Message) (FS_exists_Params, error) {
	root, err := msg.RootPtr()
	return FS_exists_Params{root.Struct()}, err
}

func (s FS_exists_Params) String() string {
	str, _ := text.Marshal(0xdb27e243a580d2f0, s.Struct)
	return str
}

func (s FS_exists_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_exists_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_exists_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_exists_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_exists_Params_List is a list of FS_exists_Params.
type FS_exists_Params_List struct{ capnp.List }

// NewFS_exists_Params creates a new list of FS_exists_Params.
func NewFS_exists_Params_List(s *capnp.Segment, sz int32) (FS_exists_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_exists_Params_List{l}, err
}

func (s FS_exists_Params_List) At(i int) FS_exists_Params { return FS_exists_Params{s.List.Struct(i)} }

func (s FS_exists_Params_List) Set(i int, v FS_exists_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_exists_Params_List) String() string {
	str, _ := text.MarshalList(0xdb27e243a580d2f0, s.List)
	return str
}

// FS_exists_Params_Promise is a wrapper for a FS_exists_Params promised by a client call.
type FS_exists_Params_Promise struct{ *capnp.Pipeline }

func (p FS_exists_Params_Promise) Struct() (FS_exists_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_exists_Params{s}, err
}

type FS_exists_Results struct{ capnp.Struct }

// FS_exists_Results_TypeID is the unique identifier for the type FS_exists_Results.
const FS_exists_Results_TypeID = 0xa5753d28ca12d2ba

func NewFS_exists_Results(s *capnp.Segment) (FS_exists_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_exists_Results{st}, err
}

func NewRootFS_exists_Results(s *capnp.Segment) (FS_exists_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_exists_Results{st}, err
}

func ReadRootFS_exists_Results(msg *capnp.Message) (FS_exists_Results, error) {
	root, err := msg.RootPtr()
	return FS_exists_Results{root.Struct()}, err
}

func (s FS_exists_Results) String() string {
	str, _ := text.Marshal(0xa5753d28ca12d2ba, s.Struct)
	return str
}

func (s FS_exists_Results) Exists() bool {
	return s.Struct.Bit(0)
}

func (s FS_exists_Results) SetExists(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_exists_Results_List is a list of FS_exists_Results.
type FS_exists_Results_List struct{ capnp.List }

// NewFS_exists_Results creates a new list of FS_exists_Results.
func NewFS_exists_Results_List(s *capnp.Segment, sz int32) (FS_exists_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_exists_Results_List{l}, err
}

func (s FS_exists_Results_List) At(i int) FS_exists_Results {
	return FS_exists_Results{s.List.Struct(i)}
}

func (s FS_exists_Results_List) Set(i int, v FS_exists_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_exists_Results_List) String() string {
	str, _ := text.MarshalList(0xa5753d28ca12d2ba, s.List)
	return str
}

// FS_exists_Results_Promise is a wrapper for a FS_exists_Results promised by a client call.
type FS_exists_Results_Promise struct{ *capnp.Pipeline }

func (p FS_exists_Results_Promise) Struct() (FS_exists_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_exists_Results{s}, err
}

type FS_tar_Params struct{ capnp.Struct }

// FS_tar_Params_TypeID is the unique identifier for the type FS_tar_Params.
const FS_tar_Params_TypeID = 0x958ea6b33d4e8cbb

func NewFS_tar_Params(s *capnp.Segment) (FS_tar_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_tar_Params{st}, err
}

func NewRootFS_tar_Params(s *capnp.Segment) (FS_tar_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return FS_tar_Params{st}, err
}

func ReadRootFS_tar_Params(msg *capnp.Message) (FS_tar_Params, error) {
	root, err := msg.RootPtr()
	return FS_tar_Params{root.Struct()}, err
}

func (s FS_tar_Params) String() string {
	str, _ := text.Marshal(0x958ea6b33d4e8cbb, s.Struct)
	return str
}

func (s FS_tar_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_tar_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_tar_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_tar_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s FS_tar_Params) Offline() bool {
	return s.Struct.Bit(0)
}

func (s FS_tar_Params) SetOffline(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_tar_Params_List is a list of FS_tar_Params.
type FS_tar_Params_List struct{ capnp.List }

// NewFS_tar_Params creates a new list of FS_tar_Params.
func NewFS_tar_Params_List(s *capnp.Segment, sz int32) (FS_tar_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return FS_tar_Params_List{l}, err
}

func (s FS_tar_Params_List) At(i int) FS_tar_Params { return FS_tar_Params{s.List.Struct(i)} }

func (s FS_tar_Params_List) Set(i int, v FS_tar_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_tar_Params_List) String() string {
	str, _ := text.MarshalList(0x958ea6b33d4e8cbb, s.List)
	return str
}

// FS_tar_Params_Promise is a wrapper for a FS_tar_Params promised by a client call.
type FS_tar_Params_Promise struct{ *capnp.Pipeline }

func (p FS_tar_Params_Promise) Struct() (FS_tar_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_tar_Params{s}, err
}

type FS_tar_Results struct{ capnp.Struct }

// FS_tar_Results_TypeID is the unique identifier for the type FS_tar_Results.
const FS_tar_Results_TypeID = 0x809d4e73dc197b11

func NewFS_tar_Results(s *capnp.Segment) (FS_tar_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_tar_Results{st}, err
}

func NewRootFS_tar_Results(s *capnp.Segment) (FS_tar_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_tar_Results{st}, err
}

func ReadRootFS_tar_Results(msg *capnp.Message) (FS_tar_Results, error) {
	root, err := msg.RootPtr()
	return FS_tar_Results{root.Struct()}, err
}

func (s FS_tar_Results) String() string {
	str, _ := text.Marshal(0x809d4e73dc197b11, s.Struct)
	return str
}

func (s FS_tar_Results) Port() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s FS_tar_Results) SetPort(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// FS_tar_Results_List is a list of FS_tar_Results.
type FS_tar_Results_List struct{ capnp.List }

// NewFS_tar_Results creates a new list of FS_tar_Results.
func NewFS_tar_Results_List(s *capnp.Segment, sz int32) (FS_tar_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_tar_Results_List{l}, err
}

func (s FS_tar_Results_List) At(i int) FS_tar_Results { return FS_tar_Results{s.List.Struct(i)} }

func (s FS_tar_Results_List) Set(i int, v FS_tar_Results) error { return s.List.SetStruct(i, v.Struct) }

func (s FS_tar_Results_List) String() string {
	str, _ := text.MarshalList(0x809d4e73dc197b11, s.List)
	return str
}

// FS_tar_Results_Promise is a wrapper for a FS_tar_Results promised by a client call.
type FS_tar_Results_Promise struct{ *capnp.Pipeline }

func (p FS_tar_Results_Promise) Struct() (FS_tar_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_tar_Results{s}, err
}

type FS_deletedNodes_Params struct{ capnp.Struct }

// FS_deletedNodes_Params_TypeID is the unique identifier for the type FS_deletedNodes_Params.
const FS_deletedNodes_Params_TypeID = 0xa17d6c20c2174ec8

func NewFS_deletedNodes_Params(s *capnp.Segment) (FS_deletedNodes_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Params{st}, err
}

func NewRootFS_deletedNodes_Params(s *capnp.Segment) (FS_deletedNodes_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Params{st}, err
}

func ReadRootFS_deletedNodes_Params(msg *capnp.Message) (FS_deletedNodes_Params, error) {
	root, err := msg.RootPtr()
	return FS_deletedNodes_Params{root.Struct()}, err
}

func (s FS_deletedNodes_Params) String() string {
	str, _ := text.Marshal(0xa17d6c20c2174ec8, s.Struct)
	return str
}

func (s FS_deletedNodes_Params) Root() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_deletedNodes_Params) HasRoot() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_deletedNodes_Params) RootBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_deletedNodes_Params) SetRoot(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_deletedNodes_Params_List is a list of FS_deletedNodes_Params.
type FS_deletedNodes_Params_List struct{ capnp.List }

// NewFS_deletedNodes_Params creates a new list of FS_deletedNodes_Params.
func NewFS_deletedNodes_Params_List(s *capnp.Segment, sz int32) (FS_deletedNodes_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_deletedNodes_Params_List{l}, err
}

func (s FS_deletedNodes_Params_List) At(i int) FS_deletedNodes_Params {
	return FS_deletedNodes_Params{s.List.Struct(i)}
}

func (s FS_deletedNodes_Params_List) Set(i int, v FS_deletedNodes_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_deletedNodes_Params_List) String() string {
	str, _ := text.MarshalList(0xa17d6c20c2174ec8, s.List)
	return str
}

// FS_deletedNodes_Params_Promise is a wrapper for a FS_deletedNodes_Params promised by a client call.
type FS_deletedNodes_Params_Promise struct{ *capnp.Pipeline }

func (p FS_deletedNodes_Params_Promise) Struct() (FS_deletedNodes_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_deletedNodes_Params{s}, err
}

type FS_deletedNodes_Results struct{ capnp.Struct }

// FS_deletedNodes_Results_TypeID is the unique identifier for the type FS_deletedNodes_Results.
const FS_deletedNodes_Results_TypeID = 0xa78946d2af827622

func NewFS_deletedNodes_Results(s *capnp.Segment) (FS_deletedNodes_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Results{st}, err
}

func NewRootFS_deletedNodes_Results(s *capnp.Segment) (FS_deletedNodes_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_deletedNodes_Results{st}, err
}

func ReadRootFS_deletedNodes_Results(msg *capnp.Message) (FS_deletedNodes_Results, error) {
	root, err := msg.RootPtr()
	return FS_deletedNodes_Results{root.Struct()}, err
}

func (s FS_deletedNodes_Results) String() string {
	str, _ := text.Marshal(0xa78946d2af827622, s.Struct)
	return str
}

func (s FS_deletedNodes_Results) Nodes() (StatInfo_List, error) {
	p, err := s.Struct.Ptr(0)
	return StatInfo_List{List: p.List()}, err
}

func (s FS_deletedNodes_Results) HasNodes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_deletedNodes_Results) SetNodes(v StatInfo_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewNodes sets the nodes field to a newly
// allocated StatInfo_List, preferring placement in s's segment.
func (s FS_deletedNodes_Results) NewNodes(n int32) (StatInfo_List, error) {
	l, err := NewStatInfo_List(s.Struct.Segment(), n)
	if err != nil {
		return StatInfo_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// FS_deletedNodes_Results_List is a list of FS_deletedNodes_Results.
type FS_deletedNodes_Results_List struct{ capnp.List }

// NewFS_deletedNodes_Results creates a new list of FS_deletedNodes_Results.
func NewFS_deletedNodes_Results_List(s *capnp.Segment, sz int32) (FS_deletedNodes_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_deletedNodes_Results_List{l}, err
}

func (s FS_deletedNodes_Results_List) At(i int) FS_deletedNodes_Results {
	return FS_deletedNodes_Results{s.List.Struct(i)}
}

func (s FS_deletedNodes_Results_List) Set(i int, v FS_deletedNodes_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_deletedNodes_Results_List) String() string {
	str, _ := text.MarshalList(0xa78946d2af827622, s.List)
	return str
}

// FS_deletedNodes_Results_Promise is a wrapper for a FS_deletedNodes_Results promised by a client call.
type FS_deletedNodes_Results_Promise struct{ *capnp.Pipeline }

func (p FS_deletedNodes_Results_Promise) Struct() (FS_deletedNodes_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_deletedNodes_Results{s}, err
}

type FS_undelete_Params struct{ capnp.Struct }

// FS_undelete_Params_TypeID is the unique identifier for the type FS_undelete_Params.
const FS_undelete_Params_TypeID = 0x946963af664858d0

func NewFS_undelete_Params(s *capnp.Segment) (FS_undelete_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_undelete_Params{st}, err
}

func NewRootFS_undelete_Params(s *capnp.Segment) (FS_undelete_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_undelete_Params{st}, err
}

func ReadRootFS_undelete_Params(msg *capnp.Message) (FS_undelete_Params, error) {
	root, err := msg.RootPtr()
	return FS_undelete_Params{root.Struct()}, err
}

func (s FS_undelete_Params) String() string {
	str, _ := text.Marshal(0x946963af664858d0, s.Struct)
	return str
}

func (s FS_undelete_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_undelete_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_undelete_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_undelete_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_undelete_Params_List is a list of FS_undelete_Params.
type FS_undelete_Params_List struct{ capnp.List }

// NewFS_undelete_Params creates a new list of FS_undelete_Params.
func NewFS_undelete_Params_List(s *capnp.Segment, sz int32) (FS_undelete_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_undelete_Params_List{l}, err
}

func (s FS_undelete_Params_List) At(i int) FS_undelete_Params {
	return FS_undelete_Params{s.List.Struct(i)}
}

func (s FS_undelete_Params_List) Set(i int, v FS_undelete_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_undelete_Params_List) String() string {
	str, _ := text.MarshalList(0x946963af664858d0, s.List)
	return str
}

// FS_undelete_Params_Promise is a wrapper for a FS_undelete_Params promised by a client call.
type FS_undelete_Params_Promise struct{ *capnp.Pipeline }

func (p FS_undelete_Params_Promise) Struct() (FS_undelete_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_undelete_Params{s}, err
}

type FS_undelete_Results struct{ capnp.Struct }

// FS_undelete_Results_TypeID is the unique identifier for the type FS_undelete_Results.
const FS_undelete_Results_TypeID = 0x95a8b7d1ed942672

func NewFS_undelete_Results(s *capnp.Segment) (FS_undelete_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_undelete_Results{st}, err
}

func NewRootFS_undelete_Results(s *capnp.Segment) (FS_undelete_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_undelete_Results{st}, err
}

func ReadRootFS_undelete_Results(msg *capnp.Message) (FS_undelete_Results, error) {
	root, err := msg.RootPtr()
	return FS_undelete_Results{root.Struct()}, err
}

func (s FS_undelete_Results) String() string {
	str, _ := text.Marshal(0x95a8b7d1ed942672, s.Struct)
	return str
}

// FS_undelete_Results_List is a list of FS_undelete_Results.
type FS_undelete_Results_List struct{ capnp.List }

// NewFS_undelete_Results creates a new list of FS_undelete_Results.
func NewFS_undelete_Results_List(s *capnp.Segment, sz int32) (FS_undelete_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_undelete_Results_List{l}, err
}

func (s FS_undelete_Results_List) At(i int) FS_undelete_Results {
	return FS_undelete_Results{s.List.Struct(i)}
}

func (s FS_undelete_Results_List) Set(i int, v FS_undelete_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_undelete_Results_List) String() string {
	str, _ := text.MarshalList(0x95a8b7d1ed942672, s.List)
	return str
}

// FS_undelete_Results_Promise is a wrapper for a FS_undelete_Results promised by a client call.
type FS_undelete_Results_Promise struct{ *capnp.Pipeline }

func (p FS_undelete_Results_Promise) Struct() (FS_undelete_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_undelete_Results{s}, err
}

type FS_repin_Params struct{ capnp.Struct }

// FS_repin_Params_TypeID is the unique identifier for the type FS_repin_Params.
const FS_repin_Params_TypeID = 0xf0c07855b6fcd215

func NewFS_repin_Params(s *capnp.Segment) (FS_repin_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_repin_Params{st}, err
}

func NewRootFS_repin_Params(s *capnp.Segment) (FS_repin_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_repin_Params{st}, err
}

func ReadRootFS_repin_Params(msg *capnp.Message) (FS_repin_Params, error) {
	root, err := msg.RootPtr()
	return FS_repin_Params{root.Struct()}, err
}

func (s FS_repin_Params) String() string {
	str, _ := text.Marshal(0xf0c07855b6fcd215, s.Struct)
	return str
}

func (s FS_repin_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_repin_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_repin_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_repin_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_repin_Params_List is a list of FS_repin_Params.
type FS_repin_Params_List struct{ capnp.List }

// NewFS_repin_Params creates a new list of FS_repin_Params.
func NewFS_repin_Params_List(s *capnp.Segment, sz int32) (FS_repin_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_repin_Params_List{l}, err
}

func (s FS_repin_Params_List) At(i int) FS_repin_Params { return FS_repin_Params{s.List.Struct(i)} }

func (s FS_repin_Params_List) Set(i int, v FS_repin_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_repin_Params_List) String() string {
	str, _ := text.MarshalList(0xf0c07855b6fcd215, s.List)
	return str
}

// FS_repin_Params_Promise is a wrapper for a FS_repin_Params promised by a client call.
type FS_repin_Params_Promise struct{ *capnp.Pipeline }

func (p FS_repin_Params_Promise) Struct() (FS_repin_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_repin_Params{s}, err
}

type FS_repin_Results struct{ capnp.Struct }

// FS_repin_Results_TypeID is the unique identifier for the type FS_repin_Results.
const FS_repin_Results_TypeID = 0x90690022482a2dd4

func NewFS_repin_Results(s *capnp.Segment) (FS_repin_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_repin_Results{st}, err
}

func NewRootFS_repin_Results(s *capnp.Segment) (FS_repin_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_repin_Results{st}, err
}

func ReadRootFS_repin_Results(msg *capnp.Message) (FS_repin_Results, error) {
	root, err := msg.RootPtr()
	return FS_repin_Results{root.Struct()}, err
}

func (s FS_repin_Results) String() string {
	str, _ := text.Marshal(0x90690022482a2dd4, s.Struct)
	return str
}

// FS_repin_Results_List is a list of FS_repin_Results.
type FS_repin_Results_List struct{ capnp.List }

// NewFS_repin_Results creates a new list of FS_repin_Results.
func NewFS_repin_Results_List(s *capnp.Segment, sz int32) (FS_repin_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_repin_Results_List{l}, err
}

func (s FS_repin_Results_List) At(i int) FS_repin_Results { return FS_repin_Results{s.List.Struct(i)} }

func (s FS_repin_Results_List) Set(i int, v FS_repin_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_repin_Results_List) String() string {
	str, _ := text.MarshalList(0x90690022482a2dd4, s.List)
	return str
}

// FS_repin_Results_Promise is a wrapper for a FS_repin_Results promised by a client call.
type FS_repin_Results_Promise struct{ *capnp.Pipeline }

func (p FS_repin_Results_Promise) Struct() (FS_repin_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_repin_Results{s}, err
}

type FS_isCached_Params struct{ capnp.Struct }

// FS_isCached_Params_TypeID is the unique identifier for the type FS_isCached_Params.
const FS_isCached_Params_TypeID = 0xf39ffa0d4b61ecce

func NewFS_isCached_Params(s *capnp.Segment) (FS_isCached_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_isCached_Params{st}, err
}

func NewRootFS_isCached_Params(s *capnp.Segment) (FS_isCached_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_isCached_Params{st}, err
}

func ReadRootFS_isCached_Params(msg *capnp.Message) (FS_isCached_Params, error) {
	root, err := msg.RootPtr()
	return FS_isCached_Params{root.Struct()}, err
}

func (s FS_isCached_Params) String() string {
	str, _ := text.Marshal(0xf39ffa0d4b61ecce, s.Struct)
	return str
}

func (s FS_isCached_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_isCached_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_isCached_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_isCached_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_isCached_Params_List is a list of FS_isCached_Params.
type FS_isCached_Params_List struct{ capnp.List }

// NewFS_isCached_Params creates a new list of FS_isCached_Params.
func NewFS_isCached_Params_List(s *capnp.Segment, sz int32) (FS_isCached_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_isCached_Params_List{l}, err
}

func (s FS_isCached_Params_List) At(i int) FS_isCached_Params {
	return FS_isCached_Params{s.List.Struct(i)}
}

func (s FS_isCached_Params_List) Set(i int, v FS_isCached_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_isCached_Params_List) String() string {
	str, _ := text.MarshalList(0xf39ffa0d4b61ecce, s.List)
	return str
}

// FS_isCached_Params_Promise is a wrapper for a FS_isCached_Params promised by a client call.
type FS_isCached_Params_Promise struct{ *capnp.Pipeline }

func (p FS_isCached_Params_Promise) Struct() (FS_isCached_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_isCached_Params{s}, err
}

type FS_isCached_Results struct{ capnp.Struct }

// FS_isCached_Results_TypeID is the unique identifier for the type FS_isCached_Results.
const FS_isCached_Results_TypeID = 0x9f8515931298bab7

func NewFS_isCached_Results(s *capnp.Segment) (FS_isCached_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_isCached_Results{st}, err
}

func NewRootFS_isCached_Results(s *capnp.Segment) (FS_isCached_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return FS_isCached_Results{st}, err
}

func ReadRootFS_isCached_Results(msg *capnp.Message) (FS_isCached_Results, error) {
	root, err := msg.RootPtr()
	return FS_isCached_Results{root.Struct()}, err
}

func (s FS_isCached_Results) String() string {
	str, _ := text.Marshal(0x9f8515931298bab7, s.Struct)
	return str
}

func (s FS_isCached_Results) IsCached() bool {
	return s.Struct.Bit(0)
}

func (s FS_isCached_Results) SetIsCached(v bool) {
	s.Struct.SetBit(0, v)
}

// FS_isCached_Results_List is a list of FS_isCached_Results.
type FS_isCached_Results_List struct{ capnp.List }

// NewFS_isCached_Results creates a new list of FS_isCached_Results.
func NewFS_isCached_Results_List(s *capnp.Segment, sz int32) (FS_isCached_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return FS_isCached_Results_List{l}, err
}

func (s FS_isCached_Results_List) At(i int) FS_isCached_Results {
	return FS_isCached_Results{s.List.Struct(i)}
}

func (s FS_isCached_Results_List) Set(i int, v FS_isCached_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_isCached_Results_List) String() string {
	str, _ := text.MarshalList(0x9f8515931298bab7, s.List)
	return str
}

// FS_isCached_Results_Promise is a wrapper for a FS_isCached_Results promised by a client call.
type FS_isCached_Results_Promise struct{ *capnp.Pipeline }

func (p FS_isCached_Results_Promise) Struct() (FS_isCached_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_isCached_Results{s}, err
}

type FS_stageFromStream_Params struct{ capnp.Struct }

// FS_stageFromStream_Params_TypeID is the unique identifier for the type FS_stageFromStream_Params.
const FS_stageFromStream_Params_TypeID = 0xed67802d71143df2

func NewFS_stageFromStream_Params(s *capnp.Segment) (FS_stageFromStream_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stageFromStream_Params{st}, err
}

func NewRootFS_stageFromStream_Params(s *capnp.Segment) (FS_stageFromStream_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stageFromStream_Params{st}, err
}

func ReadRootFS_stageFromStream_Params(msg *capnp.Message) (FS_stageFromStream_Params, error) {
	root, err := msg.RootPtr()
	return FS_stageFromStream_Params{root.Struct()}, err
}

func (s FS_stageFromStream_Params) String() string {
	str, _ := text.Marshal(0xed67802d71143df2, s.Struct)
	return str
}

func (s FS_stageFromStream_Params) RepoPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_stageFromStream_Params) HasRepoPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stageFromStream_Params) RepoPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_stageFromStream_Params) SetRepoPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_stageFromStream_Params_List is a list of FS_stageFromStream_Params.
type FS_stageFromStream_Params_List struct{ capnp.List }

// NewFS_stageFromStream_Params creates a new list of FS_stageFromStream_Params.
func NewFS_stageFromStream_Params_List(s *capnp.Segment, sz int32) (FS_stageFromStream_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stageFromStream_Params_List{l}, err
}

func (s FS_stageFromStream_Params_List) At(i int) FS_stageFromStream_Params {
	return FS_stageFromStream_Params{s.List.Struct(i)}
}

func (s FS_stageFromStream_Params_List) Set(i int, v FS_stageFromStream_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stageFromStream_Params_List) String() string {
	str, _ := text.MarshalList(0xed67802d71143df2, s.List)
	return str
}

// FS_stageFromStream_Params_Promise is a wrapper for a FS_stageFromStream_Params promised by a client call.
type FS_stageFromStream_Params_Promise struct{ *capnp.Pipeline }

func (p FS_stageFromStream_Params_Promise) Struct() (FS_stageFromStream_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_stageFromStream_Params{s}, err
}

type FS_stageFromStream_Results struct{ capnp.Struct }

// FS_stageFromStream_Results_TypeID is the unique identifier for the type FS_stageFromStream_Results.
const FS_stageFromStream_Results_TypeID = 0xdec9706a7438a8f0

func NewFS_stageFromStream_Results(s *capnp.Segment) (FS_stageFromStream_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stageFromStream_Results{st}, err
}

func NewRootFS_stageFromStream_Results(s *capnp.Segment) (FS_stageFromStream_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_stageFromStream_Results{st}, err
}

func ReadRootFS_stageFromStream_Results(msg *capnp.Message) (FS_stageFromStream_Results, error) {
	root, err := msg.RootPtr()
	return FS_stageFromStream_Results{root.Struct()}, err
}

func (s FS_stageFromStream_Results) String() string {
	str, _ := text.Marshal(0xdec9706a7438a8f0, s.Struct)
	return str
}

func (s FS_stageFromStream_Results) Stream() FS_StageStream {
	p, _ := s.Struct.Ptr(0)
	return FS_StageStream{Client: p.Interface().Client()}
}

func (s FS_stageFromStream_Results) HasStream() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_stageFromStream_Results) SetStream(v FS_StageStream) error {
	if v.Client == nil {
		return s.Struct.SetPtr(0, capnp.Ptr{})
	}
	seg := s.Segment()
	in := capnp.NewInterface(seg, seg.Message().AddCap(v.Client))
	return s.Struct.SetPtr(0, in.ToPtr())
}

// FS_stageFromStream_Results_List is a list of FS_stageFromStream_Results.
type FS_stageFromStream_Results_List struct{ capnp.List }

// NewFS_stageFromStream_Results creates a new list of FS_stageFromStream_Results.
func NewFS_stageFromStream_Results_List(s *capnp.Segment, sz int32) (FS_stageFromStream_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_stageFromStream_Results_List{l}, err
}

func (s FS_stageFromStream_Results_List) At(i int) FS_stageFromStream_Results {
	return FS_stageFromStream_Results{s.List.Struct(i)}
}

func (s FS_stageFromStream_Results_List) Set(i int, v FS_stageFromStream_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_stageFromStream_Results_List) String() string {
	str, _ := text.MarshalList(0xdec9706a7438a8f0, s.List)
	return str
}

// FS_stageFromStream_Results_Promise is a wrapper for a FS_stageFromStream_Results promised by a client call.
type FS_stageFromStream_Results_Promise struct{ *capnp.Pipeline }

func (p FS_stageFromStream_Results_Promise) Struct() (FS_stageFromStream_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_stageFromStream_Results{s}, err
}

func (p FS_stageFromStream_Results_Promise) Stream() FS_StageStream {
	return FS_StageStream{Client: p.Pipeline.GetPipeline(0).Client()}
}

type FS_recodeStream_Params struct{ capnp.Struct }

// FS_recodeStream_Params_TypeID is the unique identifier for the type FS_recodeStream_Params.
const FS_recodeStream_Params_TypeID = 0x9dd306445642385f

func NewFS_recodeStream_Params(s *capnp.Segment) (FS_recodeStream_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_recodeStream_Params{st}, err
}

func NewRootFS_recodeStream_Params(s *capnp.Segment) (FS_recodeStream_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return FS_recodeStream_Params{st}, err
}

func ReadRootFS_recodeStream_Params(msg *capnp.Message) (FS_recodeStream_Params, error) {
	root, err := msg.RootPtr()
	return FS_recodeStream_Params{root.Struct()}, err
}

func (s FS_recodeStream_Params) String() string {
	str, _ := text.Marshal(0x9dd306445642385f, s.Struct)
	return str
}

func (s FS_recodeStream_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s FS_recodeStream_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s FS_recodeStream_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s FS_recodeStream_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// FS_recodeStream_Params_List is a list of FS_recodeStream_Params.
type FS_recodeStream_Params_List struct{ capnp.List }

// NewFS_recodeStream_Params creates a new list of FS_recodeStream_Params.
func NewFS_recodeStream_Params_List(s *capnp.Segment, sz int32) (FS_recodeStream_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return FS_recodeStream_Params_List{l}, err
}

func (s FS_recodeStream_Params_List) At(i int) FS_recodeStream_Params {
	return FS_recodeStream_Params{s.List.Struct(i)}
}

func (s FS_recodeStream_Params_List) Set(i int, v FS_recodeStream_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_recodeStream_Params_List) String() string {
	str, _ := text.MarshalList(0x9dd306445642385f, s.List)
	return str
}

// FS_recodeStream_Params_Promise is a wrapper for a FS_recodeStream_Params promised by a client call.
type FS_recodeStream_Params_Promise struct{ *capnp.Pipeline }

func (p FS_recodeStream_Params_Promise) Struct() (FS_recodeStream_Params, error) {
	s, err := p.Pipeline.Struct()
	return FS_recodeStream_Params{s}, err
}

type FS_recodeStream_Results struct{ capnp.Struct }

// FS_recodeStream_Results_TypeID is the unique identifier for the type FS_recodeStream_Results.
const FS_recodeStream_Results_TypeID = 0x9640959b4623a286

func NewFS_recodeStream_Results(s *capnp.Segment) (FS_recodeStream_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_recodeStream_Results{st}, err
}

func NewRootFS_recodeStream_Results(s *capnp.Segment) (FS_recodeStream_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return FS_recodeStream_Results{st}, err
}

func ReadRootFS_recodeStream_Results(msg *capnp.Message) (FS_recodeStream_Results, error) {
	root, err := msg.RootPtr()
	return FS_recodeStream_Results{root.Struct()}, err
}

func (s FS_recodeStream_Results) String() string {
	str, _ := text.Marshal(0x9640959b4623a286, s.Struct)
	return str
}

// FS_recodeStream_Results_List is a list of FS_recodeStream_Results.
type FS_recodeStream_Results_List struct{ capnp.List }

// NewFS_recodeStream_Results creates a new list of FS_recodeStream_Results.
func NewFS_recodeStream_Results_List(s *capnp.Segment, sz int32) (FS_recodeStream_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return FS_recodeStream_Results_List{l}, err
}

func (s FS_recodeStream_Results_List) At(i int) FS_recodeStream_Results {
	return FS_recodeStream_Results{s.List.Struct(i)}
}

func (s FS_recodeStream_Results_List) Set(i int, v FS_recodeStream_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s FS_recodeStream_Results_List) String() string {
	str, _ := text.MarshalList(0x9640959b4623a286, s.List)
	return str
}

// FS_recodeStream_Results_Promise is a wrapper for a FS_recodeStream_Results promised by a client call.
type FS_recodeStream_Results_Promise struct{ *capnp.Pipeline }

func (p FS_recodeStream_Results_Promise) Struct() (FS_recodeStream_Results, error) {
	s, err := p.Pipeline.Struct()
	return FS_recodeStream_Results{s}, err
}

type VCS struct{ Client capnp.Client }

// VCS_TypeID is the unique identifier for the type VCS.
const VCS_TypeID = 0xfaa680ef12c44624

func (c VCS) Log(ctx context.Context, params func(VCS_log_Params) error, opts ...capnp.CallOption) VCS_log_Results_Promise {
	if c.Client == nil {
		return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_log_Params{Struct: s}) }
	}
	return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Commit(ctx context.Context, params func(VCS_commit_Params) error, opts ...capnp.CallOption) VCS_commit_Results_Promise {
	if c.Client == nil {
		return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commit_Params{Struct: s}) }
	}
	return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Tag(ctx context.Context, params func(VCS_tag_Params) error, opts ...capnp.CallOption) VCS_tag_Results_Promise {
	if c.Client == nil {
		return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_tag_Params{Struct: s}) }
	}
	return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Untag(ctx context.Context, params func(VCS_untag_Params) error, opts ...capnp.CallOption) VCS_untag_Results_Promise {
	if c.Client == nil {
		return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_untag_Params{Struct: s}) }
	}
	return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Reset(ctx context.Context, params func(VCS_reset_Params) error, opts ...capnp.CallOption) VCS_reset_Results_Promise {
	if c.Client == nil {
		return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_reset_Params{Struct: s}) }
	}
	return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) History(ctx context.Context, params func(VCS_history_Params) error, opts ...capnp.CallOption) VCS_history_Results_Promise {
	if c.Client == nil {
		return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_history_Params{Struct: s}) }
	}
	return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) MakeDiff(ctx context.Context, params func(VCS_makeDiff_Params) error, opts ...capnp.CallOption) VCS_makeDiff_Results_Promise {
	if c.Client == nil {
		return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_makeDiff_Params{Struct: s}) }
	}
	return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Sync(ctx context.Context, params func(VCS_sync_Params) error, opts ...capnp.CallOption) VCS_sync_Results_Promise {
	if c.Client == nil {
		return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_sync_Params{Struct: s}) }
	}
	return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) Fetch(ctx context.Context, params func(VCS_fetch_Params) error, opts ...capnp.CallOption) VCS_fetch_Results_Promise {
	if c.Client == nil {
		return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_fetch_Params{Struct: s}) }
	}
	return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c VCS) CommitInfo(ctx context.Context, params func(VCS_commitInfo_Params) error, opts ...capnp.CallOption) VCS_commitInfo_Results_Promise {
	if c.Client == nil {
		return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commitInfo_Params{Struct: s}) }
	}
	return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type VCS_Server interface {
	Log(VCS_log) error

	Commit(VCS_commit) error

	Tag(VCS_tag) error

	Untag(VCS_untag) error

	Reset(VCS_reset) error

	History(VCS_history) error

	MakeDiff(VCS_makeDiff) error

	Sync(VCS_sync) error

	Fetch(VCS_fetch) error

	CommitInfo(VCS_commitInfo) error
}

func VCS_ServerToClient(s VCS_Server) VCS {
	c, _ := s.(server.Closer)
	return VCS{Client: server.New(VCS_Methods(nil, s), c)}
}

func VCS_Methods(methods []server.Method, s VCS_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 10)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_log{c, opts, VCS_log_Params{Struct: p}, VCS_log_Results{Struct: r}}
			return s.Log(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commit{c, opts, VCS_commit_Params{Struct: p}, VCS_commit_Results{Struct: r}}
			return s.Commit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_tag{c, opts, VCS_tag_Params{Struct: p}, VCS_tag_Results{Struct: r}}
			return s.Tag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_untag{c, opts, VCS_untag_Params{Struct: p}, VCS_untag_Results{Struct: r}}
			return s.Untag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_reset{c, opts, VCS_reset_Params{Struct: p}, VCS_reset_Results{Struct: r}}
			return s.Reset(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_history{c, opts, VCS_history_Params{Struct: p}, VCS_history_Results{Struct: r}}
			return s.History(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_makeDiff{c, opts, VCS_makeDiff_Params{Struct: p}, VCS_makeDiff_Results{Struct: r}}
			return s.MakeDiff(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_sync{c, opts, VCS_sync_Params{Struct: p}, VCS_sync_Results{Struct: r}}
			return s.Sync(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_fetch{c, opts, VCS_fetch_Params{Struct: p}, VCS_fetch_Results{Struct: r}}
			return s.Fetch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commitInfo{c, opts, VCS_commitInfo_Params{Struct: p}, VCS_commitInfo_Results{Struct: r}}
			return s.CommitInfo(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 1},
	})

	return methods
}

// VCS_log holds the arguments for a server call to VCS.log.
type VCS_log struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_log_Params
	Results VCS_log_Results
}

// VCS_commit holds the arguments for a server call to VCS.commit.
type VCS_commit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_commit_Params
	Results VCS_commit_Results
}

// VCS_tag holds the arguments for a server call to VCS.tag.
type VCS_tag struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_tag_Params
	Results VCS_tag_Results
}

// VCS_untag holds the arguments for a server call to VCS.untag.
type VCS_untag struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_untag_Params
	Results VCS_untag_Results
}

// VCS_reset holds the arguments for a server call to VCS.reset.
type VCS_reset struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_reset_Params
	Results VCS_reset_Results
}

// VCS_history holds the arguments for a server call to VCS.history.
type VCS_history struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_history_Params
	Results VCS_history_Results
}

// VCS_makeDiff holds the arguments for a server call to VCS.makeDiff.
type VCS_makeDiff struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_makeDiff_Params
	Results VCS_makeDiff_Results
}

// VCS_sync holds the arguments for a server call to VCS.sync.
type VCS_sync struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_sync_Params
	Results VCS_sync_Results
}

// VCS_fetch holds the arguments for a server call to VCS.fetch.
type VCS_fetch struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_fetch_Params
	Results VCS_fetch_Results
}

// VCS_commitInfo holds the arguments for a server call to VCS.commitInfo.
type VCS_commitInfo struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  VCS_commitInfo_Params
	Results VCS_commitInfo_Results
}

type VCS_log_Params struct{ capnp.Struct }

// VCS_log_Params_TypeID is the unique identifier for the type VCS_log_Params.
const VCS_log_Params_TypeID = 0xa4efd353c57d2b85

func NewVCS_log_Params(s *capnp.Segment) (VCS_log_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_log_Params{st}, err
}

func NewRootVCS_log_Params(s *capnp.Segment) (VCS_log_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_log_Params{st}, err
}

func ReadRootVCS_log_Params(msg *capnp.Message) (VCS_log_Params, error) {
	root, err := msg.RootPtr()
	return VCS_log_Params{root.Struct()}, err
}

func (s VCS_log_Params) String() string {
	str, _ := text.Marshal(0xa4efd353c57d2b85, s.Struct)
	return str
}

// VCS_log_Params_List is a list of VCS_log_Params.
type VCS_log_Params_List struct{ capnp.List }

// NewVCS_log_Params creates a new list of VCS_log_Params.
func NewVCS_log_Params_List(s *capnp.Segment, sz int32) (VCS_log_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_log_Params_List{l}, err
}

func (s VCS_log_Params_List) At(i int) VCS_log_Params { return VCS_log_Params{s.List.Struct(i)} }

func (s VCS_log_Params_List) Set(i int, v VCS_log_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s VCS_log_Params_List) String() string {
	str, _ := text.MarshalList(0xa4efd353c57d2b85, s.List)
	return str
}

// VCS_log_Params_Promise is a wrapper for a VCS_log_Params promised by a client call.
type VCS_log_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_log_Params_Promise) Struct() (VCS_log_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_log_Params{s}, err
}

type VCS_log_Results struct{ capnp.Struct }

// VCS_log_Results_TypeID is the unique identifier for the type VCS_log_Results.
const VCS_log_Results_TypeID = 0xf7250939585a23f6

func NewVCS_log_Results(s *capnp.Segment) (VCS_log_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_log_Results{st}, err
}

func NewRootVCS_log_Results(s *capnp.Segment) (VCS_log_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_log_Results{st}, err
}

func ReadRootVCS_log_Results(msg *capnp.Message) (VCS_log_Results, error) {
	root, err := msg.RootPtr()
	return VCS_log_Results{root.Struct()}, err
}

func (s VCS_log_Results) String() string {
	str, _ := text.Marshal(0xf7250939585a23f6, s.Struct)
	return str
}

func (s VCS_log_Results) Entries() (Commit_List, error) {
	p, err := s.Struct.Ptr(0)
	return Commit_List{List: p.List()}, err
}

func (s VCS_log_Results) HasEntries() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_log_Results) SetEntries(v Commit_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewEntries sets the entries field to a newly
// allocated Commit_List, preferring placement in s's segment.
func (s VCS_log_Results) NewEntries(n int32) (Commit_List, error) {
	l, err := NewCommit_List(s.Struct.Segment(), n)
	if err != nil {
		return Commit_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// VCS_log_Results_List is a list of VCS_log_Results.
type VCS_log_Results_List struct{ capnp.List }

// NewVCS_log_Results creates a new list of VCS_log_Results.
func NewVCS_log_Results_List(s *capnp.Segment, sz int32) (VCS_log_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_log_Results_List{l}, err
}

func (s VCS_log_Results_List) At(i int) VCS_log_Results { return VCS_log_Results{s.List.Struct(i)} }

func (s VCS_log_Results_List) Set(i int, v VCS_log_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_log_Results_List) String() string {
	str, _ := text.MarshalList(0xf7250939585a23f6, s.List)
	return str
}

// VCS_log_Results_Promise is a wrapper for a VCS_log_Results promised by a client call.
type VCS_log_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_log_Results_Promise) Struct() (VCS_log_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_log_Results{s}, err
}

type VCS_commit_Params struct{ capnp.Struct }

// VCS_commit_Params_TypeID is the unique identifier for the type VCS_commit_Params.
const VCS_commit_Params_TypeID = 0xd9459f2361338d96

func NewVCS_commit_Params(s *capnp.Segment) (VCS_commit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commit_Params{st}, err
}

func NewRootVCS_commit_Params(s *capnp.Segment) (VCS_commit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commit_Params{st}, err
}

func ReadRootVCS_commit_Params(msg *capnp.Message) (VCS_commit_Params, error) {
	root, err := msg.RootPtr()
	return VCS_commit_Params{root.Struct()}, err
}

func (s VCS_commit_Params) String() string {
	str, _ := text.Marshal(0xd9459f2361338d96, s.Struct)
	return str
}

func (s VCS_commit_Params) Msg() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_commit_Params) HasMsg() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_commit_Params) MsgBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_commit_Params) SetMsg(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_commit_Params_List is a list of VCS_commit_Params.
type VCS_commit_Params_List struct{ capnp.List }

// NewVCS_commit_Params creates a new list of VCS_commit_Params.
func NewVCS_commit_Params_List(s *capnp.Segment, sz int32) (VCS_commit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_commit_Params_List{l}, err
}

func (s VCS_commit_Params_List) At(i int) VCS_commit_Params {
	return VCS_commit_Params{s.List.Struct(i)}
}

func (s VCS_commit_Params_List) Set(i int, v VCS_commit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commit_Params_List) String() string {
	str, _ := text.MarshalList(0xd9459f2361338d96, s.List)
	return str
}

// VCS_commit_Params_Promise is a wrapper for a VCS_commit_Params promised by a client call.
type VCS_commit_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_commit_Params_Promise) Struct() (VCS_commit_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commit_Params{s}, err
}

type VCS_commit_Results struct{ capnp.Struct }

// VCS_commit_Results_TypeID is the unique identifier for the type VCS_commit_Results.
const VCS_commit_Results_TypeID = 0xb7d0dd6b467e7539

func NewVCS_commit_Results(s *capnp.Segment) (VCS_commit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_commit_Results{st}, err
}

func NewRootVCS_commit_Results(s *capnp.Segment) (VCS_commit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_commit_Results{st}, err
}

func ReadRootVCS_commit_Results(msg *capnp.Message) (VCS_commit_Results, error) {
	root, err := msg.RootPtr()
	return VCS_commit_Results{root.Struct()}, err
}

func (s VCS_commit_Results) String() string {
	str, _ := text.Marshal(0xb7d0dd6b467e7539, s.Struct)
	return str
}

// VCS_commit_Results_List is a list of VCS_commit_Results.
type VCS_commit_Results_List struct{ capnp.List }

// NewVCS_commit_Results creates a new list of VCS_commit_Results.
func NewVCS_commit_Results_List(s *capnp.Segment, sz int32) (VCS_commit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_commit_Results_List{l}, err
}

func (s VCS_commit_Results_List) At(i int) VCS_commit_Results {
	return VCS_commit_Results{s.List.Struct(i)}
}

func (s VCS_commit_Results_List) Set(i int, v VCS_commit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commit_Results_List) String() string {
	str, _ := text.MarshalList(0xb7d0dd6b467e7539, s.List)
	return str
}

// VCS_commit_Results_Promise is a wrapper for a VCS_commit_Results promised by a client call.
type VCS_commit_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_commit_Results_Promise) Struct() (VCS_commit_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commit_Results{s}, err
}

type VCS_tag_Params struct{ capnp.Struct }

// VCS_tag_Params_TypeID is the unique identifier for the type VCS_tag_Params.
const VCS_tag_Params_TypeID = 0xa97d67096ee7d46d

func NewVCS_tag_Params(s *capnp.Segment) (VCS_tag_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VCS_tag_Params{st}, err
}

func NewRootVCS_tag_Params(s *capnp.Segment) (VCS_tag_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return VCS_tag_Params{st}, err
}

func ReadRootVCS_tag_Params(msg *capnp.Message) (VCS_tag_Params, error) {
	root, err := msg.RootPtr()
	return VCS_tag_Params{root.Struct()}, err
}

func (s VCS_tag_Params) String() string {
	str, _ := text.Marshal(0xa97d67096ee7d46d, s.Struct)
	return str
}

func (s VCS_tag_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_tag_Params) HasRev() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_tag_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_tag_Params) SetRev(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_tag_Params) TagName() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_tag_Params) HasTagName() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_tag_Params) TagNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_tag_Params) SetTagName(v string) error {
	return s.Struct.SetText(1, v)
}

// VCS_tag_Params_List is a list of VCS_tag_Params.
type VCS_tag_Params_List struct{ capnp.List }

// NewVCS_tag_Params creates a new list of VCS_tag_Params.
func NewVCS_tag_Params_List(s *capnp.Segment, sz int32) (VCS_tag_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return VCS_tag_Params_List{l}, err
}

func (s VCS_tag_Params_List) At(i int) VCS_tag_Params { return VCS_tag_Params{s.List.Struct(i)} }

func (s VCS_tag_Params_List) Set(i int, v VCS_tag_Params) error { return s.List.SetStruct(i, v.Struct) }

func (s VCS_tag_Params_List) String() string {
	str, _ := text.MarshalList(0xa97d67096ee7d46d, s.List)
	return str
}

// VCS_tag_Params_Promise is a wrapper for a VCS_tag_Params promised by a client call.
type VCS_tag_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_tag_Params_Promise) Struct() (VCS_tag_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_tag_Params{s}, err
}

type VCS_tag_Results struct{ capnp.Struct }

// VCS_tag_Results_TypeID is the unique identifier for the type VCS_tag_Results.
const VCS_tag_Results_TypeID = 0xbda949777c149f4b

func NewVCS_tag_Results(s *capnp.Segment) (VCS_tag_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_tag_Results{st}, err
}

func NewRootVCS_tag_Results(s *capnp.Segment) (VCS_tag_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_tag_Results{st}, err
}

func ReadRootVCS_tag_Results(msg *capnp.Message) (VCS_tag_Results, error) {
	root, err := msg.RootPtr()
	return VCS_tag_Results{root.Struct()}, err
}

func (s VCS_tag_Results) String() string {
	str, _ := text.Marshal(0xbda949777c149f4b, s.Struct)
	return str
}

// VCS_tag_Results_List is a list of VCS_tag_Results.
type VCS_tag_Results_List struct{ capnp.List }

// NewVCS_tag_Results creates a new list of VCS_tag_Results.
func NewVCS_tag_Results_List(s *capnp.Segment, sz int32) (VCS_tag_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_tag_Results_List{l}, err
}

func (s VCS_tag_Results_List) At(i int) VCS_tag_Results { return VCS_tag_Results{s.List.Struct(i)} }

func (s VCS_tag_Results_List) Set(i int, v VCS_tag_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_tag_Results_List) String() string {
	str, _ := text.MarshalList(0xbda949777c149f4b, s.List)
	return str
}

// VCS_tag_Results_Promise is a wrapper for a VCS_tag_Results promised by a client call.
type VCS_tag_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_tag_Results_Promise) Struct() (VCS_tag_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_tag_Results{s}, err
}

type VCS_untag_Params struct{ capnp.Struct }

// VCS_untag_Params_TypeID is the unique identifier for the type VCS_untag_Params.
const VCS_untag_Params_TypeID = 0xf4d42db113af3a4b

func NewVCS_untag_Params(s *capnp.Segment) (VCS_untag_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_untag_Params{st}, err
}

func NewRootVCS_untag_Params(s *capnp.Segment) (VCS_untag_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_untag_Params{st}, err
}

func ReadRootVCS_untag_Params(msg *capnp.Message) (VCS_untag_Params, error) {
	root, err := msg.RootPtr()
	return VCS_untag_Params{root.Struct()}, err
}

func (s VCS_untag_Params) String() string {
	str, _ := text.Marshal(0xf4d42db113af3a4b, s.Struct)
	return str
}

func (s VCS_untag_Params) TagName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_untag_Params) HasTagName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_untag_Params) TagNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_untag_Params) SetTagName(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_untag_Params_List is a list of VCS_untag_Params.
type VCS_untag_Params_List struct{ capnp.List }

// NewVCS_untag_Params creates a new list of VCS_untag_Params.
func NewVCS_untag_Params_List(s *capnp.Segment, sz int32) (VCS_untag_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_untag_Params_List{l}, err
}

func (s VCS_untag_Params_List) At(i int) VCS_untag_Params { return VCS_untag_Params{s.List.Struct(i)} }

func (s VCS_untag_Params_List) Set(i int, v VCS_untag_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_untag_Params_List) String() string {
	str, _ := text.MarshalList(0xf4d42db113af3a4b, s.List)
	return str
}

// VCS_untag_Params_Promise is a wrapper for a VCS_untag_Params promised by a client call.
type VCS_untag_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_untag_Params_Promise) Struct() (VCS_untag_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_untag_Params{s}, err
}

type VCS_untag_Results struct{ capnp.Struct }

// VCS_untag_Results_TypeID is the unique identifier for the type VCS_untag_Results.
const VCS_untag_Results_TypeID = 0xba0de490234c27af

func NewVCS_untag_Results(s *capnp.Segment) (VCS_untag_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_untag_Results{st}, err
}

func NewRootVCS_untag_Results(s *capnp.Segment) (VCS_untag_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_untag_Results{st}, err
}

func ReadRootVCS_untag_Results(msg *capnp.Message) (VCS_untag_Results, error) {
	root, err := msg.RootPtr()
	return VCS_untag_Results{root.Struct()}, err
}

func (s VCS_untag_Results) String() string {
	str, _ := text.Marshal(0xba0de490234c27af, s.Struct)
	return str
}

// VCS_untag_Results_List is a list of VCS_untag_Results.
type VCS_untag_Results_List struct{ capnp.List }

// NewVCS_untag_Results creates a new list of VCS_untag_Results.
func NewVCS_untag_Results_List(s *capnp.Segment, sz int32) (VCS_untag_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_untag_Results_List{l}, err
}

func (s VCS_untag_Results_List) At(i int) VCS_untag_Results {
	return VCS_untag_Results{s.List.Struct(i)}
}

func (s VCS_untag_Results_List) Set(i int, v VCS_untag_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_untag_Results_List) String() string {
	str, _ := text.MarshalList(0xba0de490234c27af, s.List)
	return str
}

// VCS_untag_Results_Promise is a wrapper for a VCS_untag_Results promised by a client call.
type VCS_untag_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_untag_Results_Promise) Struct() (VCS_untag_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_untag_Results{s}, err
}

type VCS_reset_Params struct{ capnp.Struct }

// VCS_reset_Params_TypeID is the unique identifier for the type VCS_reset_Params.
const VCS_reset_Params_TypeID = 0xe71560d8bc06c6fd

func NewVCS_reset_Params(s *capnp.Segment) (VCS_reset_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return VCS_reset_Params{st}, err
}

func NewRootVCS_reset_Params(s *capnp.Segment) (VCS_reset_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return VCS_reset_Params{st}, err
}

func ReadRootVCS_reset_Params(msg *capnp.Message) (VCS_reset_Params, error) {
	root, err := msg.RootPtr()
	return VCS_reset_Params{root.Struct()}, err
}

func (s VCS_reset_Params) String() string {
	str, _ := text.Marshal(0xe71560d8bc06c6fd, s.Struct)
	return str
}

func (s VCS_reset_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_reset_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_reset_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_reset_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_reset_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_reset_Params) HasRev() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_reset_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_reset_Params) SetRev(v string) error {
	return s.Struct.SetText(1, v)
}

func (s VCS_reset_Params) Force() bool {
	return s.Struct.Bit(0)
}

func (s VCS_reset_Params) SetForce(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_reset_Params_List is a list of VCS_reset_Params.
type VCS_reset_Params_List struct{ capnp.List }

// NewVCS_reset_Params creates a new list of VCS_reset_Params.
func NewVCS_reset_Params_List(s *capnp.Segment, sz int32) (VCS_reset_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return VCS_reset_Params_List{l}, err
}

func (s VCS_reset_Params_List) At(i int) VCS_reset_Params { return VCS_reset_Params{s.List.Struct(i)} }

func (s VCS_reset_Params_List) Set(i int, v VCS_reset_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_reset_Params_List) String() string {
	str, _ := text.MarshalList(0xe71560d8bc06c6fd, s.List)
	return str
}

// VCS_reset_Params_Promise is a wrapper for a VCS_reset_Params promised by a client call.
type VCS_reset_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_reset_Params_Promise) Struct() (VCS_reset_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_reset_Params{s}, err
}

type VCS_reset_Results struct{ capnp.Struct }

// VCS_reset_Results_TypeID is the unique identifier for the type VCS_reset_Results.
const VCS_reset_Results_TypeID = 0xf9b772853fd93ea9

func NewVCS_reset_Results(s *capnp.Segment) (VCS_reset_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_reset_Results{st}, err
}

func NewRootVCS_reset_Results(s *capnp.Segment) (VCS_reset_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_reset_Results{st}, err
}

func ReadRootVCS_reset_Results(msg *capnp.Message) (VCS_reset_Results, error) {
	root, err := msg.RootPtr()
	return VCS_reset_Results{root.Struct()}, err
}

func (s VCS_reset_Results) String() string {
	str, _ := text.Marshal(0xf9b772853fd93ea9, s.Struct)
	return str
}

// VCS_reset_Results_List is a list of VCS_reset_Results.
type VCS_reset_Results_List struct{ capnp.List }

// NewVCS_reset_Results creates a new list of VCS_reset_Results.
func NewVCS_reset_Results_List(s *capnp.Segment, sz int32) (VCS_reset_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_reset_Results_List{l}, err
}

func (s VCS_reset_Results_List) At(i int) VCS_reset_Results {
	return VCS_reset_Results{s.List.Struct(i)}
}

func (s VCS_reset_Results_List) Set(i int, v VCS_reset_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_reset_Results_List) String() string {
	str, _ := text.MarshalList(0xf9b772853fd93ea9, s.List)
	return str
}

// VCS_reset_Results_Promise is a wrapper for a VCS_reset_Results promised by a client call.
type VCS_reset_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_reset_Results_Promise) Struct() (VCS_reset_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_reset_Results{s}, err
}

type VCS_history_Params struct{ capnp.Struct }

// VCS_history_Params_TypeID is the unique identifier for the type VCS_history_Params.
const VCS_history_Params_TypeID = 0xe154e487144bf3c2

func NewVCS_history_Params(s *capnp.Segment) (VCS_history_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Params{st}, err
}

func NewRootVCS_history_Params(s *capnp.Segment) (VCS_history_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Params{st}, err
}

func ReadRootVCS_history_Params(msg *capnp.Message) (VCS_history_Params, error) {
	root, err := msg.RootPtr()
	return VCS_history_Params{root.Struct()}, err
}

func (s VCS_history_Params) String() string {
	str, _ := text.Marshal(0xe154e487144bf3c2, s.Struct)
	return str
}

func (s VCS_history_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_history_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_history_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_history_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_history_Params_List is a list of VCS_history_Params.
type VCS_history_Params_List struct{ capnp.List }

// NewVCS_history_Params creates a new list of VCS_history_Params.
func NewVCS_history_Params_List(s *capnp.Segment, sz int32) (VCS_history_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_history_Params_List{l}, err
}

func (s VCS_history_Params_List) At(i int) VCS_history_Params {
	return VCS_history_Params{s.List.Struct(i)}
}

func (s VCS_history_Params_List) Set(i int, v VCS_history_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_history_Params_List) String() string {
	str, _ := text.MarshalList(0xe154e487144bf3c2, s.List)
	return str
}

// VCS_history_Params_Promise is a wrapper for a VCS_history_Params promised by a client call.
type VCS_history_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_history_Params_Promise) Struct() (VCS_history_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_history_Params{s}, err
}

type VCS_history_Results struct{ capnp.Struct }

// VCS_history_Results_TypeID is the unique identifier for the type VCS_history_Results.
const VCS_history_Results_TypeID = 0xe0f49db8c42c72b2

func NewVCS_history_Results(s *capnp.Segment) (VCS_history_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Results{st}, err
}

func NewRootVCS_history_Results(s *capnp.Segment) (VCS_history_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_history_Results{st}, err
}

func ReadRootVCS_history_Results(msg *capnp.Message) (VCS_history_Results, error) {
	root, err := msg.RootPtr()
	return VCS_history_Results{root.Struct()}, err
}

func (s VCS_history_Results) String() string {
	str, _ := text.Marshal(0xe0f49db8c42c72b2, s.Struct)
	return str
}

func (s VCS_history_Results) History() (Change_List, error) {
	p, err := s.Struct.Ptr(0)
	return Change_List{List: p.List()}, err
}

func (s VCS_history_Results) HasHistory() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_history_Results) SetHistory(v Change_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewHistory sets the history field to a newly
// allocated Change_List, preferring placement in s's segment.
func (s VCS_history_Results) NewHistory(n int32) (Change_List, error) {
	l, err := NewChange_List(s.Struct.Segment(), n)
	if err != nil {
		return Change_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// VCS_history_Results_List is a list of VCS_history_Results.
type VCS_history_Results_List struct{ capnp.List }

// NewVCS_history_Results creates a new list of VCS_history_Results.
func NewVCS_history_Results_List(s *capnp.Segment, sz int32) (VCS_history_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_history_Results_List{l}, err
}

func (s VCS_history_Results_List) At(i int) VCS_history_Results {
	return VCS_history_Results{s.List.Struct(i)}
}

func (s VCS_history_Results_List) Set(i int, v VCS_history_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_history_Results_List) String() string {
	str, _ := text.MarshalList(0xe0f49db8c42c72b2, s.List)
	return str
}

// VCS_history_Results_Promise is a wrapper for a VCS_history_Results promised by a client call.
type VCS_history_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_history_Results_Promise) Struct() (VCS_history_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_history_Results{s}, err
}

type VCS_makeDiff_Params struct{ capnp.Struct }

// VCS_makeDiff_Params_TypeID is the unique identifier for the type VCS_makeDiff_Params.
const VCS_makeDiff_Params_TypeID = 0xe2f81b4403ef433b

func NewVCS_makeDiff_Params(s *capnp.Segment) (VCS_makeDiff_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return VCS_makeDiff_Params{st}, err
}

func NewRootVCS_makeDiff_Params(s *capnp.Segment) (VCS_makeDiff_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4})
	return VCS_makeDiff_Params{st}, err
}

func ReadRootVCS_makeDiff_Params(msg *capnp.Message) (VCS_makeDiff_Params, error) {
	root, err := msg.RootPtr()
	return VCS_makeDiff_Params{root.Struct()}, err
}

func (s VCS_makeDiff_Params) String() string {
	str, _ := text.Marshal(0xe2f81b4403ef433b, s.Struct)
	return str
}

func (s VCS_makeDiff_Params) LocalOwner() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasLocalOwner() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) LocalOwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetLocalOwner(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_makeDiff_Params) RemoteOwner() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasRemoteOwner() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) RemoteOwnerBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetRemoteOwner(v string) error {
	return s.Struct.SetText(1, v)
}

func (s VCS_makeDiff_Params) LocalRev() (string, error) {
	p, err := s.Struct.Ptr(2)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasLocalRev() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) LocalRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(2)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetLocalRev(v string) error {
	return s.Struct.SetText(2, v)
}

func (s VCS_makeDiff_Params) RemoteRev() (string, error) {
	p, err := s.Struct.Ptr(3)
	return p.Text(), err
}

func (s VCS_makeDiff_Params) HasRemoteRev() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Params) RemoteRevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(3)
	return p.TextBytes(), err
}

func (s VCS_makeDiff_Params) SetRemoteRev(v string) error {
	return s.Struct.SetText(3, v)
}

func (s VCS_makeDiff_Params) NeedFetch() bool {
	return s.Struct.Bit(0)
}

func (s VCS_makeDiff_Params) SetNeedFetch(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_makeDiff_Params_List is a list of VCS_makeDiff_Params.
type VCS_makeDiff_Params_List struct{ capnp.List }

// NewVCS_makeDiff_Params creates a new list of VCS_makeDiff_Params.
func NewVCS_makeDiff_Params_List(s *capnp.Segment, sz int32) (VCS_makeDiff_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 4}, sz)
	return VCS_makeDiff_Params_List{l}, err
}

func (s VCS_makeDiff_Params_List) At(i int) VCS_makeDiff_Params {
	return VCS_makeDiff_Params{s.List.Struct(i)}
}

func (s VCS_makeDiff_Params_List) Set(i int, v VCS_makeDiff_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_makeDiff_Params_List) String() string {
	str, _ := text.MarshalList(0xe2f81b4403ef433b, s.List)
	return str
}

// VCS_makeDiff_Params_Promise is a wrapper for a VCS_makeDiff_Params promised by a client call.
type VCS_makeDiff_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_makeDiff_Params_Promise) Struct() (VCS_makeDiff_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_makeDiff_Params{s}, err
}

type VCS_makeDiff_Results struct{ capnp.Struct }

// VCS_makeDiff_Results_TypeID is the unique identifier for the type VCS_makeDiff_Results.
const VCS_makeDiff_Results_TypeID = 0xd7ef486de484610d

func NewVCS_makeDiff_Results(s *capnp.Segment) (VCS_makeDiff_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_makeDiff_Results{st}, err
}

func NewRootVCS_makeDiff_Results(s *capnp.Segment) (VCS_makeDiff_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_makeDiff_Results{st}, err
}

func ReadRootVCS_makeDiff_Results(msg *capnp.Message) (VCS_makeDiff_Results, error) {
	root, err := msg.RootPtr()
	return VCS_makeDiff_Results{root.Struct()}, err
}

func (s VCS_makeDiff_Results) String() string {
	str, _ := text.Marshal(0xd7ef486de484610d, s.Struct)
	return str
}

func (s VCS_makeDiff_Results) Diff() (Diff, error) {
	p, err := s.Struct.Ptr(0)
	return Diff{Struct: p.Struct()}, err
}

func (s VCS_makeDiff_Results) HasDiff() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_makeDiff_Results) SetDiff(v Diff) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDiff sets the diff field to a newly
// allocated Diff struct, preferring placement in s's segment.
func (s VCS_makeDiff_Results) NewDiff() (Diff, error) {
	ss, err := NewDiff(s.Struct.Segment())
	if err != nil {
		return Diff{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_makeDiff_Results_List is a list of VCS_makeDiff_Results.
type VCS_makeDiff_Results_List struct{ capnp.List }

// NewVCS_makeDiff_Results creates a new list of VCS_makeDiff_Results.
func NewVCS_makeDiff_Results_List(s *capnp.Segment, sz int32) (VCS_makeDiff_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_makeDiff_Results_List{l}, err
}

func (s VCS_makeDiff_Results_List) At(i int) VCS_makeDiff_Results {
	return VCS_makeDiff_Results{s.List.Struct(i)}
}

func (s VCS_makeDiff_Results_List) Set(i int, v VCS_makeDiff_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_makeDiff_Results_List) String() string {
	str, _ := text.MarshalList(0xd7ef486de484610d, s.List)
	return str
}

// VCS_makeDiff_Results_Promise is a wrapper for a VCS_makeDiff_Results promised by a client call.
type VCS_makeDiff_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_makeDiff_Results_Promise) Struct() (VCS_makeDiff_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_makeDiff_Results{s}, err
}

func (p VCS_makeDiff_Results_Promise) Diff() Diff_Promise {
	return Diff_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type VCS_sync_Params struct{ capnp.Struct }

// VCS_sync_Params_TypeID is the unique identifier for the type VCS_sync_Params.
const VCS_sync_Params_TypeID = 0xb05bd83a34de71b7

func NewVCS_sync_Params(s *capnp.Segment) (VCS_sync_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_sync_Params{st}, err
}

func NewRootVCS_sync_Params(s *capnp.Segment) (VCS_sync_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_sync_Params{st}, err
}

func ReadRootVCS_sync_Params(msg *capnp.Message) (VCS_sync_Params, error) {
	root, err := msg.RootPtr()
	return VCS_sync_Params{root.Struct()}, err
}

func (s VCS_sync_Params) String() string {
	str, _ := text.Marshal(0xb05bd83a34de71b7, s.Struct)
	return str
}

func (s VCS_sync_Params) WithWhom() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_sync_Params) HasWithWhom() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_sync_Params) WithWhomBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_sync_Params) SetWithWhom(v string) error {
	return s.Struct.SetText(0, v)
}

func (s VCS_sync_Params) NeedFetch() bool {
	return s.Struct.Bit(0)
}

func (s VCS_sync_Params) SetNeedFetch(v bool) {
	s.Struct.SetBit(0, v)
}

// VCS_sync_Params_List is a list of VCS_sync_Params.
type VCS_sync_Params_List struct{ capnp.List }

// NewVCS_sync_Params creates a new list of VCS_sync_Params.
func NewVCS_sync_Params_List(s *capnp.Segment, sz int32) (VCS_sync_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return VCS_sync_Params_List{l}, err
}

func (s VCS_sync_Params_List) At(i int) VCS_sync_Params { return VCS_sync_Params{s.List.Struct(i)} }

func (s VCS_sync_Params_List) Set(i int, v VCS_sync_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_sync_Params_List) String() string {
	str, _ := text.MarshalList(0xb05bd83a34de71b7, s.List)
	return str
}

// VCS_sync_Params_Promise is a wrapper for a VCS_sync_Params promised by a client call.
type VCS_sync_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_sync_Params_Promise) Struct() (VCS_sync_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_sync_Params{s}, err
}

type VCS_sync_Results struct{ capnp.Struct }

// VCS_sync_Results_TypeID is the unique identifier for the type VCS_sync_Results.
const VCS_sync_Results_TypeID = 0xfa04b4272d0ffcd9

func NewVCS_sync_Results(s *capnp.Segment) (VCS_sync_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_sync_Results{st}, err
}

func NewRootVCS_sync_Results(s *capnp.Segment) (VCS_sync_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_sync_Results{st}, err
}

func ReadRootVCS_sync_Results(msg *capnp.Message) (VCS_sync_Results, error) {
	root, err := msg.RootPtr()
	return VCS_sync_Results{root.Struct()}, err
}

func (s VCS_sync_Results) String() string {
	str, _ := text.Marshal(0xfa04b4272d0ffcd9, s.Struct)
	return str
}

func (s VCS_sync_Results) Diff() (Diff, error) {
	p, err := s.Struct.Ptr(0)
	return Diff{Struct: p.Struct()}, err
}

func (s VCS_sync_Results) HasDiff() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_sync_Results) SetDiff(v Diff) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDiff sets the diff field to a newly
// allocated Diff struct, preferring placement in s's segment.
func (s VCS_sync_Results) NewDiff() (Diff, error) {
	ss, err := NewDiff(s.Struct.Segment())
	if err != nil {
		return Diff{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_sync_Results_List is a list of VCS_sync_Results.
type VCS_sync_Results_List struct{ capnp.List }

// NewVCS_sync_Results creates a new list of VCS_sync_Results.
func NewVCS_sync_Results_List(s *capnp.Segment, sz int32) (VCS_sync_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_sync_Results_List{l}, err
}

func (s VCS_sync_Results_List) At(i int) VCS_sync_Results { return VCS_sync_Results{s.List.Struct(i)} }

func (s VCS_sync_Results_List) Set(i int, v VCS_sync_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_sync_Results_List) String() string {
	str, _ := text.MarshalList(0xfa04b4272d0ffcd9, s.List)
	return str
}

// VCS_sync_Results_Promise is a wrapper for a VCS_sync_Results promised by a client call.
type VCS_sync_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_sync_Results_Promise) Struct() (VCS_sync_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_sync_Results{s}, err
}

func (p VCS_sync_Results_Promise) Diff() Diff_Promise {
	return Diff_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type VCS_fetch_Params struct{ capnp.Struct }

// VCS_fetch_Params_TypeID is the unique identifier for the type VCS_fetch_Params.
const VCS_fetch_Params_TypeID = 0xaff62edfdbfe53d0

func NewVCS_fetch_Params(s *capnp.Segment) (VCS_fetch_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_fetch_Params{st}, err
}

func NewRootVCS_fetch_Params(s *capnp.Segment) (VCS_fetch_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_fetch_Params{st}, err
}

func ReadRootVCS_fetch_Params(msg *capnp.Message) (VCS_fetch_Params, error) {
	root, err := msg.RootPtr()
	return VCS_fetch_Params{root.Struct()}, err
}

func (s VCS_fetch_Params) String() string {
	str, _ := text.Marshal(0xaff62edfdbfe53d0, s.Struct)
	return str
}

func (s VCS_fetch_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_fetch_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_fetch_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_fetch_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_fetch_Params_List is a list of VCS_fetch_Params.
type VCS_fetch_Params_List struct{ capnp.List }

// NewVCS_fetch_Params creates a new list of VCS_fetch_Params.
func NewVCS_fetch_Params_List(s *capnp.Segment, sz int32) (VCS_fetch_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_fetch_Params_List{l}, err
}

func (s VCS_fetch_Params_List) At(i int) VCS_fetch_Params { return VCS_fetch_Params{s.List.Struct(i)} }

func (s VCS_fetch_Params_List) Set(i int, v VCS_fetch_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_fetch_Params_List) String() string {
	str, _ := text.MarshalList(0xaff62edfdbfe53d0, s.List)
	return str
}

// VCS_fetch_Params_Promise is a wrapper for a VCS_fetch_Params promised by a client call.
type VCS_fetch_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_fetch_Params_Promise) Struct() (VCS_fetch_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_fetch_Params{s}, err
}

type VCS_fetch_Results struct{ capnp.Struct }

// VCS_fetch_Results_TypeID is the unique identifier for the type VCS_fetch_Results.
const VCS_fetch_Results_TypeID = 0xb262e0d6c2474d9c

func NewVCS_fetch_Results(s *capnp.Segment) (VCS_fetch_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_fetch_Results{st}, err
}

func NewRootVCS_fetch_Results(s *capnp.Segment) (VCS_fetch_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return VCS_fetch_Results{st}, err
}

func ReadRootVCS_fetch_Results(msg *capnp.Message) (VCS_fetch_Results, error) {
	root, err := msg.RootPtr()
	return VCS_fetch_Results{root.Struct()}, err
}

func (s VCS_fetch_Results) String() string {
	str, _ := text.Marshal(0xb262e0d6c2474d9c, s.Struct)
	return str
}

// VCS_fetch_Results_List is a list of VCS_fetch_Results.
type VCS_fetch_Results_List struct{ capnp.List }

// NewVCS_fetch_Results creates a new list of VCS_fetch_Results.
func NewVCS_fetch_Results_List(s *capnp.Segment, sz int32) (VCS_fetch_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return VCS_fetch_Results_List{l}, err
}

func (s VCS_fetch_Results_List) At(i int) VCS_fetch_Results {
	return VCS_fetch_Results{s.List.Struct(i)}
}

func (s VCS_fetch_Results_List) Set(i int, v VCS_fetch_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_fetch_Results_List) String() string {
	str, _ := text.MarshalList(0xb262e0d6c2474d9c, s.List)
	return str
}

// VCS_fetch_Results_Promise is a wrapper for a VCS_fetch_Results promised by a client call.
type VCS_fetch_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_fetch_Results_Promise) Struct() (VCS_fetch_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_fetch_Results{s}, err
}

type VCS_commitInfo_Params struct{ capnp.Struct }

// VCS_commitInfo_Params_TypeID is the unique identifier for the type VCS_commitInfo_Params.
const VCS_commitInfo_Params_TypeID = 0xa630576401b1a5b7

func NewVCS_commitInfo_Params(s *capnp.Segment) (VCS_commitInfo_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commitInfo_Params{st}, err
}

func NewRootVCS_commitInfo_Params(s *capnp.Segment) (VCS_commitInfo_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return VCS_commitInfo_Params{st}, err
}

func ReadRootVCS_commitInfo_Params(msg *capnp.Message) (VCS_commitInfo_Params, error) {
	root, err := msg.RootPtr()
	return VCS_commitInfo_Params{root.Struct()}, err
}

func (s VCS_commitInfo_Params) String() string {
	str, _ := text.Marshal(0xa630576401b1a5b7, s.Struct)
	return str
}

func (s VCS_commitInfo_Params) Rev() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s VCS_commitInfo_Params) HasRev() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_commitInfo_Params) RevBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s VCS_commitInfo_Params) SetRev(v string) error {
	return s.Struct.SetText(0, v)
}

// VCS_commitInfo_Params_List is a list of VCS_commitInfo_Params.
type VCS_commitInfo_Params_List struct{ capnp.List }

// NewVCS_commitInfo_Params creates a new list of VCS_commitInfo_Params.
func NewVCS_commitInfo_Params_List(s *capnp.Segment, sz int32) (VCS_commitInfo_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return VCS_commitInfo_Params_List{l}, err
}

func (s VCS_commitInfo_Params_List) At(i int) VCS_commitInfo_Params {
	return VCS_commitInfo_Params{s.List.Struct(i)}
}

func (s VCS_commitInfo_Params_List) Set(i int, v VCS_commitInfo_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commitInfo_Params_List) String() string {
	str, _ := text.MarshalList(0xa630576401b1a5b7, s.List)
	return str
}

// VCS_commitInfo_Params_Promise is a wrapper for a VCS_commitInfo_Params promised by a client call.
type VCS_commitInfo_Params_Promise struct{ *capnp.Pipeline }

func (p VCS_commitInfo_Params_Promise) Struct() (VCS_commitInfo_Params, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commitInfo_Params{s}, err
}

type VCS_commitInfo_Results struct{ capnp.Struct }

// VCS_commitInfo_Results_TypeID is the unique identifier for the type VCS_commitInfo_Results.
const VCS_commitInfo_Results_TypeID = 0xa1a9e5ab638eed79

func NewVCS_commitInfo_Results(s *capnp.Segment) (VCS_commitInfo_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_commitInfo_Results{st}, err
}

func NewRootVCS_commitInfo_Results(s *capnp.Segment) (VCS_commitInfo_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return VCS_commitInfo_Results{st}, err
}

func ReadRootVCS_commitInfo_Results(msg *capnp.Message) (VCS_commitInfo_Results, error) {
	root, err := msg.RootPtr()
	return VCS_commitInfo_Results{root.Struct()}, err
}

func (s VCS_commitInfo_Results) String() string {
	str, _ := text.Marshal(0xa1a9e5ab638eed79, s.Struct)
	return str
}

func (s VCS_commitInfo_Results) IsValidRef() bool {
	return s.Struct.Bit(0)
}

func (s VCS_commitInfo_Results) SetIsValidRef(v bool) {
	s.Struct.SetBit(0, v)
}

func (s VCS_commitInfo_Results) Commit() (Commit, error) {
	p, err := s.Struct.Ptr(0)
	return Commit{Struct: p.Struct()}, err
}

func (s VCS_commitInfo_Results) HasCommit() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s VCS_commitInfo_Results) SetCommit(v Commit) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewCommit sets the commit field to a newly
// allocated Commit struct, preferring placement in s's segment.
func (s VCS_commitInfo_Results) NewCommit() (Commit, error) {
	ss, err := NewCommit(s.Struct.Segment())
	if err != nil {
		return Commit{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// VCS_commitInfo_Results_List is a list of VCS_commitInfo_Results.
type VCS_commitInfo_Results_List struct{ capnp.List }

// NewVCS_commitInfo_Results creates a new list of VCS_commitInfo_Results.
func NewVCS_commitInfo_Results_List(s *capnp.Segment, sz int32) (VCS_commitInfo_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return VCS_commitInfo_Results_List{l}, err
}

func (s VCS_commitInfo_Results_List) At(i int) VCS_commitInfo_Results {
	return VCS_commitInfo_Results{s.List.Struct(i)}
}

func (s VCS_commitInfo_Results_List) Set(i int, v VCS_commitInfo_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s VCS_commitInfo_Results_List) String() string {
	str, _ := text.MarshalList(0xa1a9e5ab638eed79, s.List)
	return str
}

// VCS_commitInfo_Results_Promise is a wrapper for a VCS_commitInfo_Results promised by a client call.
type VCS_commitInfo_Results_Promise struct{ *capnp.Pipeline }

func (p VCS_commitInfo_Results_Promise) Struct() (VCS_commitInfo_Results, error) {
	s, err := p.Pipeline.Struct()
	return VCS_commitInfo_Results{s}, err
}

func (p VCS_commitInfo_Results_Promise) Commit() Commit_Promise {
	return Commit_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Repo struct{ Client capnp.Client }

// Repo_TypeID is the unique identifier for the type Repo.
const Repo_TypeID = 0xa862cd929f7af191

func (c Repo) Quit(ctx context.Context, params func(Repo_quit_Params) error, opts ...capnp.CallOption) Repo_quit_Results_Promise {
	if c.Client == nil {
		return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_quit_Params{Struct: s}) }
	}
	return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Ping(ctx context.Context, params func(Repo_ping_Params) error, opts ...capnp.CallOption) Repo_ping_Results_Promise {
	if c.Client == nil {
		return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_ping_Params{Struct: s}) }
	}
	return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Mount(ctx context.Context, params func(Repo_mount_Params) error, opts ...capnp.CallOption) Repo_mount_Results_Promise {
	if c.Client == nil {
		return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_mount_Params{Struct: s}) }
	}
	return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Unmount(ctx context.Context, params func(Repo_unmount_Params) error, opts ...capnp.CallOption) Repo_unmount_Results_Promise {
	if c.Client == nil {
		return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_unmount_Params{Struct: s}) }
	}
	return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigGet(ctx context.Context, params func(Repo_configGet_Params) error, opts ...capnp.CallOption) Repo_configGet_Results_Promise {
	if c.Client == nil {
		return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configGet_Params{Struct: s}) }
	}
	return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigSet(ctx context.Context, params func(Repo_configSet_Params) error, opts ...capnp.CallOption) Repo_configSet_Results_Promise {
	if c.Client == nil {
		return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configSet_Params{Struct: s}) }
	}
	return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigAll(ctx context.Context, params func(Repo_configAll_Params) error, opts ...capnp.CallOption) Repo_configAll_Results_Promise {
	if c.Client == nil {
		return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configAll_Params{Struct: s}) }
	}
	return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) ConfigDoc(ctx context.Context, params func(Repo_configDoc_Params) error, opts ...capnp.CallOption) Repo_configDoc_Results_Promise {
	if c.Client == nil {
		return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configDoc_Params{Struct: s}) }
	}
	return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Become(ctx context.Context, params func(Repo_become_Params) error, opts ...capnp.CallOption) Repo_become_Results_Promise {
	if c.Client == nil {
		return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_become_Params{Struct: s}) }
	}
	return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabAdd(ctx context.Context, params func(Repo_fstabAdd_Params) error, opts ...capnp.CallOption) Repo_fstabAdd_Results_Promise {
	if c.Client == nil {
		return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabAdd_Params{Struct: s}) }
	}
	return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabRemove(ctx context.Context, params func(Repo_fstabRemove_Params) error, opts ...capnp.CallOption) Repo_fstabRemove_Results_Promise {
	if c.Client == nil {
		return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabRemove_Params{Struct: s}) }
	}
	return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabApply(ctx context.Context, params func(Repo_fstabApply_Params) error, opts ...capnp.CallOption) Repo_fstabApply_Results_Promise {
	if c.Client == nil {
		return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabApply_Params{Struct: s}) }
	}
	return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabList(ctx context.Context, params func(Repo_fstabList_Params) error, opts ...capnp.CallOption) Repo_fstabList_Results_Promise {
	if c.Client == nil {
		return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabList_Params{Struct: s}) }
	}
	return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) FstabUnmountAll(ctx context.Context, params func(Repo_fstabUnmountAll_Params) error, opts ...capnp.CallOption) Repo_fstabUnmountAll_Results_Promise {
	if c.Client == nil {
		return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabUnmountAll_Params{Struct: s}) }
	}
	return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) Version(ctx context.Context, params func(Repo_version_Params) error, opts ...capnp.CallOption) Repo_version_Results_Promise {
	if c.Client == nil {
		return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_version_Params{Struct: s}) }
	}
	return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) GatewayUserAdd(ctx context.Context, params func(Repo_gatewayUserAdd_Params) error, opts ...capnp.CallOption) Repo_gatewayUserAdd_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserAdd_Params{Struct: s}) }
	}
	return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) GatewayUserRm(ctx context.Context, params func(Repo_gatewayUserRm_Params) error, opts ...capnp.CallOption) Repo_gatewayUserRm_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserRm_Params{Struct: s}) }
	}
	return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) GatewayUserList(ctx context.Context, params func(Repo_gatewayUserList_Params) error, opts ...capnp.CallOption) Repo_gatewayUserList_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserList_Params{Struct: s}) }
	}
	return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) DebugProfilePort(ctx context.Context, params func(Repo_debugProfilePort_Params) error, opts ...capnp.CallOption) Repo_debugProfilePort_Results_Promise {
	if c.Client == nil {
		return Repo_debugProfilePort_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "debugProfilePort",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_debugProfilePort_Params{Struct: s}) }
	}
	return Repo_debugProfilePort_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) HintSet(ctx context.Context, params func(Repo_hintSet_Params) error, opts ...capnp.CallOption) Repo_hintSet_Results_Promise {
	if c.Client == nil {
		return Repo_hintSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_hintSet_Params{Struct: s}) }
	}
	return Repo_hintSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) HintRemove(ctx context.Context, params func(Repo_hintRemove_Params) error, opts ...capnp.CallOption) Repo_hintRemove_Results_Promise {
	if c.Client == nil {
		return Repo_hintRemove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      20,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintRemove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_hintRemove_Params{Struct: s}) }
	}
	return Repo_hintRemove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Repo) HintList(ctx context.Context, params func(Repo_hintList_Params) error, opts ...capnp.CallOption) Repo_hintList_Results_Promise {
	if c.Client == nil {
		return Repo_hintList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      21,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_hintList_Params{Struct: s}) }
	}
	return Repo_hintList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Repo_Server interface {
	Quit(Repo_quit) error

	Ping(Repo_ping) error

	Mount(Repo_mount) error

	Unmount(Repo_unmount) error

	ConfigGet(Repo_configGet) error

	ConfigSet(Repo_configSet) error

	ConfigAll(Repo_configAll) error

	ConfigDoc(Repo_configDoc) error

	Become(Repo_become) error

	FstabAdd(Repo_fstabAdd) error

	FstabRemove(Repo_fstabRemove) error

	FstabApply(Repo_fstabApply) error

	FstabList(Repo_fstabList) error

	FstabUnmountAll(Repo_fstabUnmountAll) error

	Version(Repo_version) error

	GatewayUserAdd(Repo_gatewayUserAdd) error

	GatewayUserRm(Repo_gatewayUserRm) error

	GatewayUserList(Repo_gatewayUserList) error

	DebugProfilePort(Repo_debugProfilePort) error

	HintSet(Repo_hintSet) error

	HintRemove(Repo_hintRemove) error

	HintList(Repo_hintList) error
}

func Repo_ServerToClient(s Repo_Server) Repo {
	c, _ := s.(server.Closer)
	return Repo{Client: server.New(Repo_Methods(nil, s), c)}
}

func Repo_Methods(methods []server.Method, s Repo_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 22)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_quit{c, opts, Repo_quit_Params{Struct: p}, Repo_quit_Results{Struct: r}}
			return s.Quit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_ping{c, opts, Repo_ping_Params{Struct: p}, Repo_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_mount{c, opts, Repo_mount_Params{Struct: p}, Repo_mount_Results{Struct: r}}
			return s.Mount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_unmount{c, opts, Repo_unmount_Params{Struct: p}, Repo_unmount_Results{Struct: r}}
			return s.Unmount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configGet{c, opts, Repo_configGet_Params{Struct: p}, Repo_configGet_Results{Struct: r}}
			return s.ConfigGet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configSet{c, opts, Repo_configSet_Params{Struct: p}, Repo_configSet_Results{Struct: r}}
			return s.ConfigSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configAll{c, opts, Repo_configAll_Params{Struct: p}, Repo_configAll_Results{Struct: r}}
			return s.ConfigAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configDoc{c, opts, Repo_configDoc_Params{Struct: p}, Repo_configDoc_Results{Struct: r}}
			return s.ConfigDoc(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_become{c, opts, Repo_become_Params{Struct: p}, Repo_become_Results{Struct: r}}
			return s.Become(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabAdd{c, opts, Repo_fstabAdd_Params{Struct: p}, Repo_fstabAdd_Results{Struct: r}}
			return s.FstabAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabRemove{c, opts, Repo_fstabRemove_Params{Struct: p}, Repo_fstabRemove_Results{Struct: r}}
			return s.FstabRemove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabApply{c, opts, Repo_fstabApply_Params{Struct: p}, Repo_fstabApply_Results{Struct: r}}
			return s.FstabApply(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabList{c, opts, Repo_fstabList_Params{Struct: p}, Repo_fstabList_Results{Struct: r}}
			return s.FstabList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabUnmountAll{c, opts, Repo_fstabUnmountAll_Params{Struct: p}, Repo_fstabUnmountAll_Results{Struct: r}}
			return s.FstabUnmountAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_version{c, opts, Repo_version_Params{Struct: p}, Repo_version_Results{Struct: r}}
			return s.Version(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserAdd{c, opts, Repo_gatewayUserAdd_Params{Struct: p}, Repo_gatewayUserAdd_Results{Struct: r}}
			return s.GatewayUserAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserRm{c, opts, Repo_gatewayUserRm_Params{Struct: p}, Repo_gatewayUserRm_Results{Struct: r}}
			return s.GatewayUserRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserList{c, opts, Repo_gatewayUserList_Params{Struct: p}, Repo_gatewayUserList_Results{Struct: r}}
			return s.GatewayUserList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "debugProfilePort",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_debugProfilePort{c, opts, Repo_debugProfilePort_Params{Struct: p}, Repo_debugProfilePort_Results{Struct: r}}
			return s.DebugProfilePort(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_hintSet{c, opts, Repo_hintSet_Params{Struct: p}, Repo_hintSet_Results{Struct: r}}
			return s.HintSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      20,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintRemove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_hintRemove{c, opts, Repo_hintRemove_Params{Struct: p}, Repo_hintRemove_Results{Struct: r}}
			return s.HintRemove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      21,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_hintList{c, opts, Repo_hintList_Params{Struct: p}, Repo_hintList_Results{Struct: r}}
			return s.HintList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	return methods
}

// Repo_quit holds the arguments for a server call to Repo.quit.
type Repo_quit struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_quit_Params
	Results Repo_quit_Results
}

// Repo_ping holds the arguments for a server call to Repo.ping.
type Repo_ping struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_ping_Params
	Results Repo_ping_Results
}

// Repo_mount holds the arguments for a server call to Repo.mount.
type Repo_mount struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_mount_Params
	Results Repo_mount_Results
}

// Repo_unmount holds the arguments for a server call to Repo.unmount.
type Repo_unmount struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_unmount_Params
	Results Repo_unmount_Results
}

// Repo_configGet holds the arguments for a server call to Repo.configGet.
type Repo_configGet struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configGet_Params
	Results Repo_configGet_Results
}

// Repo_configSet holds the arguments for a server call to Repo.configSet.
type Repo_configSet struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configSet_Params
	Results Repo_configSet_Results
}

// Repo_configAll holds the arguments for a server call to Repo.configAll.
type Repo_configAll struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configAll_Params
	Results Repo_configAll_Results
}

// Repo_configDoc holds the arguments for a server call to Repo.configDoc.
type Repo_configDoc struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_configDoc_Params
	Results Repo_configDoc_Results
}

// Repo_become holds the arguments for a server call to Repo.become.
type Repo_become struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_become_Params
	Results Repo_become_Results
}

// Repo_fstabAdd holds the arguments for a server call to Repo.fstabAdd.
type Repo_fstabAdd struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabAdd_Params
	Results Repo_fstabAdd_Results
}

// Repo_fstabRemove holds the arguments for a server call to Repo.fstabRemove.
type Repo_fstabRemove struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabRemove_Params
	Results Repo_fstabRemove_Results
}

// Repo_fstabApply holds the arguments for a server call to Repo.fstabApply.
type Repo_fstabApply struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabApply_Params
	Results Repo_fstabApply_Results
}

// Repo_fstabList holds the arguments for a server call to Repo.fstabList.
type Repo_fstabList struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabList_Params
	Results Repo_fstabList_Results
}

// Repo_fstabUnmountAll holds the arguments for a server call to Repo.fstabUnmountAll.
type Repo_fstabUnmountAll struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_fstabUnmountAll_Params
	Results Repo_fstabUnmountAll_Results
}

// Repo_version holds the arguments for a server call to Repo.version.
type Repo_version struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_version_Params
	Results Repo_version_Results
}

// Repo_gatewayUserAdd holds the arguments for a server call to Repo.gatewayUserAdd.
type Repo_gatewayUserAdd struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_gatewayUserAdd_Params
	Results Repo_gatewayUserAdd_Results
}

// Repo_gatewayUserRm holds the arguments for a server call to Repo.gatewayUserRm.
type Repo_gatewayUserRm struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_gatewayUserRm_Params
	Results Repo_gatewayUserRm_Results
}

// Repo_gatewayUserList holds the arguments for a server call to Repo.gatewayUserList.
type Repo_gatewayUserList struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_gatewayUserList_Params
	Results Repo_gatewayUserList_Results
}

// Repo_debugProfilePort holds the arguments for a server call to Repo.debugProfilePort.
type Repo_debugProfilePort struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_debugProfilePort_Params
	Results Repo_debugProfilePort_Results
}

// Repo_hintSet holds the arguments for a server call to Repo.hintSet.
type Repo_hintSet struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_hintSet_Params
	Results Repo_hintSet_Results
}

// Repo_hintRemove holds the arguments for a server call to Repo.hintRemove.
type Repo_hintRemove struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_hintRemove_Params
	Results Repo_hintRemove_Results
}

// Repo_hintList holds the arguments for a server call to Repo.hintList.
type Repo_hintList struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Repo_hintList_Params
	Results Repo_hintList_Results
}

type Repo_quit_Params struct{ capnp.Struct }

// Repo_quit_Params_TypeID is the unique identifier for the type Repo_quit_Params.
const Repo_quit_Params_TypeID = 0xaa98a78425cdd321

func NewRepo_quit_Params(s *capnp.Segment) (Repo_quit_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Params{st}, err
}

func NewRootRepo_quit_Params(s *capnp.Segment) (Repo_quit_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Params{st}, err
}

func ReadRootRepo_quit_Params(msg *capnp.Message) (Repo_quit_Params, error) {
	root, err := msg.RootPtr()
	return Repo_quit_Params{root.Struct()}, err
}

func (s Repo_quit_Params) String() string {
	str, _ := text.Marshal(0xaa98a78425cdd321, s.Struct)
	return str
}

// Repo_quit_Params_List is a list of Repo_quit_Params.
type Repo_quit_Params_List struct{ capnp.List }

// NewRepo_quit_Params creates a new list of Repo_quit_Params.
func NewRepo_quit_Params_List(s *capnp.Segment, sz int32) (Repo_quit_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_quit_Params_List{l}, err
}

func (s Repo_quit_Params_List) At(i int) Repo_quit_Params { return Repo_quit_Params{s.List.Struct(i)} }

func (s Repo_quit_Params_List) Set(i int, v Repo_quit_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_quit_Params_List) String() string {
	str, _ := text.MarshalList(0xaa98a78425cdd321, s.List)
	return str
}

// Repo_quit_Params_Promise is a wrapper for a Repo_quit_Params promised by a client call.
type Repo_quit_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_quit_Params_Promise) Struct() (Repo_quit_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_quit_Params{s}, err
}

type Repo_quit_Results struct{ capnp.Struct }

// Repo_quit_Results_TypeID is the unique identifier for the type Repo_quit_Results.
const Repo_quit_Results_TypeID = 0x860c3dd5698349f5

func NewRepo_quit_Results(s *capnp.Segment) (Repo_quit_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Results{st}, err
}

func NewRootRepo_quit_Results(s *capnp.Segment) (Repo_quit_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_quit_Results{st}, err
}

func ReadRootRepo_quit_Results(msg *capnp.Message) (Repo_quit_Results, error) {
	root, err := msg.RootPtr()
	return Repo_quit_Results{root.Struct()}, err
}

func (s Repo_quit_Results) String() string {
	str, _ := text.Marshal(0x860c3dd5698349f5, s.Struct)
	return str
}

// Repo_quit_Results_List is a list of Repo_quit_Results.
type Repo_quit_Results_List struct{ capnp.List }

// NewRepo_quit_Results creates a new list of Repo_quit_Results.
func NewRepo_quit_Results_List(s *capnp.Segment, sz int32) (Repo_quit_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_quit_Results_List{l}, err
}

func (s Repo_quit_Results_List) At(i int) Repo_quit_Results {
	return Repo_quit_Results{s.List.Struct(i)}
}

func (s Repo_quit_Results_List) Set(i int, v Repo_quit_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_quit_Results_List) String() string {
	str, _ := text.MarshalList(0x860c3dd5698349f5, s.List)
	return str
}

// Repo_quit_Results_Promise is a wrapper for a Repo_quit_Results promised by a client call.
type Repo_quit_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_quit_Results_Promise) Struct() (Repo_quit_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_quit_Results{s}, err
}

type Repo_ping_Params struct{ capnp.Struct }

// Repo_ping_Params_TypeID is the unique identifier for the type Repo_ping_Params.
const Repo_ping_Params_TypeID = 0x978c524c1a35015c

func NewRepo_ping_Params(s *capnp.Segment) (Repo_ping_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_ping_Params{st}, err
}

func NewRootRepo_ping_Params(s *capnp.Segment) (Repo_ping_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_ping_Params{st}, err
}

func ReadRootRepo_ping_Params(msg *capnp.Message) (Repo_ping_Params, error) {
	root, err := msg.RootPtr()
	return Repo_ping_Params{root.Struct()}, err
}

func (s Repo_ping_Params) String() string {
	str, _ := text.Marshal(0x978c524c1a35015c, s.Struct)
	return str
}

// Repo_ping_Params_List is a list of Repo_ping_Params.
type Repo_ping_Params_List struct{ capnp.List }

// NewRepo_ping_Params creates a new list of Repo_ping_Params.
func NewRepo_ping_Params_List(s *capnp.Segment, sz int32) (Repo_ping_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_ping_Params_List{l}, err
}

func (s Repo_ping_Params_List) At(i int) Repo_ping_Params { return Repo_ping_Params{s.List.Struct(i)} }

func (s Repo_ping_Params_List) Set(i int, v Repo_ping_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_ping_Params_List) String() string {
	str, _ := text.MarshalList(0x978c524c1a35015c, s.List)
	return str
}

// Repo_ping_Params_Promise is a wrapper for a Repo_ping_Params promised by a client call.
type Repo_ping_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_ping_Params_Promise) Struct() (Repo_ping_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_ping_Params{s}, err
}

type Repo_ping_Results struct{ capnp.Struct }

// Repo_ping_Results_TypeID is the unique identifier for the type Repo_ping_Results.
const Repo_ping_Results_TypeID = 0x9d64fa17798952ff

func NewRepo_ping_Results(s *capnp.Segment) (Repo_ping_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_ping_Results{st}, err
}

func NewRootRepo_ping_Results(s *capnp.Segment) (Repo_ping_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_ping_Results{st}, err
}

func ReadRootRepo_ping_Results(msg *capnp.Message) (Repo_ping_Results, error) {
	root, err := msg.RootPtr()
	return Repo_ping_Results{root.Struct()}, err
}

func (s Repo_ping_Results) String() string {
	str, _ := text.Marshal(0x9d64fa17798952ff, s.Struct)
	return str
}

func (s Repo_ping_Results) Reply() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_ping_Results) HasReply() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_ping_Results) ReplyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_ping_Results) SetReply(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_ping_Results_List is a list of Repo_ping_Results.
type Repo_ping_Results_List struct{ capnp.List }

// NewRepo_ping_Results creates a new list of Repo_ping_Results.
func NewRepo_ping_Results_List(s *capnp.Segment, sz int32) (Repo_ping_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_ping_Results_List{l}, err
}

func (s Repo_ping_Results_List) At(i int) Repo_ping_Results {
	return Repo_ping_Results{s.List.Struct(i)}
}

func (s Repo_ping_Results_List) Set(i int, v Repo_ping_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_ping_Results_List) String() string {
	str, _ := text.MarshalList(0x9d64fa17798952ff, s.List)
	return str
}

// Repo_ping_Results_Promise is a wrapper for a Repo_ping_Results promised by a client call.
type Repo_ping_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_ping_Results_Promise) Struct() (Repo_ping_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_ping_Results{s}, err
}

type Repo_mount_Params struct{ capnp.Struct }

// Repo_mount_Params_TypeID is the unique identifier for the type Repo_mount_Params.
const Repo_mount_Params_TypeID = 0x9c19777f493f1110

func NewRepo_mount_Params(s *capnp.Segment) (Repo_mount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_mount_Params{st}, err
}

func NewRootRepo_mount_Params(s *capnp.Segment) (Repo_mount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_mount_Params{st}, err
}

func ReadRootRepo_mount_Params(msg *capnp.Message) (Repo_mount_Params, error) {
	root, err := msg.RootPtr()
	return Repo_mount_Params{root.Struct()}, err
}

func (s Repo_mount_Params) String() string {
	str, _ := text.Marshal(0x9c19777f493f1110, s.Struct)
	return str
}

func (s Repo_mount_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_mount_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_mount_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_mount_Params) SetMountPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_mount_Params) Options() (MountOptions, error) {
	p, err := s.Struct.Ptr(1)
	return MountOptions{Struct: p.Struct()}, err
}

func (s Repo_mount_Params) HasOptions() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_mount_Params) SetOptions(v MountOptions) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewOptions sets the options field to a newly
// allocated MountOptions struct, preferring placement in s's segment.
func (s Repo_mount_Params) NewOptions() (MountOptions, error) {
	ss, err := NewMountOptions(s.Struct.Segment())
	if err != nil {
		return MountOptions{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// Repo_mount_Params_List is a list of Repo_mount_Params.
type Repo_mount_Params_List struct{ capnp.List }

// NewRepo_mount_Params creates a new list of Repo_mount_Params.
func NewRepo_mount_Params_List(s *capnp.Segment, sz int32) (Repo_mount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Repo_mount_Params_List{l}, err
}

func (s Repo_mount_Params_List) At(i int) Repo_mount_Params {
	return Repo_mount_Params{s.List.Struct(i)}
}

func (s Repo_mount_Params_List) Set(i int, v Repo_mount_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_mount_Params_List) String() string {
	str, _ := text.MarshalList(0x9c19777f493f1110, s.List)
	return str
}

// Repo_mount_Params_Promise is a wrapper for a Repo_mount_Params promised by a client call.
type Repo_mount_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_mount_Params_Promise) Struct() (Repo_mount_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_mount_Params{s}, err
}

func (p Repo_mount_Params_Promise) Options() MountOptions_Promise {
	return MountOptions_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type Repo_mount_Results struct{ capnp.Struct }

// Repo_mount_Results_TypeID is the unique identifier for the type Repo_mount_Results.
const Repo_mount_Results_TypeID = 0xfc6b4417fdef895a

func NewRepo_mount_Results(s *capnp.Segment) (Repo_mount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_mount_Results{st}, err
}

func NewRootRepo_mount_Results(s *capnp.Segment) (Repo_mount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_mount_Results{st}, err
}

func ReadRootRepo_mount_Results(msg *capnp.Message) (Repo_mount_Results, error) {
	root, err := msg.RootPtr()
	return Repo_mount_Results{root.Struct()}, err
}

func (s Repo_mount_Results) String() string {
	str, _ := text.Marshal(0xfc6b4417fdef895a, s.Struct)
	return str
}

// Repo_mount_Results_List is a list of Repo_mount_Results.
type Repo_mount_Results_List struct{ capnp.List }

// NewRepo_mount_Results creates a new list of Repo_mount_Results.
func NewRepo_mount_Results_List(s *capnp.Segment, sz int32) (Repo_mount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_mount_Results_List{l}, err
}

func (s Repo_mount_Results_List) At(i int) Repo_mount_Results {
	return Repo_mount_Results{s.List.Struct(i)}
}

func (s Repo_mount_Results_List) Set(i int, v Repo_mount_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_mount_Results_List) String() string {
	str, _ := text.MarshalList(0xfc6b4417fdef895a, s.List)
	return str
}

// Repo_mount_Results_Promise is a wrapper for a Repo_mount_Results promised by a client call.
type Repo_mount_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_mount_Results_Promise) Struct() (Repo_mount_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_mount_Results{s}, err
}

type Repo_unmount_Params struct{ capnp.Struct }

// Repo_unmount_Params_TypeID is the unique identifier for the type Repo_unmount_Params.
const Repo_unmount_Params_TypeID = 0x98300b93ef71cc57

func NewRepo_unmount_Params(s *capnp.Segment) (Repo_unmount_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_unmount_Params{st}, err
}

func NewRootRepo_unmount_Params(s *capnp.Segment) (Repo_unmount_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_unmount_Params{st}, err
}

func ReadRootRepo_unmount_Params(msg *capnp.Message) (Repo_unmount_Params, error) {
	root, err := msg.RootPtr()
	return Repo_unmount_Params{root.Struct()}, err
}

func (s Repo_unmount_Params) String() string {
	str, _ := text.Marshal(0x98300b93ef71cc57, s.Struct)
	return str
}

func (s Repo_unmount_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_unmount_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_unmount_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_unmount_Params) SetMountPath(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_unmount_Params_List is a list of Repo_unmount_Params.
type Repo_unmount_Params_List struct{ capnp.List }

// NewRepo_unmount_Params creates a new list of Repo_unmount_Params.
func NewRepo_unmount_Params_List(s *capnp.Segment, sz int32) (Repo_unmount_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_unmount_Params_List{l}, err
}

func (s Repo_unmount_Params_List) At(i int) Repo_unmount_Params {
	return Repo_unmount_Params{s.List.Struct(i)}
}

func (s Repo_unmount_Params_List) Set(i int, v Repo_unmount_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_unmount_Params_List) String() string {
	str, _ := text.MarshalList(0x98300b93ef71cc57, s.List)
	return str
}

// Repo_unmount_Params_Promise is a wrapper for a Repo_unmount_Params promised by a client call.
type Repo_unmount_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_unmount_Params_Promise) Struct() (Repo_unmount_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_unmount_Params{s}, err
}

type Repo_unmount_Results struct{ capnp.Struct }

// Repo_unmount_Results_TypeID is the unique identifier for the type Repo_unmount_Results.
const Repo_unmount_Results_TypeID = 0xfa4486fa9522275e

func NewRepo_unmount_Results(s *capnp.Segment) (Repo_unmount_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_unmount_Results{st}, err
}

func NewRootRepo_unmount_Results(s *capnp.Segment) (Repo_unmount_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_unmount_Results{st}, err
}

func ReadRootRepo_unmount_Results(msg *capnp.Message) (Repo_unmount_Results, error) {
	root, err := msg.RootPtr()
	return Repo_unmount_Results{root.Struct()}, err
}

func (s Repo_unmount_Results) String() string {
	str, _ := text.Marshal(0xfa4486fa9522275e, s.Struct)
	return str
}

// Repo_unmount_Results_List is a list of Repo_unmount_Results.
type Repo_unmount_Results_List struct{ capnp.List }

// NewRepo_unmount_Results creates a new list of Repo_unmount_Results.
func NewRepo_unmount_Results_List(s *capnp.Segment, sz int32) (Repo_unmount_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_unmount_Results_List{l}, err
}

func (s Repo_unmount_Results_List) At(i int) Repo_unmount_Results {
	return Repo_unmount_Results{s.List.Struct(i)}
}

func (s Repo_unmount_Results_List) Set(i int, v Repo_unmount_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_unmount_Results_List) String() string {
	str, _ := text.MarshalList(0xfa4486fa9522275e, s.List)
	return str
}

// Repo_unmount_Results_Promise is a wrapper for a Repo_unmount_Results promised by a client call.
type Repo_unmount_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_unmount_Results_Promise) Struct() (Repo_unmount_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_unmount_Results{s}, err
}

type Repo_configGet_Params struct{ capnp.Struct }

// Repo_configGet_Params_TypeID is the unique identifier for the type Repo_configGet_Params.
const Repo_configGet_Params_TypeID = 0xd7a7f00d5a96fc43

func NewRepo_configGet_Params(s *capnp.Segment) (Repo_configGet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Params{st}, err
}

func NewRootRepo_configGet_Params(s *capnp.Segment) (Repo_configGet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Params{st}, err
}

func ReadRootRepo_configGet_Params(msg *capnp.Message) (Repo_configGet_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configGet_Params{root.Struct()}, err
}

func (s Repo_configGet_Params) String() string {
	str, _ := text.Marshal(0xd7a7f00d5a96fc43, s.Struct)
	return str
}

func (s Repo_configGet_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configGet_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configGet_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configGet_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_configGet_Params_List is a list of Repo_configGet_Params.
type Repo_configGet_Params_List struct{ capnp.List }

// NewRepo_configGet_Params creates a new list of Repo_configGet_Params.
func NewRepo_configGet_Params_List(s *capnp.Segment, sz int32) (Repo_configGet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configGet_Params_List{l}, err
}

func (s Repo_configGet_Params_List) At(i int) Repo_configGet_Params {
	return Repo_configGet_Params{s.List.Struct(i)}
}

func (s Repo_configGet_Params_List) Set(i int, v Repo_configGet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configGet_Params_List) String() string {
	str, _ := text.MarshalList(0xd7a7f00d5a96fc43, s.List)
	return str
}

// Repo_configGet_Params_Promise is a wrapper for a Repo_configGet_Params promised by a client call.
type Repo_configGet_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configGet_Params_Promise) Struct() (Repo_configGet_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configGet_Params{s}, err
}

type Repo_configGet_Results struct{ capnp.Struct }

// Repo_configGet_Results_TypeID is the unique identifier for the type Repo_configGet_Results.
const Repo_configGet_Results_TypeID = 0xd70c154f9521b73d

func NewRepo_configGet_Results(s *capnp.Segment) (Repo_configGet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Results{st}, err
}

func NewRootRepo_configGet_Results(s *capnp.Segment) (Repo_configGet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configGet_Results{st}, err
}

func ReadRootRepo_configGet_Results(msg *capnp.Message) (Repo_configGet_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configGet_Results{root.Struct()}, err
}

func (s Repo_configGet_Results) String() string {
	str, _ := text.Marshal(0xd70c154f9521b73d, s.Struct)
	return str
}

func (s Repo_configGet_Results) Value() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configGet_Results) HasValue() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configGet_Results) ValueBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configGet_Results) SetValue(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_configGet_Results_List is a list of Repo_configGet_Results.
type Repo_configGet_Results_List struct{ capnp.List }

// NewRepo_configGet_Results creates a new list of Repo_configGet_Results.
func NewRepo_configGet_Results_List(s *capnp.Segment, sz int32) (Repo_configGet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configGet_Results_List{l}, err
}

func (s Repo_configGet_Results_List) At(i int) Repo_configGet_Results {
	return Repo_configGet_Results{s.List.Struct(i)}
}

func (s Repo_configGet_Results_List) Set(i int, v Repo_configGet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configGet_Results_List) String() string {
	str, _ := text.MarshalList(0xd70c154f9521b73d, s.List)
	return str
}

// Repo_configGet_Results_Promise is a wrapper for a Repo_configGet_Results promised by a client call.
type Repo_configGet_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configGet_Results_Promise) Struct() (Repo_configGet_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configGet_Results{s}, err
}

type Repo_configSet_Params struct{ capnp.Struct }

// Repo_configSet_Params_TypeID is the unique identifier for the type Repo_configSet_Params.
const Repo_configSet_Params_TypeID = 0xe0b1a560d0e4d51a

func NewRepo_configSet_Params(s *capnp.Segment) (Repo_configSet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_configSet_Params{st}, err
}

func NewRootRepo_configSet_Params(s *capnp.Segment) (Repo_configSet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_configSet_Params{st}, err
}

func ReadRootRepo_configSet_Params(msg *capnp.Message) (Repo_configSet_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configSet_Params{root.Struct()}, err
}

func (s Repo_configSet_Params) String() string {
	str, _ := text.Marshal(0xe0b1a560d0e4d51a, s.Struct)
	return str
}

func (s Repo_configSet_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configSet_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configSet_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configSet_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_configSet_Params) Value() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Repo_configSet_Params) HasValue() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_configSet_Params) ValueBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Repo_configSet_Params) SetValue(v string) error {
	return s.Struct.SetText(1, v)
}

// Repo_configSet_Params_List is a list of Repo_configSet_Params.
type Repo_configSet_Params_List struct{ capnp.List }

// NewRepo_configSet_Params creates a new list of Repo_configSet_Params.
func NewRepo_configSet_Params_List(s *capnp.Segment, sz int32) (Repo_configSet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Repo_configSet_Params_List{l}, err
}

func (s Repo_configSet_Params_List) At(i int) Repo_configSet_Params {
	return Repo_configSet_Params{s.List.Struct(i)}
}

func (s Repo_configSet_Params_List) Set(i int, v Repo_configSet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configSet_Params_List) String() string {
	str, _ := text.MarshalList(0xe0b1a560d0e4d51a, s.List)
	return str
}

// Repo_configSet_Params_Promise is a wrapper for a Repo_configSet_Params promised by a client call.
type Repo_configSet_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configSet_Params_Promise) Struct() (Repo_configSet_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configSet_Params{s}, err
}

type Repo_configSet_Results struct{ capnp.Struct }

// Repo_configSet_Results_TypeID is the unique identifier for the type Repo_configSet_Results.
const Repo_configSet_Results_TypeID = 0xabc3ec90b96a6d71

func NewRepo_configSet_Results(s *capnp.Segment) (Repo_configSet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configSet_Results{st}, err
}

func NewRootRepo_configSet_Results(s *capnp.Segment) (Repo_configSet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configSet_Results{st}, err
}

func ReadRootRepo_configSet_Results(msg *capnp.Message) (Repo_configSet_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configSet_Results{root.Struct()}, err
}

func (s Repo_configSet_Results) String() string {
	str, _ := text.Marshal(0xabc3ec90b96a6d71, s.Struct)
	return str
}

// Repo_configSet_Results_List is a list of Repo_configSet_Results.
type Repo_configSet_Results_List struct{ capnp.List }

// NewRepo_configSet_Results creates a new list of Repo_configSet_Results.
func NewRepo_configSet_Results_List(s *capnp.Segment, sz int32) (Repo_configSet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_configSet_Results_List{l}, err
}

func (s Repo_configSet_Results_List) At(i int) Repo_configSet_Results {
	return Repo_configSet_Results{s.List.Struct(i)}
}

func (s Repo_configSet_Results_List) Set(i int, v Repo_configSet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configSet_Results_List) String() string {
	str, _ := text.MarshalList(0xabc3ec90b96a6d71, s.List)
	return str
}

// Repo_configSet_Results_Promise is a wrapper for a Repo_configSet_Results promised by a client call.
type Repo_configSet_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configSet_Results_Promise) Struct() (Repo_configSet_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configSet_Results{s}, err
}

type Repo_configAll_Params struct{ capnp.Struct }

// Repo_configAll_Params_TypeID is the unique identifier for the type Repo_configAll_Params.
const Repo_configAll_Params_TypeID = 0xc0ad53271497ab77

func NewRepo_configAll_Params(s *capnp.Segment) (Repo_configAll_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configAll_Params{st}, err
}

func NewRootRepo_configAll_Params(s *capnp.Segment) (Repo_configAll_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_configAll_Params{st}, err
}

func ReadRootRepo_configAll_Params(msg *capnp.Message) (Repo_configAll_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configAll_Params{root.Struct()}, err
}

func (s Repo_configAll_Params) String() string {
	str, _ := text.Marshal(0xc0ad53271497ab77, s.Struct)
	return str
}

// Repo_configAll_Params_List is a list of Repo_configAll_Params.
type Repo_configAll_Params_List struct{ capnp.List }

// NewRepo_configAll_Params creates a new list of Repo_configAll_Params.
func NewRepo_configAll_Params_List(s *capnp.Segment, sz int32) (Repo_configAll_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_configAll_Params_List{l}, err
}

func (s Repo_configAll_Params_List) At(i int) Repo_configAll_Params {
	return Repo_configAll_Params{s.List.Struct(i)}
}

func (s Repo_configAll_Params_List) Set(i int, v Repo_configAll_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configAll_Params_List) String() string {
	str, _ := text.MarshalList(0xc0ad53271497ab77, s.List)
	return str
}

// Repo_configAll_Params_Promise is a wrapper for a Repo_configAll_Params promised by a client call.
type Repo_configAll_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configAll_Params_Promise) Struct() (Repo_configAll_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configAll_Params{s}, err
}

type Repo_configAll_Results struct{ capnp.Struct }

// Repo_configAll_Results_TypeID is the unique identifier for the type Repo_configAll_Results.
const Repo_configAll_Results_TypeID = 0xa89254a0db970716

func NewRepo_configAll_Results(s *capnp.Segment) (Repo_configAll_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configAll_Results{st}, err
}

func NewRootRepo_configAll_Results(s *capnp.Segment) (Repo_configAll_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configAll_Results{st}, err
}

func ReadRootRepo_configAll_Results(msg *capnp.Message) (Repo_configAll_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configAll_Results{root.Struct()}, err
}

func (s Repo_configAll_Results) String() string {
	str, _ := text.Marshal(0xa89254a0db970716, s.Struct)
	return str
}

func (s Repo_configAll_Results) All() (ConfigEntry_List, error) {
	p, err := s.Struct.Ptr(0)
	return ConfigEntry_List{List: p.List()}, err
}

func (s Repo_configAll_Results) HasAll() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configAll_Results) SetAll(v ConfigEntry_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewAll sets the all field to a newly
// allocated ConfigEntry_List, preferring placement in s's segment.
func (s Repo_configAll_Results) NewAll(n int32) (ConfigEntry_List, error) {
	l, err := NewConfigEntry_List(s.Struct.Segment(), n)
	if err != nil {
		return ConfigEntry_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Repo_configAll_Results_List is a list of Repo_configAll_Results.
type Repo_configAll_Results_List struct{ capnp.List }

// NewRepo_configAll_Results creates a new list of Repo_configAll_Results.
func NewRepo_configAll_Results_List(s *capnp.Segment, sz int32) (Repo_configAll_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configAll_Results_List{l}, err
}

func (s Repo_configAll_Results_List) At(i int) Repo_configAll_Results {
	return Repo_configAll_Results{s.List.Struct(i)}
}

func (s Repo_configAll_Results_List) Set(i int, v Repo_configAll_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configAll_Results_List) String() string {
	str, _ := text.MarshalList(0xa89254a0db970716, s.List)
	return str
}

// Repo_configAll_Results_Promise is a wrapper for a Repo_configAll_Results promised by a client call.
type Repo_configAll_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configAll_Results_Promise) Struct() (Repo_configAll_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configAll_Results{s}, err
}

type Repo_configDoc_Params struct{ capnp.Struct }

// Repo_configDoc_Params_TypeID is the unique identifier for the type Repo_configDoc_Params.
const Repo_configDoc_Params_TypeID = 0xbebae5caecad3c49

func NewRepo_configDoc_Params(s *capnp.Segment) (Repo_configDoc_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Params{st}, err
}

func NewRootRepo_configDoc_Params(s *capnp.Segment) (Repo_configDoc_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Params{st}, err
}

func ReadRootRepo_configDoc_Params(msg *capnp.Message) (Repo_configDoc_Params, error) {
	root, err := msg.RootPtr()
	return Repo_configDoc_Params{root.Struct()}, err
}

func (s Repo_configDoc_Params) String() string {
	str, _ := text.Marshal(0xbebae5caecad3c49, s.Struct)
	return str
}

func (s Repo_configDoc_Params) Key() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_configDoc_Params) HasKey() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configDoc_Params) KeyBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_configDoc_Params) SetKey(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_configDoc_Params_List is a list of Repo_configDoc_Params.
type Repo_configDoc_Params_List struct{ capnp.List }

// NewRepo_configDoc_Params creates a new list of Repo_configDoc_Params.
func NewRepo_configDoc_Params_List(s *capnp.Segment, sz int32) (Repo_configDoc_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configDoc_Params_List{l}, err
}

func (s Repo_configDoc_Params_List) At(i int) Repo_configDoc_Params {
	return Repo_configDoc_Params{s.List.Struct(i)}
}

func (s Repo_configDoc_Params_List) Set(i int, v Repo_configDoc_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configDoc_Params_List) String() string {
	str, _ := text.MarshalList(0xbebae5caecad3c49, s.List)
	return str
}

// Repo_configDoc_Params_Promise is a wrapper for a Repo_configDoc_Params promised by a client call.
type Repo_configDoc_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_configDoc_Params_Promise) Struct() (Repo_configDoc_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configDoc_Params{s}, err
}

type Repo_configDoc_Results struct{ capnp.Struct }

// Repo_configDoc_Results_TypeID is the unique identifier for the type Repo_configDoc_Results.
const Repo_configDoc_Results_TypeID = 0xacf50d40a9d3436a

func NewRepo_configDoc_Results(s *capnp.Segment) (Repo_configDoc_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Results{st}, err
}

func NewRootRepo_configDoc_Results(s *capnp.Segment) (Repo_configDoc_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_configDoc_Results{st}, err
}

func ReadRootRepo_configDoc_Results(msg *capnp.Message) (Repo_configDoc_Results, error) {
	root, err := msg.RootPtr()
	return Repo_configDoc_Results{root.Struct()}, err
}

func (s Repo_configDoc_Results) String() string {
	str, _ := text.Marshal(0xacf50d40a9d3436a, s.Struct)
	return str
}

func (s Repo_configDoc_Results) Desc() (ConfigEntry, error) {
	p, err := s.Struct.Ptr(0)
	return ConfigEntry{Struct: p.Struct()}, err
}

func (s Repo_configDoc_Results) HasDesc() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_configDoc_Results) SetDesc(v ConfigEntry) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewDesc sets the desc field to a newly
// allocated ConfigEntry struct, preferring placement in s's segment.
func (s Repo_configDoc_Results) NewDesc() (ConfigEntry, error) {
	ss, err := NewConfigEntry(s.Struct.Segment())
	if err != nil {
		return ConfigEntry{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Repo_configDoc_Results_List is a list of Repo_configDoc_Results.
type Repo_configDoc_Results_List struct{ capnp.List }

// NewRepo_configDoc_Results creates a new list of Repo_configDoc_Results.
func NewRepo_configDoc_Results_List(s *capnp.Segment, sz int32) (Repo_configDoc_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_configDoc_Results_List{l}, err
}

func (s Repo_configDoc_Results_List) At(i int) Repo_configDoc_Results {
	return Repo_configDoc_Results{s.List.Struct(i)}
}

func (s Repo_configDoc_Results_List) Set(i int, v Repo_configDoc_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_configDoc_Results_List) String() string {
	str, _ := text.MarshalList(0xacf50d40a9d3436a, s.List)
	return str
}

// Repo_configDoc_Results_Promise is a wrapper for a Repo_configDoc_Results promised by a client call.
type Repo_configDoc_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_configDoc_Results_Promise) Struct() (Repo_configDoc_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_configDoc_Results{s}, err
}

func (p Repo_configDoc_Results_Promise) Desc() ConfigEntry_Promise {
	return ConfigEntry_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Repo_become_Params struct{ capnp.Struct }

// Repo_become_Params_TypeID is the unique identifier for the type Repo_become_Params.
const Repo_become_Params_TypeID = 0x9b96e8c9be077989

func NewRepo_become_Params(s *capnp.Segment) (Repo_become_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_become_Params{st}, err
}

func NewRootRepo_become_Params(s *capnp.Segment) (Repo_become_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_become_Params{st}, err
}

func ReadRootRepo_become_Params(msg *capnp.Message) (Repo_become_Params, error) {
	root, err := msg.RootPtr()
	return Repo_become_Params{root.Struct()}, err
}

func (s Repo_become_Params) String() string {
	str, _ := text.Marshal(0x9b96e8c9be077989, s.Struct)
	return str
}

func (s Repo_become_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_become_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_become_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_become_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_become_Params_List is a list of Repo_become_Params.
type Repo_become_Params_List struct{ capnp.List }

// NewRepo_become_Params creates a new list of Repo_become_Params.
func NewRepo_become_Params_List(s *capnp.Segment, sz int32) (Repo_become_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_become_Params_List{l}, err
}

func (s Repo_become_Params_List) At(i int) Repo_become_Params {
	return Repo_become_Params{s.List.Struct(i)}
}

func (s Repo_become_Params_List) Set(i int, v Repo_become_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_become_Params_List) String() string {
	str, _ := text.MarshalList(0x9b96e8c9be077989, s.List)
	return str
}

// Repo_become_Params_Promise is a wrapper for a Repo_become_Params promised by a client call.
type Repo_become_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_become_Params_Promise) Struct() (Repo_become_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_become_Params{s}, err
}

type Repo_become_Results struct{ capnp.Struct }

// Repo_become_Results_TypeID is the unique identifier for the type Repo_become_Results.
const Repo_become_Results_TypeID = 0xa34213f24153536b

func NewRepo_become_Results(s *capnp.Segment) (Repo_become_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_become_Results{st}, err
}

func NewRootRepo_become_Results(s *capnp.Segment) (Repo_become_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_become_Results{st}, err
}

func ReadRootRepo_become_Results(msg *capnp.Message) (Repo_become_Results, error) {
	root, err := msg.RootPtr()
	return Repo_become_Results{root.Struct()}, err
}

func (s Repo_become_Results) String() string {
	str, _ := text.Marshal(0xa34213f24153536b, s.Struct)
	return str
}

// Repo_become_Results_List is a list of Repo_become_Results.
type Repo_become_Results_List struct{ capnp.List }

// NewRepo_become_Results creates a new list of Repo_become_Results.
func NewRepo_become_Results_List(s *capnp.Segment, sz int32) (Repo_become_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_become_Results_List{l}, err
}

func (s Repo_become_Results_List) At(i int) Repo_become_Results {
	return Repo_become_Results{s.List.Struct(i)}
}

func (s Repo_become_Results_List) Set(i int, v Repo_become_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_become_Results_List) String() string {
	str, _ := text.MarshalList(0xa34213f24153536b, s.List)
	return str
}

// Repo_become_Results_Promise is a wrapper for a Repo_become_Results promised by a client call.
type Repo_become_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_become_Results_Promise) Struct() (Repo_become_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_become_Results{s}, err
}

type Repo_fstabAdd_Params struct{ capnp.Struct }

// Repo_fstabAdd_Params_TypeID is the unique identifier for the type Repo_fstabAdd_Params.
const Repo_fstabAdd_Params_TypeID = 0xe75c9c74c2bacb82

func NewRepo_fstabAdd_Params(s *capnp.Segment) (Repo_fstabAdd_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Repo_fstabAdd_Params{st}, err
}

func NewRootRepo_fstabAdd_Params(s *capnp.Segment) (Repo_fstabAdd_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3})
	return Repo_fstabAdd_Params{st}, err
}

func ReadRootRepo_fstabAdd_Params(msg *capnp.Message) (Repo_fstabAdd_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabAdd_Params{root.Struct()}, err
}

func (s Repo_fstabAdd_Params) String() string {
	str, _ := text.Marshal(0xe75c9c74c2bacb82, s.Struct)
	return str
}

func (s Repo_fstabAdd_Params) MountName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_fstabAdd_Params) HasMountName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_fstabAdd_Params) MountNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_fstabAdd_Params) SetMountName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_fstabAdd_Params) MountPath() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Repo_fstabAdd_Params) HasMountPath() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_fstabAdd_Params) MountPathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Repo_fstabAdd_Params) SetMountPath(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Repo_fstabAdd_Params) Options() (MountOptions, error) {
	p, err := s.Struct.Ptr(2)
	return MountOptions{Struct: p.Struct()}, err
}

func (s Repo_fstabAdd_Params) HasOptions() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Repo_fstabAdd_Params) SetOptions(v MountOptions) error {
	return s.Struct.SetPtr(2, v.Struct.ToPtr())
}

// NewOptions sets the options field to a newly
// allocated MountOptions struct, preferring placement in s's segment.
func (s Repo_fstabAdd_Params) NewOptions() (MountOptions, error) {
	ss, err := NewMountOptions(s.Struct.Segment())
	if err != nil {
		return MountOptions{}, err
	}
	err = s.Struct.SetPtr(2, ss.Struct.ToPtr())
	return ss, err
}

// Repo_fstabAdd_Params_List is a list of Repo_fstabAdd_Params.
type Repo_fstabAdd_Params_List struct{ capnp.List }

// NewRepo_fstabAdd_Params creates a new list of Repo_fstabAdd_Params.
func NewRepo_fstabAdd_Params_List(s *capnp.Segment, sz int32) (Repo_fstabAdd_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 3}, sz)
	return Repo_fstabAdd_Params_List{l}, err
}

func (s Repo_fstabAdd_Params_List) At(i int) Repo_fstabAdd_Params {
	return Repo_fstabAdd_Params{s.List.Struct(i)}
}

func (s Repo_fstabAdd_Params_List) Set(i int, v Repo_fstabAdd_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabAdd_Params_List) String() string {
	str, _ := text.MarshalList(0xe75c9c74c2bacb82, s.List)
	return str
}

// Repo_fstabAdd_Params_Promise is a wrapper for a Repo_fstabAdd_Params promised by a client call.
type Repo_fstabAdd_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabAdd_Params_Promise) Struct() (Repo_fstabAdd_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabAdd_Params{s}, err
}

func (p Repo_fstabAdd_Params_Promise) Options() MountOptions_Promise {
	return MountOptions_Promise{Pipeline: p.Pipeline.GetPipeline(2)}
}

type Repo_fstabAdd_Results struct{ capnp.Struct }

// Repo_fstabAdd_Results_TypeID is the unique identifier for the type Repo_fstabAdd_Results.
const Repo_fstabAdd_Results_TypeID = 0xeadaf2b11fded490

func NewRepo_fstabAdd_Results(s *capnp.Segment) (Repo_fstabAdd_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabAdd_Results{st}, err
}

func NewRootRepo_fstabAdd_Results(s *capnp.Segment) (Repo_fstabAdd_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabAdd_Results{st}, err
}

func ReadRootRepo_fstabAdd_Results(msg *capnp.Message) (Repo_fstabAdd_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabAdd_Results{root.Struct()}, err
}

func (s Repo_fstabAdd_Results) String() string {
	str, _ := text.Marshal(0xeadaf2b11fded490, s.Struct)
	return str
}

// Repo_fstabAdd_Results_List is a list of Repo_fstabAdd_Results.
type Repo_fstabAdd_Results_List struct{ capnp.List }

// NewRepo_fstabAdd_Results creates a new list of Repo_fstabAdd_Results.
func NewRepo_fstabAdd_Results_List(s *capnp.Segment, sz int32) (Repo_fstabAdd_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabAdd_Results_List{l}, err
}

func (s Repo_fstabAdd_Results_List) At(i int) Repo_fstabAdd_Results {
	return Repo_fstabAdd_Results{s.List.Struct(i)}
}

func (s Repo_fstabAdd_Results_List) Set(i int, v Repo_fstabAdd_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabAdd_Results_List) String() string {
	str, _ := text.MarshalList(0xeadaf2b11fded490, s.List)
	return str
}

// Repo_fstabAdd_Results_Promise is a wrapper for a Repo_fstabAdd_Results promised by a client call.
type Repo_fstabAdd_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabAdd_Results_Promise) Struct() (Repo_fstabAdd_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabAdd_Results{s}, err
}

type Repo_fstabRemove_Params struct{ capnp.Struct }

// Repo_fstabRemove_Params_TypeID is the unique identifier for the type Repo_fstabRemove_Params.
const Repo_fstabRemove_Params_TypeID = 0xd1afceb8146949d4

func NewRepo_fstabRemove_Params(s *capnp.Segment) (Repo_fstabRemove_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabRemove_Params{st}, err
}

func NewRootRepo_fstabRemove_Params(s *capnp.Segment) (Repo_fstabRemove_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabRemove_Params{st}, err
}

func ReadRootRepo_fstabRemove_Params(msg *capnp.Message) (Repo_fstabRemove_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabRemove_Params{root.Struct()}, err
}

func (s Repo_fstabRemove_Params) String() string {
	str, _ := text.Marshal(0xd1afceb8146949d4, s.Struct)
	return str
}

func (s Repo_fstabRemove_Params) MountName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_fstabRemove_Params) HasMountName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_fstabRemove_Params) MountNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_fstabRemove_Params) SetMountName(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_fstabRemove_Params_List is a list of Repo_fstabRemove_Params.
type Repo_fstabRemove_Params_List struct{ capnp.List }

// NewRepo_fstabRemove_Params creates a new list of Repo_fstabRemove_Params.
func NewRepo_fstabRemove_Params_List(s *capnp.Segment, sz int32) (Repo_fstabRemove_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_fstabRemove_Params_List{l}, err
}

func (s Repo_fstabRemove_Params_List) At(i int) Repo_fstabRemove_Params {
	return Repo_fstabRemove_Params{s.List.Struct(i)}
}

func (s Repo_fstabRemove_Params_List) Set(i int, v Repo_fstabRemove_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabRemove_Params_List) String() string {
	str, _ := text.MarshalList(0xd1afceb8146949d4, s.List)
	return str
}

// Repo_fstabRemove_Params_Promise is a wrapper for a Repo_fstabRemove_Params promised by a client call.
type Repo_fstabRemove_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabRemove_Params_Promise) Struct() (Repo_fstabRemove_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabRemove_Params{s}, err
}

type Repo_fstabRemove_Results struct{ capnp.Struct }

// Repo_fstabRemove_Results_TypeID is the unique identifier for the type Repo_fstabRemove_Results.
const Repo_fstabRemove_Results_TypeID = 0xbb83332a93ffdcad

func NewRepo_fstabRemove_Results(s *capnp.Segment) (Repo_fstabRemove_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabRemove_Results{st}, err
}

func NewRootRepo_fstabRemove_Results(s *capnp.Segment) (Repo_fstabRemove_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabRemove_Results{st}, err
}

func ReadRootRepo_fstabRemove_Results(msg *capnp.Message) (Repo_fstabRemove_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabRemove_Results{root.Struct()}, err
}

func (s Repo_fstabRemove_Results) String() string {
	str, _ := text.Marshal(0xbb83332a93ffdcad, s.Struct)
	return str
}

// Repo_fstabRemove_Results_List is a list of Repo_fstabRemove_Results.
type Repo_fstabRemove_Results_List struct{ capnp.List }

// NewRepo_fstabRemove_Results creates a new list of Repo_fstabRemove_Results.
func NewRepo_fstabRemove_Results_List(s *capnp.Segment, sz int32) (Repo_fstabRemove_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabRemove_Results_List{l}, err
}

func (s Repo_fstabRemove_Results_List) At(i int) Repo_fstabRemove_Results {
	return Repo_fstabRemove_Results{s.List.Struct(i)}
}

func (s Repo_fstabRemove_Results_List) Set(i int, v Repo_fstabRemove_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabRemove_Results_List) String() string {
	str, _ := text.MarshalList(0xbb83332a93ffdcad, s.List)
	return str
}

// Repo_fstabRemove_Results_Promise is a wrapper for a Repo_fstabRemove_Results promised by a client call.
type Repo_fstabRemove_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabRemove_Results_Promise) Struct() (Repo_fstabRemove_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabRemove_Results{s}, err
}

type Repo_fstabApply_Params struct{ capnp.Struct }

// Repo_fstabApply_Params_TypeID is the unique identifier for the type Repo_fstabApply_Params.
const Repo_fstabApply_Params_TypeID = 0x86d95afae10f0893

func NewRepo_fstabApply_Params(s *capnp.Segment) (Repo_fstabApply_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Params{st}, err
}

func NewRootRepo_fstabApply_Params(s *capnp.Segment) (Repo_fstabApply_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Params{st}, err
}

func ReadRootRepo_fstabApply_Params(msg *capnp.Message) (Repo_fstabApply_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabApply_Params{root.Struct()}, err
}

func (s Repo_fstabApply_Params) String() string {
	str, _ := text.Marshal(0x86d95afae10f0893, s.Struct)
	return str
}

// Repo_fstabApply_Params_List is a list of Repo_fstabApply_Params.
type Repo_fstabApply_Params_List struct{ capnp.List }

// NewRepo_fstabApply_Params creates a new list of Repo_fstabApply_Params.
func NewRepo_fstabApply_Params_List(s *capnp.Segment, sz int32) (Repo_fstabApply_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabApply_Params_List{l}, err
}

func (s Repo_fstabApply_Params_List) At(i int) Repo_fstabApply_Params {
	return Repo_fstabApply_Params{s.List.Struct(i)}
}

func (s Repo_fstabApply_Params_List) Set(i int, v Repo_fstabApply_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabApply_Params_List) String() string {
	str, _ := text.MarshalList(0x86d95afae10f0893, s.List)
	return str
}

// Repo_fstabApply_Params_Promise is a wrapper for a Repo_fstabApply_Params promised by a client call.
type Repo_fstabApply_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabApply_Params_Promise) Struct() (Repo_fstabApply_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabApply_Params{s}, err
}

type Repo_fstabApply_Results struct{ capnp.Struct }

// Repo_fstabApply_Results_TypeID is the unique identifier for the type Repo_fstabApply_Results.
const Repo_fstabApply_Results_TypeID = 0xc3fcefc580775485

func NewRepo_fstabApply_Results(s *capnp.Segment) (Repo_fstabApply_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Results{st}, err
}

func NewRootRepo_fstabApply_Results(s *capnp.Segment) (Repo_fstabApply_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabApply_Results{st}, err
}

func ReadRootRepo_fstabApply_Results(msg *capnp.Message) (Repo_fstabApply_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabApply_Results{root.Struct()}, err
}

func (s Repo_fstabApply_Results) String() string {
	str, _ := text.Marshal(0xc3fcefc580775485, s.Struct)
	return str
}

// Repo_fstabApply_Results_List is a list of Repo_fstabApply_Results.
type Repo_fstabApply_Results_List struct{ capnp.List }

// NewRepo_fstabApply_Results creates a new list of Repo_fstabApply_Results.
func NewRepo_fstabApply_Results_List(s *capnp.Segment, sz int32) (Repo_fstabApply_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabApply_Results_List{l}, err
}

func (s Repo_fstabApply_Results_List) At(i int) Repo_fstabApply_Results {
	return Repo_fstabApply_Results{s.List.Struct(i)}
}

func (s Repo_fstabApply_Results_List) Set(i int, v Repo_fstabApply_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabApply_Results_List) String() string {
	str, _ := text.MarshalList(0xc3fcefc580775485, s.List)
	return str
}

// Repo_fstabApply_Results_Promise is a wrapper for a Repo_fstabApply_Results promised by a client call.
type Repo_fstabApply_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabApply_Results_Promise) Struct() (Repo_fstabApply_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabApply_Results{s}, err
}

type Repo_fstabList_Params struct{ capnp.Struct }

// Repo_fstabList_Params_TypeID is the unique identifier for the type Repo_fstabList_Params.
const Repo_fstabList_Params_TypeID = 0xc7e5f661ac57ebb2

func NewRepo_fstabList_Params(s *capnp.Segment) (Repo_fstabList_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabList_Params{st}, err
}

func NewRootRepo_fstabList_Params(s *capnp.Segment) (Repo_fstabList_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabList_Params{st}, err
}

func ReadRootRepo_fstabList_Params(msg *capnp.Message) (Repo_fstabList_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabList_Params{root.Struct()}, err
}

func (s Repo_fstabList_Params) String() string {
	str, _ := text.Marshal(0xc7e5f661ac57ebb2, s.Struct)
	return str
}

// Repo_fstabList_Params_List is a list of Repo_fstabList_Params.
type Repo_fstabList_Params_List struct{ capnp.List }

// NewRepo_fstabList_Params creates a new list of Repo_fstabList_Params.
func NewRepo_fstabList_Params_List(s *capnp.Segment, sz int32) (Repo_fstabList_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabList_Params_List{l}, err
}

func (s Repo_fstabList_Params_List) At(i int) Repo_fstabList_Params {
	return Repo_fstabList_Params{s.List.Struct(i)}
}

func (s Repo_fstabList_Params_List) Set(i int, v Repo_fstabList_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabList_Params_List) String() string {
	str, _ := text.MarshalList(0xc7e5f661ac57ebb2, s.List)
	return str
}

// Repo_fstabList_Params_Promise is a wrapper for a Repo_fstabList_Params promised by a client call.
type Repo_fstabList_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabList_Params_Promise) Struct() (Repo_fstabList_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabList_Params{s}, err
}

type Repo_fstabList_Results struct{ capnp.Struct }

// Repo_fstabList_Results_TypeID is the unique identifier for the type Repo_fstabList_Results.
const Repo_fstabList_Results_TypeID = 0xb5bf271ecf3bc074

func NewRepo_fstabList_Results(s *capnp.Segment) (Repo_fstabList_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabList_Results{st}, err
}

func NewRootRepo_fstabList_Results(s *capnp.Segment) (Repo_fstabList_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_fstabList_Results{st}, err
}

func ReadRootRepo_fstabList_Results(msg *capnp.Message) (Repo_fstabList_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabList_Results{root.Struct()}, err
}

func (s Repo_fstabList_Results) String() string {
	str, _ := text.Marshal(0xb5bf271ecf3bc074, s.Struct)
	return str
}

func (s Repo_fstabList_Results) Mounts() (FsTabEntry_List, error) {
	p, err := s.Struct.Ptr(0)
	return FsTabEntry_List{List: p.List()}, err
}

func (s Repo_fstabList_Results) HasMounts() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_fstabList_Results) SetMounts(v FsTabEntry_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewMounts sets the mounts field to a newly
// allocated FsTabEntry_List, preferring placement in s's segment.
func (s Repo_fstabList_Results) NewMounts(n int32) (FsTabEntry_List, error) {
	l, err := NewFsTabEntry_List(s.Struct.Segment(), n)
	if err != nil {
		return FsTabEntry_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Repo_fstabList_Results_List is a list of Repo_fstabList_Results.
type Repo_fstabList_Results_List struct{ capnp.List }

// NewRepo_fstabList_Results creates a new list of Repo_fstabList_Results.
func NewRepo_fstabList_Results_List(s *capnp.Segment, sz int32) (Repo_fstabList_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_fstabList_Results_List{l}, err
}

func (s Repo_fstabList_Results_List) At(i int) Repo_fstabList_Results {
	return Repo_fstabList_Results{s.List.Struct(i)}
}

func (s Repo_fstabList_Results_List) Set(i int, v Repo_fstabList_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabList_Results_List) String() string {
	str, _ := text.MarshalList(0xb5bf271ecf3bc074, s.List)
	return str
}

// Repo_fstabList_Results_Promise is a wrapper for a Repo_fstabList_Results promised by a client call.
type Repo_fstabList_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabList_Results_Promise) Struct() (Repo_fstabList_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabList_Results{s}, err
}

type Repo_fstabUnmountAll_Params struct{ capnp.Struct }

// Repo_fstabUnmountAll_Params_TypeID is the unique identifier for the type Repo_fstabUnmountAll_Params.
const Repo_fstabUnmountAll_Params_TypeID = 0xd7315a3b3f92aa4a

func NewRepo_fstabUnmountAll_Params(s *capnp.Segment) (Repo_fstabUnmountAll_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Params{st}, err
}

func NewRootRepo_fstabUnmountAll_Params(s *capnp.Segment) (Repo_fstabUnmountAll_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Params{st}, err
}

func ReadRootRepo_fstabUnmountAll_Params(msg *capnp.Message) (Repo_fstabUnmountAll_Params, error) {
	root, err := msg.RootPtr()
	return Repo_fstabUnmountAll_Params{root.Struct()}, err
}

func (s Repo_fstabUnmountAll_Params) String() string {
	str, _ := text.Marshal(0xd7315a3b3f92aa4a, s.Struct)
	return str
}

// Repo_fstabUnmountAll_Params_List is a list of Repo_fstabUnmountAll_Params.
type Repo_fstabUnmountAll_Params_List struct{ capnp.List }

// NewRepo_fstabUnmountAll_Params creates a new list of Repo_fstabUnmountAll_Params.
func NewRepo_fstabUnmountAll_Params_List(s *capnp.Segment, sz int32) (Repo_fstabUnmountAll_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabUnmountAll_Params_List{l}, err
}

func (s Repo_fstabUnmountAll_Params_List) At(i int) Repo_fstabUnmountAll_Params {
	return Repo_fstabUnmountAll_Params{s.List.Struct(i)}
}

func (s Repo_fstabUnmountAll_Params_List) Set(i int, v Repo_fstabUnmountAll_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabUnmountAll_Params_List) String() string {
	str, _ := text.MarshalList(0xd7315a3b3f92aa4a, s.List)
	return str
}

// Repo_fstabUnmountAll_Params_Promise is a wrapper for a Repo_fstabUnmountAll_Params promised by a client call.
type Repo_fstabUnmountAll_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabUnmountAll_Params_Promise) Struct() (Repo_fstabUnmountAll_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabUnmountAll_Params{s}, err
}

type Repo_fstabUnmountAll_Results struct{ capnp.Struct }

// Repo_fstabUnmountAll_Results_TypeID is the unique identifier for the type Repo_fstabUnmountAll_Results.
const Repo_fstabUnmountAll_Results_TypeID = 0xc44d12b3aee49f34

func NewRepo_fstabUnmountAll_Results(s *capnp.Segment) (Repo_fstabUnmountAll_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Results{st}, err
}

func NewRootRepo_fstabUnmountAll_Results(s *capnp.Segment) (Repo_fstabUnmountAll_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_fstabUnmountAll_Results{st}, err
}

func ReadRootRepo_fstabUnmountAll_Results(msg *capnp.Message) (Repo_fstabUnmountAll_Results, error) {
	root, err := msg.RootPtr()
	return Repo_fstabUnmountAll_Results{root.Struct()}, err
}

func (s Repo_fstabUnmountAll_Results) String() string {
	str, _ := text.Marshal(0xc44d12b3aee49f34, s.Struct)
	return str
}

// Repo_fstabUnmountAll_Results_List is a list of Repo_fstabUnmountAll_Results.
type Repo_fstabUnmountAll_Results_List struct{ capnp.List }

// NewRepo_fstabUnmountAll_Results creates a new list of Repo_fstabUnmountAll_Results.
func NewRepo_fstabUnmountAll_Results_List(s *capnp.Segment, sz int32) (Repo_fstabUnmountAll_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_fstabUnmountAll_Results_List{l}, err
}

func (s Repo_fstabUnmountAll_Results_List) At(i int) Repo_fstabUnmountAll_Results {
	return Repo_fstabUnmountAll_Results{s.List.Struct(i)}
}

func (s Repo_fstabUnmountAll_Results_List) Set(i int, v Repo_fstabUnmountAll_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_fstabUnmountAll_Results_List) String() string {
	str, _ := text.MarshalList(0xc44d12b3aee49f34, s.List)
	return str
}

// Repo_fstabUnmountAll_Results_Promise is a wrapper for a Repo_fstabUnmountAll_Results promised by a client call.
type Repo_fstabUnmountAll_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_fstabUnmountAll_Results_Promise) Struct() (Repo_fstabUnmountAll_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_fstabUnmountAll_Results{s}, err
}

type Repo_version_Params struct{ capnp.Struct }

// Repo_version_Params_TypeID is the unique identifier for the type Repo_version_Params.
const Repo_version_Params_TypeID = 0xbbec523e9fc1abfc

func NewRepo_version_Params(s *capnp.Segment) (Repo_version_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_version_Params{st}, err
}

func NewRootRepo_version_Params(s *capnp.Segment) (Repo_version_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_version_Params{st}, err
}

func ReadRootRepo_version_Params(msg *capnp.Message) (Repo_version_Params, error) {
	root, err := msg.RootPtr()
	return Repo_version_Params{root.Struct()}, err
}

func (s Repo_version_Params) String() string {
	str, _ := text.Marshal(0xbbec523e9fc1abfc, s.Struct)
	return str
}

// Repo_version_Params_List is a list of Repo_version_Params.
type Repo_version_Params_List struct{ capnp.List }

// NewRepo_version_Params creates a new list of Repo_version_Params.
func NewRepo_version_Params_List(s *capnp.Segment, sz int32) (Repo_version_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_version_Params_List{l}, err
}

func (s Repo_version_Params_List) At(i int) Repo_version_Params {
	return Repo_version_Params{s.List.Struct(i)}
}

func (s Repo_version_Params_List) Set(i int, v Repo_version_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_version_Params_List) String() string {
	str, _ := text.MarshalList(0xbbec523e9fc1abfc, s.List)
	return str
}

// Repo_version_Params_Promise is a wrapper for a Repo_version_Params promised by a client call.
type Repo_version_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_version_Params_Promise) Struct() (Repo_version_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_version_Params{s}, err
}

type Repo_version_Results struct{ capnp.Struct }

// Repo_version_Results_TypeID is the unique identifier for the type Repo_version_Results.
const Repo_version_Results_TypeID = 0x8ae5aae9653b7b02

func NewRepo_version_Results(s *capnp.Segment) (Repo_version_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_version_Results{st}, err
}

func NewRootRepo_version_Results(s *capnp.Segment) (Repo_version_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_version_Results{st}, err
}

func ReadRootRepo_version_Results(msg *capnp.Message) (Repo_version_Results, error) {
	root, err := msg.RootPtr()
	return Repo_version_Results{root.Struct()}, err
}

func (s Repo_version_Results) String() string {
	str, _ := text.Marshal(0x8ae5aae9653b7b02, s.Struct)
	return str
}

func (s Repo_version_Results) Version() (Version, error) {
	p, err := s.Struct.Ptr(0)
	return Version{Struct: p.Struct()}, err
}

func (s Repo_version_Results) HasVersion() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_version_Results) SetVersion(v Version) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewVersion sets the version field to a newly
// allocated Version struct, preferring placement in s's segment.
func (s Repo_version_Results) NewVersion() (Version, error) {
	ss, err := NewVersion(s.Struct.Segment())
	if err != nil {
		return Version{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Repo_version_Results_List is a list of Repo_version_Results.
type Repo_version_Results_List struct{ capnp.List }

// NewRepo_version_Results creates a new list of Repo_version_Results.
func NewRepo_version_Results_List(s *capnp.Segment, sz int32) (Repo_version_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_version_Results_List{l}, err
}

func (s Repo_version_Results_List) At(i int) Repo_version_Results {
	return Repo_version_Results{s.List.Struct(i)}
}

func (s Repo_version_Results_List) Set(i int, v Repo_version_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_version_Results_List) String() string {
	str, _ := text.MarshalList(0x8ae5aae9653b7b02, s.List)
	return str
}

// Repo_version_Results_Promise is a wrapper for a Repo_version_Results promised by a client call.
type Repo_version_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_version_Results_Promise) Struct() (Repo_version_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_version_Results{s}, err
}

func (p Repo_version_Results_Promise) Version() Version_Promise {
	return Version_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Repo_gatewayUserAdd_Params struct{ capnp.Struct }

// Repo_gatewayUserAdd_Params_TypeID is the unique identifier for the type Repo_gatewayUserAdd_Params.
const Repo_gatewayUserAdd_Params_TypeID = 0x98eadc167523156e

func NewRepo_gatewayUserAdd_Params(s *capnp.Segment) (Repo_gatewayUserAdd_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Repo_gatewayUserAdd_Params{st}, err
}

func NewRootRepo_gatewayUserAdd_Params(s *capnp.Segment) (Repo_gatewayUserAdd_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4})
	return Repo_gatewayUserAdd_Params{st}, err
}

func ReadRootRepo_gatewayUserAdd_Params(msg *capnp.Message) (Repo_gatewayUserAdd_Params, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserAdd_Params{root.Struct()}, err
}

func (s Repo_gatewayUserAdd_Params) String() string {
	str, _ := text.Marshal(0x98eadc167523156e, s.Struct)
	return str
}

func (s Repo_gatewayUserAdd_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_gatewayUserAdd_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_gatewayUserAdd_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_gatewayUserAdd_Params) Password() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Repo_gatewayUserAdd_Params) HasPassword() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) PasswordBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Repo_gatewayUserAdd_Params) SetPassword(v string) error {
	return s.Struct.SetText(1, v)
}

func (s Repo_gatewayUserAdd_Params) Folders() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(2)
	return capnp.TextList{List: p.List()}, err
}

func (s Repo_gatewayUserAdd_Params) HasFolders() bool {
	p, err := s.Struct.Ptr(2)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) SetFolders(v capnp.TextList) error {
	return s.Struct.SetPtr(2, v.List.ToPtr())
}

// NewFolders sets the folders field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Repo_gatewayUserAdd_Params) NewFolders(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(2, l.List.ToPtr())
	return l, err
}

func (s Repo_gatewayUserAdd_Params) Rights() (capnp.TextList, error) {
	p, err := s.Struct.Ptr(3)
	return capnp.TextList{List: p.List()}, err
}

func (s Repo_gatewayUserAdd_Params) HasRights() bool {
	p, err := s.Struct.Ptr(3)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserAdd_Params) SetRights(v capnp.TextList) error {
	return s.Struct.SetPtr(3, v.List.ToPtr())
}

// NewRights sets the rights field to a newly
// allocated capnp.TextList, preferring placement in s's segment.
func (s Repo_gatewayUserAdd_Params) NewRights(n int32) (capnp.TextList, error) {
	l, err := capnp.NewTextList(s.Struct.Segment(), n)
	if err != nil {
		return capnp.TextList{}, err
	}
	err = s.Struct.SetPtr(3, l.List.ToPtr())
	return l, err
}

// Repo_gatewayUserAdd_Params_List is a list of Repo_gatewayUserAdd_Params.
type Repo_gatewayUserAdd_Params_List struct{ capnp.List }

// NewRepo_gatewayUserAdd_Params creates a new list of Repo_gatewayUserAdd_Params.
func NewRepo_gatewayUserAdd_Params_List(s *capnp.Segment, sz int32) (Repo_gatewayUserAdd_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 4}, sz)
	return Repo_gatewayUserAdd_Params_List{l}, err
}

func (s Repo_gatewayUserAdd_Params_List) At(i int) Repo_gatewayUserAdd_Params {
	return Repo_gatewayUserAdd_Params{s.List.Struct(i)}
}

func (s Repo_gatewayUserAdd_Params_List) Set(i int, v Repo_gatewayUserAdd_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserAdd_Params_List) String() string {
	str, _ := text.MarshalList(0x98eadc167523156e, s.List)
	return str
}

// Repo_gatewayUserAdd_Params_Promise is a wrapper for a Repo_gatewayUserAdd_Params promised by a client call.
type Repo_gatewayUserAdd_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserAdd_Params_Promise) Struct() (Repo_gatewayUserAdd_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserAdd_Params{s}, err
}

type Repo_gatewayUserAdd_Results struct{ capnp.Struct }

// Repo_gatewayUserAdd_Results_TypeID is the unique identifier for the type Repo_gatewayUserAdd_Results.
const Repo_gatewayUserAdd_Results_TypeID = 0xafe329bc8cad8f74

func NewRepo_gatewayUserAdd_Results(s *capnp.Segment) (Repo_gatewayUserAdd_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserAdd_Results{st}, err
}

func NewRootRepo_gatewayUserAdd_Results(s *capnp.Segment) (Repo_gatewayUserAdd_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserAdd_Results{st}, err
}

func ReadRootRepo_gatewayUserAdd_Results(msg *capnp.Message) (Repo_gatewayUserAdd_Results, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserAdd_Results{root.Struct()}, err
}

func (s Repo_gatewayUserAdd_Results) String() string {
	str, _ := text.Marshal(0xafe329bc8cad8f74, s.Struct)
	return str
}

// Repo_gatewayUserAdd_Results_List is a list of Repo_gatewayUserAdd_Results.
type Repo_gatewayUserAdd_Results_List struct{ capnp.List }

// NewRepo_gatewayUserAdd_Results creates a new list of Repo_gatewayUserAdd_Results.
func NewRepo_gatewayUserAdd_Results_List(s *capnp.Segment, sz int32) (Repo_gatewayUserAdd_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_gatewayUserAdd_Results_List{l}, err
}

func (s Repo_gatewayUserAdd_Results_List) At(i int) Repo_gatewayUserAdd_Results {
	return Repo_gatewayUserAdd_Results{s.List.Struct(i)}
}

func (s Repo_gatewayUserAdd_Results_List) Set(i int, v Repo_gatewayUserAdd_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserAdd_Results_List) String() string {
	str, _ := text.MarshalList(0xafe329bc8cad8f74, s.List)
	return str
}

// Repo_gatewayUserAdd_Results_Promise is a wrapper for a Repo_gatewayUserAdd_Results promised by a client call.
type Repo_gatewayUserAdd_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserAdd_Results_Promise) Struct() (Repo_gatewayUserAdd_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserAdd_Results{s}, err
}

type Repo_gatewayUserRm_Params struct{ capnp.Struct }

// Repo_gatewayUserRm_Params_TypeID is the unique identifier for the type Repo_gatewayUserRm_Params.
const Repo_gatewayUserRm_Params_TypeID = 0xac8fbc382ae513de

func NewRepo_gatewayUserRm_Params(s *capnp.Segment) (Repo_gatewayUserRm_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserRm_Params{st}, err
}

func NewRootRepo_gatewayUserRm_Params(s *capnp.Segment) (Repo_gatewayUserRm_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserRm_Params{st}, err
}

func ReadRootRepo_gatewayUserRm_Params(msg *capnp.Message) (Repo_gatewayUserRm_Params, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserRm_Params{root.Struct()}, err
}

func (s Repo_gatewayUserRm_Params) String() string {
	str, _ := text.Marshal(0xac8fbc382ae513de, s.Struct)
	return str
}

func (s Repo_gatewayUserRm_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_gatewayUserRm_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserRm_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_gatewayUserRm_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_gatewayUserRm_Params_List is a list of Repo_gatewayUserRm_Params.
type Repo_gatewayUserRm_Params_List struct{ capnp.List }

// NewRepo_gatewayUserRm_Params creates a new list of Repo_gatewayUserRm_Params.
func NewRepo_gatewayUserRm_Params_List(s *capnp.Segment, sz int32) (Repo_gatewayUserRm_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_gatewayUserRm_Params_List{l}, err
}

func (s Repo_gatewayUserRm_Params_List) At(i int) Repo_gatewayUserRm_Params {
	return Repo_gatewayUserRm_Params{s.List.Struct(i)}
}

func (s Repo_gatewayUserRm_Params_List) Set(i int, v Repo_gatewayUserRm_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserRm_Params_List) String() string {
	str, _ := text.MarshalList(0xac8fbc382ae513de, s.List)
	return str
}

// Repo_gatewayUserRm_Params_Promise is a wrapper for a Repo_gatewayUserRm_Params promised by a client call.
type Repo_gatewayUserRm_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserRm_Params_Promise) Struct() (Repo_gatewayUserRm_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserRm_Params{s}, err
}

type Repo_gatewayUserRm_Results struct{ capnp.Struct }

// Repo_gatewayUserRm_Results_TypeID is the unique identifier for the type Repo_gatewayUserRm_Results.
const Repo_gatewayUserRm_Results_TypeID = 0x96fe51446ad697f9

func NewRepo_gatewayUserRm_Results(s *capnp.Segment) (Repo_gatewayUserRm_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserRm_Results{st}, err
}

func NewRootRepo_gatewayUserRm_Results(s *capnp.Segment) (Repo_gatewayUserRm_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserRm_Results{st}, err
}

func ReadRootRepo_gatewayUserRm_Results(msg *capnp.Message) (Repo_gatewayUserRm_Results, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserRm_Results{root.Struct()}, err
}

func (s Repo_gatewayUserRm_Results) String() string {
	str, _ := text.Marshal(0x96fe51446ad697f9, s.Struct)
	return str
}

// Repo_gatewayUserRm_Results_List is a list of Repo_gatewayUserRm_Results.
type Repo_gatewayUserRm_Results_List struct{ capnp.List }

// NewRepo_gatewayUserRm_Results creates a new list of Repo_gatewayUserRm_Results.
func NewRepo_gatewayUserRm_Results_List(s *capnp.Segment, sz int32) (Repo_gatewayUserRm_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_gatewayUserRm_Results_List{l}, err
}

func (s Repo_gatewayUserRm_Results_List) At(i int) Repo_gatewayUserRm_Results {
	return Repo_gatewayUserRm_Results{s.List.Struct(i)}
}

func (s Repo_gatewayUserRm_Results_List) Set(i int, v Repo_gatewayUserRm_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserRm_Results_List) String() string {
	str, _ := text.MarshalList(0x96fe51446ad697f9, s.List)
	return str
}

// Repo_gatewayUserRm_Results_Promise is a wrapper for a Repo_gatewayUserRm_Results promised by a client call.
type Repo_gatewayUserRm_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserRm_Results_Promise) Struct() (Repo_gatewayUserRm_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserRm_Results{s}, err
}

type Repo_gatewayUserList_Params struct{ capnp.Struct }

// Repo_gatewayUserList_Params_TypeID is the unique identifier for the type Repo_gatewayUserList_Params.
const Repo_gatewayUserList_Params_TypeID = 0xcbd45f6552b4ba24

func NewRepo_gatewayUserList_Params(s *capnp.Segment) (Repo_gatewayUserList_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserList_Params{st}, err
}

func NewRootRepo_gatewayUserList_Params(s *capnp.Segment) (Repo_gatewayUserList_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_gatewayUserList_Params{st}, err
}

func ReadRootRepo_gatewayUserList_Params(msg *capnp.Message) (Repo_gatewayUserList_Params, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserList_Params{root.Struct()}, err
}

func (s Repo_gatewayUserList_Params) String() string {
	str, _ := text.Marshal(0xcbd45f6552b4ba24, s.Struct)
	return str
}

// Repo_gatewayUserList_Params_List is a list of Repo_gatewayUserList_Params.
type Repo_gatewayUserList_Params_List struct{ capnp.List }

// NewRepo_gatewayUserList_Params creates a new list of Repo_gatewayUserList_Params.
func NewRepo_gatewayUserList_Params_List(s *capnp.Segment, sz int32) (Repo_gatewayUserList_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_gatewayUserList_Params_List{l}, err
}

func (s Repo_gatewayUserList_Params_List) At(i int) Repo_gatewayUserList_Params {
	return Repo_gatewayUserList_Params{s.List.Struct(i)}
}

func (s Repo_gatewayUserList_Params_List) Set(i int, v Repo_gatewayUserList_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserList_Params_List) String() string {
	str, _ := text.MarshalList(0xcbd45f6552b4ba24, s.List)
	return str
}

// Repo_gatewayUserList_Params_Promise is a wrapper for a Repo_gatewayUserList_Params promised by a client call.
type Repo_gatewayUserList_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserList_Params_Promise) Struct() (Repo_gatewayUserList_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserList_Params{s}, err
}

type Repo_gatewayUserList_Results struct{ capnp.Struct }

// Repo_gatewayUserList_Results_TypeID is the unique identifier for the type Repo_gatewayUserList_Results.
const Repo_gatewayUserList_Results_TypeID = 0xbd8d8f80992c4d78

func NewRepo_gatewayUserList_Results(s *capnp.Segment) (Repo_gatewayUserList_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserList_Results{st}, err
}

func NewRootRepo_gatewayUserList_Results(s *capnp.Segment) (Repo_gatewayUserList_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_gatewayUserList_Results{st}, err
}

func ReadRootRepo_gatewayUserList_Results(msg *capnp.Message) (Repo_gatewayUserList_Results, error) {
	root, err := msg.RootPtr()
	return Repo_gatewayUserList_Results{root.Struct()}, err
}

func (s Repo_gatewayUserList_Results) String() string {
	str, _ := text.Marshal(0xbd8d8f80992c4d78, s.Struct)
	return str
}

func (s Repo_gatewayUserList_Results) Users() (capnp2.User_List, error) {
	p, err := s.Struct.Ptr(0)
	return capnp2.User_List{List: p.List()}, err
}

func (s Repo_gatewayUserList_Results) HasUsers() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_gatewayUserList_Results) SetUsers(v capnp2.User_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewUsers sets the users field to a newly
// allocated capnp2.User_List, preferring placement in s's segment.
func (s Repo_gatewayUserList_Results) NewUsers(n int32) (capnp2.User_List, error) {
	l, err := capnp2.NewUser_List(s.Struct.Segment(), n)
	if err != nil {
		return capnp2.User_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Repo_gatewayUserList_Results_List is a list of Repo_gatewayUserList_Results.
type Repo_gatewayUserList_Results_List struct{ capnp.List }

// NewRepo_gatewayUserList_Results creates a new list of Repo_gatewayUserList_Results.
func NewRepo_gatewayUserList_Results_List(s *capnp.Segment, sz int32) (Repo_gatewayUserList_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_gatewayUserList_Results_List{l}, err
}

func (s Repo_gatewayUserList_Results_List) At(i int) Repo_gatewayUserList_Results {
	return Repo_gatewayUserList_Results{s.List.Struct(i)}
}

func (s Repo_gatewayUserList_Results_List) Set(i int, v Repo_gatewayUserList_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_gatewayUserList_Results_List) String() string {
	str, _ := text.MarshalList(0xbd8d8f80992c4d78, s.List)
	return str
}

// Repo_gatewayUserList_Results_Promise is a wrapper for a Repo_gatewayUserList_Results promised by a client call.
type Repo_gatewayUserList_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_gatewayUserList_Results_Promise) Struct() (Repo_gatewayUserList_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_gatewayUserList_Results{s}, err
}

type Repo_debugProfilePort_Params struct{ capnp.Struct }

// Repo_debugProfilePort_Params_TypeID is the unique identifier for the type Repo_debugProfilePort_Params.
const Repo_debugProfilePort_Params_TypeID = 0xbda24ef378533894

func NewRepo_debugProfilePort_Params(s *capnp.Segment) (Repo_debugProfilePort_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_debugProfilePort_Params{st}, err
}

func NewRootRepo_debugProfilePort_Params(s *capnp.Segment) (Repo_debugProfilePort_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_debugProfilePort_Params{st}, err
}

func ReadRootRepo_debugProfilePort_Params(msg *capnp.Message) (Repo_debugProfilePort_Params, error) {
	root, err := msg.RootPtr()
	return Repo_debugProfilePort_Params{root.Struct()}, err
}

func (s Repo_debugProfilePort_Params) String() string {
	str, _ := text.Marshal(0xbda24ef378533894, s.Struct)
	return str
}

// Repo_debugProfilePort_Params_List is a list of Repo_debugProfilePort_Params.
type Repo_debugProfilePort_Params_List struct{ capnp.List }

// NewRepo_debugProfilePort_Params creates a new list of Repo_debugProfilePort_Params.
func NewRepo_debugProfilePort_Params_List(s *capnp.Segment, sz int32) (Repo_debugProfilePort_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_debugProfilePort_Params_List{l}, err
}

func (s Repo_debugProfilePort_Params_List) At(i int) Repo_debugProfilePort_Params {
	return Repo_debugProfilePort_Params{s.List.Struct(i)}
}

func (s Repo_debugProfilePort_Params_List) Set(i int, v Repo_debugProfilePort_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_debugProfilePort_Params_List) String() string {
	str, _ := text.MarshalList(0xbda24ef378533894, s.List)
	return str
}

// Repo_debugProfilePort_Params_Promise is a wrapper for a Repo_debugProfilePort_Params promised by a client call.
type Repo_debugProfilePort_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_debugProfilePort_Params_Promise) Struct() (Repo_debugProfilePort_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_debugProfilePort_Params{s}, err
}

type Repo_debugProfilePort_Results struct{ capnp.Struct }

// Repo_debugProfilePort_Results_TypeID is the unique identifier for the type Repo_debugProfilePort_Results.
const Repo_debugProfilePort_Results_TypeID = 0xea498a2451bae614

func NewRepo_debugProfilePort_Results(s *capnp.Segment) (Repo_debugProfilePort_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Repo_debugProfilePort_Results{st}, err
}

func NewRootRepo_debugProfilePort_Results(s *capnp.Segment) (Repo_debugProfilePort_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Repo_debugProfilePort_Results{st}, err
}

func ReadRootRepo_debugProfilePort_Results(msg *capnp.Message) (Repo_debugProfilePort_Results, error) {
	root, err := msg.RootPtr()
	return Repo_debugProfilePort_Results{root.Struct()}, err
}

func (s Repo_debugProfilePort_Results) String() string {
	str, _ := text.Marshal(0xea498a2451bae614, s.Struct)
	return str
}

func (s Repo_debugProfilePort_Results) Port() int32 {
	return int32(s.Struct.Uint32(0))
}

func (s Repo_debugProfilePort_Results) SetPort(v int32) {
	s.Struct.SetUint32(0, uint32(v))
}

// Repo_debugProfilePort_Results_List is a list of Repo_debugProfilePort_Results.
type Repo_debugProfilePort_Results_List struct{ capnp.List }

// NewRepo_debugProfilePort_Results creates a new list of Repo_debugProfilePort_Results.
func NewRepo_debugProfilePort_Results_List(s *capnp.Segment, sz int32) (Repo_debugProfilePort_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Repo_debugProfilePort_Results_List{l}, err
}

func (s Repo_debugProfilePort_Results_List) At(i int) Repo_debugProfilePort_Results {
	return Repo_debugProfilePort_Results{s.List.Struct(i)}
}

func (s Repo_debugProfilePort_Results_List) Set(i int, v Repo_debugProfilePort_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_debugProfilePort_Results_List) String() string {
	str, _ := text.MarshalList(0xea498a2451bae614, s.List)
	return str
}

// Repo_debugProfilePort_Results_Promise is a wrapper for a Repo_debugProfilePort_Results promised by a client call.
type Repo_debugProfilePort_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_debugProfilePort_Results_Promise) Struct() (Repo_debugProfilePort_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_debugProfilePort_Results{s}, err
}

type Repo_hintSet_Params struct{ capnp.Struct }

// Repo_hintSet_Params_TypeID is the unique identifier for the type Repo_hintSet_Params.
const Repo_hintSet_Params_TypeID = 0x936b942a74db0be0

func NewRepo_hintSet_Params(s *capnp.Segment) (Repo_hintSet_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_hintSet_Params{st}, err
}

func NewRootRepo_hintSet_Params(s *capnp.Segment) (Repo_hintSet_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2})
	return Repo_hintSet_Params{st}, err
}

func ReadRootRepo_hintSet_Params(msg *capnp.Message) (Repo_hintSet_Params, error) {
	root, err := msg.RootPtr()
	return Repo_hintSet_Params{root.Struct()}, err
}

func (s Repo_hintSet_Params) String() string {
	str, _ := text.Marshal(0x936b942a74db0be0, s.Struct)
	return str
}

func (s Repo_hintSet_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_hintSet_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_hintSet_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_hintSet_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Repo_hintSet_Params) Hint() (Hint, error) {
	p, err := s.Struct.Ptr(1)
	return Hint{Struct: p.Struct()}, err
}

func (s Repo_hintSet_Params) HasHint() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Repo_hintSet_Params) SetHint(v Hint) error {
	return s.Struct.SetPtr(1, v.Struct.ToPtr())
}

// NewHint sets the hint field to a newly
// allocated Hint struct, preferring placement in s's segment.
func (s Repo_hintSet_Params) NewHint() (Hint, error) {
	ss, err := NewHint(s.Struct.Segment())
	if err != nil {
		return Hint{}, err
	}
	err = s.Struct.SetPtr(1, ss.Struct.ToPtr())
	return ss, err
}

// Repo_hintSet_Params_List is a list of Repo_hintSet_Params.
type Repo_hintSet_Params_List struct{ capnp.List }

// NewRepo_hintSet_Params creates a new list of Repo_hintSet_Params.
func NewRepo_hintSet_Params_List(s *capnp.Segment, sz int32) (Repo_hintSet_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 2}, sz)
	return Repo_hintSet_Params_List{l}, err
}

func (s Repo_hintSet_Params_List) At(i int) Repo_hintSet_Params {
	return Repo_hintSet_Params{s.List.Struct(i)}
}

func (s Repo_hintSet_Params_List) Set(i int, v Repo_hintSet_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_hintSet_Params_List) String() string {
	str, _ := text.MarshalList(0x936b942a74db0be0, s.List)
	return str
}

// Repo_hintSet_Params_Promise is a wrapper for a Repo_hintSet_Params promised by a client call.
type Repo_hintSet_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_hintSet_Params_Promise) Struct() (Repo_hintSet_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_hintSet_Params{s}, err
}

func (p Repo_hintSet_Params_Promise) Hint() Hint_Promise {
	return Hint_Promise{Pipeline: p.Pipeline.GetPipeline(1)}
}

type Repo_hintSet_Results struct{ capnp.Struct }

// Repo_hintSet_Results_TypeID is the unique identifier for the type Repo_hintSet_Results.
const Repo_hintSet_Results_TypeID = 0x82f304d5d4e81ee4

func NewRepo_hintSet_Results(s *capnp.Segment) (Repo_hintSet_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_hintSet_Results{st}, err
}

func NewRootRepo_hintSet_Results(s *capnp.Segment) (Repo_hintSet_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_hintSet_Results{st}, err
}

func ReadRootRepo_hintSet_Results(msg *capnp.Message) (Repo_hintSet_Results, error) {
	root, err := msg.RootPtr()
	return Repo_hintSet_Results{root.Struct()}, err
}

func (s Repo_hintSet_Results) String() string {
	str, _ := text.Marshal(0x82f304d5d4e81ee4, s.Struct)
	return str
}

// Repo_hintSet_Results_List is a list of Repo_hintSet_Results.
type Repo_hintSet_Results_List struct{ capnp.List }

// NewRepo_hintSet_Results creates a new list of Repo_hintSet_Results.
func NewRepo_hintSet_Results_List(s *capnp.Segment, sz int32) (Repo_hintSet_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_hintSet_Results_List{l}, err
}

func (s Repo_hintSet_Results_List) At(i int) Repo_hintSet_Results {
	return Repo_hintSet_Results{s.List.Struct(i)}
}

func (s Repo_hintSet_Results_List) Set(i int, v Repo_hintSet_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_hintSet_Results_List) String() string {
	str, _ := text.MarshalList(0x82f304d5d4e81ee4, s.List)
	return str
}

// Repo_hintSet_Results_Promise is a wrapper for a Repo_hintSet_Results promised by a client call.
type Repo_hintSet_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_hintSet_Results_Promise) Struct() (Repo_hintSet_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_hintSet_Results{s}, err
}

type Repo_hintRemove_Params struct{ capnp.Struct }

// Repo_hintRemove_Params_TypeID is the unique identifier for the type Repo_hintRemove_Params.
const Repo_hintRemove_Params_TypeID = 0xc738867ebff9b7cb

func NewRepo_hintRemove_Params(s *capnp.Segment) (Repo_hintRemove_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_hintRemove_Params{st}, err
}

func NewRootRepo_hintRemove_Params(s *capnp.Segment) (Repo_hintRemove_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_hintRemove_Params{st}, err
}

func ReadRootRepo_hintRemove_Params(msg *capnp.Message) (Repo_hintRemove_Params, error) {
	root, err := msg.RootPtr()
	return Repo_hintRemove_Params{root.Struct()}, err
}

func (s Repo_hintRemove_Params) String() string {
	str, _ := text.Marshal(0xc738867ebff9b7cb, s.Struct)
	return str
}

func (s Repo_hintRemove_Params) Path() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Repo_hintRemove_Params) HasPath() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_hintRemove_Params) PathBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Repo_hintRemove_Params) SetPath(v string) error {
	return s.Struct.SetText(0, v)
}

// Repo_hintRemove_Params_List is a list of Repo_hintRemove_Params.
type Repo_hintRemove_Params_List struct{ capnp.List }

// NewRepo_hintRemove_Params creates a new list of Repo_hintRemove_Params.
func NewRepo_hintRemove_Params_List(s *capnp.Segment, sz int32) (Repo_hintRemove_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_hintRemove_Params_List{l}, err
}

func (s Repo_hintRemove_Params_List) At(i int) Repo_hintRemove_Params {
	return Repo_hintRemove_Params{s.List.Struct(i)}
}

func (s Repo_hintRemove_Params_List) Set(i int, v Repo_hintRemove_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_hintRemove_Params_List) String() string {
	str, _ := text.MarshalList(0xc738867ebff9b7cb, s.List)
	return str
}

// Repo_hintRemove_Params_Promise is a wrapper for a Repo_hintRemove_Params promised by a client call.
type Repo_hintRemove_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_hintRemove_Params_Promise) Struct() (Repo_hintRemove_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_hintRemove_Params{s}, err
}

type Repo_hintRemove_Results struct{ capnp.Struct }

// Repo_hintRemove_Results_TypeID is the unique identifier for the type Repo_hintRemove_Results.
const Repo_hintRemove_Results_TypeID = 0xd46456b6c34d2ab1

func NewRepo_hintRemove_Results(s *capnp.Segment) (Repo_hintRemove_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_hintRemove_Results{st}, err
}

func NewRootRepo_hintRemove_Results(s *capnp.Segment) (Repo_hintRemove_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_hintRemove_Results{st}, err
}

func ReadRootRepo_hintRemove_Results(msg *capnp.Message) (Repo_hintRemove_Results, error) {
	root, err := msg.RootPtr()
	return Repo_hintRemove_Results{root.Struct()}, err
}

func (s Repo_hintRemove_Results) String() string {
	str, _ := text.Marshal(0xd46456b6c34d2ab1, s.Struct)
	return str
}

// Repo_hintRemove_Results_List is a list of Repo_hintRemove_Results.
type Repo_hintRemove_Results_List struct{ capnp.List }

// NewRepo_hintRemove_Results creates a new list of Repo_hintRemove_Results.
func NewRepo_hintRemove_Results_List(s *capnp.Segment, sz int32) (Repo_hintRemove_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_hintRemove_Results_List{l}, err
}

func (s Repo_hintRemove_Results_List) At(i int) Repo_hintRemove_Results {
	return Repo_hintRemove_Results{s.List.Struct(i)}
}

func (s Repo_hintRemove_Results_List) Set(i int, v Repo_hintRemove_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_hintRemove_Results_List) String() string {
	str, _ := text.MarshalList(0xd46456b6c34d2ab1, s.List)
	return str
}

// Repo_hintRemove_Results_Promise is a wrapper for a Repo_hintRemove_Results promised by a client call.
type Repo_hintRemove_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_hintRemove_Results_Promise) Struct() (Repo_hintRemove_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_hintRemove_Results{s}, err
}

type Repo_hintList_Params struct{ capnp.Struct }

// Repo_hintList_Params_TypeID is the unique identifier for the type Repo_hintList_Params.
const Repo_hintList_Params_TypeID = 0xcf864fbad605b1c7

func NewRepo_hintList_Params(s *capnp.Segment) (Repo_hintList_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_hintList_Params{st}, err
}

func NewRootRepo_hintList_Params(s *capnp.Segment) (Repo_hintList_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Repo_hintList_Params{st}, err
}

func ReadRootRepo_hintList_Params(msg *capnp.Message) (Repo_hintList_Params, error) {
	root, err := msg.RootPtr()
	return Repo_hintList_Params{root.Struct()}, err
}

func (s Repo_hintList_Params) String() string {
	str, _ := text.Marshal(0xcf864fbad605b1c7, s.Struct)
	return str
}

// Repo_hintList_Params_List is a list of Repo_hintList_Params.
type Repo_hintList_Params_List struct{ capnp.List }

// NewRepo_hintList_Params creates a new list of Repo_hintList_Params.
func NewRepo_hintList_Params_List(s *capnp.Segment, sz int32) (Repo_hintList_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Repo_hintList_Params_List{l}, err
}

func (s Repo_hintList_Params_List) At(i int) Repo_hintList_Params {
	return Repo_hintList_Params{s.List.Struct(i)}
}

func (s Repo_hintList_Params_List) Set(i int, v Repo_hintList_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_hintList_Params_List) String() string {
	str, _ := text.MarshalList(0xcf864fbad605b1c7, s.List)
	return str
}

// Repo_hintList_Params_Promise is a wrapper for a Repo_hintList_Params promised by a client call.
type Repo_hintList_Params_Promise struct{ *capnp.Pipeline }

func (p Repo_hintList_Params_Promise) Struct() (Repo_hintList_Params, error) {
	s, err := p.Pipeline.Struct()
	return Repo_hintList_Params{s}, err
}

type Repo_hintList_Results struct{ capnp.Struct }

// Repo_hintList_Results_TypeID is the unique identifier for the type Repo_hintList_Results.
const Repo_hintList_Results_TypeID = 0xfde70cc7d597944e

func NewRepo_hintList_Results(s *capnp.Segment) (Repo_hintList_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_hintList_Results{st}, err
}

func NewRootRepo_hintList_Results(s *capnp.Segment) (Repo_hintList_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Repo_hintList_Results{st}, err
}

func ReadRootRepo_hintList_Results(msg *capnp.Message) (Repo_hintList_Results, error) {
	root, err := msg.RootPtr()
	return Repo_hintList_Results{root.Struct()}, err
}

func (s Repo_hintList_Results) String() string {
	str, _ := text.Marshal(0xfde70cc7d597944e, s.Struct)
	return str
}

func (s Repo_hintList_Results) Hints() (Hint_List, error) {
	p, err := s.Struct.Ptr(0)
	return Hint_List{List: p.List()}, err
}

func (s Repo_hintList_Results) HasHints() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Repo_hintList_Results) SetHints(v Hint_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewHints sets the hints field to a newly
// allocated Hint_List, preferring placement in s's segment.
func (s Repo_hintList_Results) NewHints(n int32) (Hint_List, error) {
	l, err := NewHint_List(s.Struct.Segment(), n)
	if err != nil {
		return Hint_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Repo_hintList_Results_List is a list of Repo_hintList_Results.
type Repo_hintList_Results_List struct{ capnp.List }

// NewRepo_hintList_Results creates a new list of Repo_hintList_Results.
func NewRepo_hintList_Results_List(s *capnp.Segment, sz int32) (Repo_hintList_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Repo_hintList_Results_List{l}, err
}

func (s Repo_hintList_Results_List) At(i int) Repo_hintList_Results {
	return Repo_hintList_Results{s.List.Struct(i)}
}

func (s Repo_hintList_Results_List) Set(i int, v Repo_hintList_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Repo_hintList_Results_List) String() string {
	str, _ := text.MarshalList(0xfde70cc7d597944e, s.List)
	return str
}

// Repo_hintList_Results_Promise is a wrapper for a Repo_hintList_Results promised by a client call.
type Repo_hintList_Results_Promise struct{ *capnp.Pipeline }

func (p Repo_hintList_Results_Promise) Struct() (Repo_hintList_Results, error) {
	s, err := p.Pipeline.Struct()
	return Repo_hintList_Results{s}, err
}

type Net struct{ Client capnp.Client }

// Net_TypeID is the unique identifier for the type Net.
const Net_TypeID = 0xaa133a60be5a7d01

func (c Net) RemoteAddOrUpdate(ctx context.Context, params func(Net_remoteAddOrUpdate_Params) error, opts ...capnp.CallOption) Net_remoteAddOrUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteAddOrUpdate_Params{Struct: s}) }
	}
	return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteRm(ctx context.Context, params func(Net_remoteRm_Params) error, opts ...capnp.CallOption) Net_remoteRm_Results_Promise {
	if c.Client == nil {
		return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteRm_Params{Struct: s}) }
	}
	return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteLs(ctx context.Context, params func(Net_remoteLs_Params) error, opts ...capnp.CallOption) Net_remoteLs_Results_Promise {
	if c.Client == nil {
		return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteLs_Params{Struct: s}) }
	}
	return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteUpdate(ctx context.Context, params func(Net_remoteUpdate_Params) error, opts ...capnp.CallOption) Net_remoteUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteUpdate_Params{Struct: s}) }
	}
	return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteSave(ctx context.Context, params func(Net_remoteSave_Params) error, opts ...capnp.CallOption) Net_remoteSave_Results_Promise {
	if c.Client == nil {
		return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteSave_Params{Struct: s}) }
	}
	return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemotePing(ctx context.Context, params func(Net_remotePing_Params) error, opts ...capnp.CallOption) Net_remotePing_Results_Promise {
	if c.Client == nil {
		return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remotePing_Params{Struct: s}) }
	}
	return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteClear(ctx context.Context, params func(Net_remoteClear_Params) error, opts ...capnp.CallOption) Net_remoteClear_Results_Promise {
	if c.Client == nil {
		return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteClear_Params{Struct: s}) }
	}
	return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) NetLocate(ctx context.Context, params func(Net_netLocate_Params) error, opts ...capnp.CallOption) Net_netLocate_Results_Promise {
	if c.Client == nil {
		return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocate_Params{Struct: s}) }
	}
	return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) NetLocateNext(ctx context.Context, params func(Net_netLocateNext_Params) error, opts ...capnp.CallOption) Net_netLocateNext_Results_Promise {
	if c.Client == nil {
		return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocateNext_Params{Struct: s}) }
	}
	return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) Whoami(ctx context.Context, params func(Net_whoami_Params) error, opts ...capnp.CallOption) Net_whoami_Results_Promise {
	if c.Client == nil {
		return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_whoami_Params{Struct: s}) }
	}
	return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) Connect(ctx context.Context, params func(Net_connect_Params) error, opts ...capnp.CallOption) Net_connect_Results_Promise {
	if c.Client == nil {
		return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_connect_Params{Struct: s}) }
	}
	return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) Disconnect(ctx context.Context, params func(Net_disconnect_Params) error, opts ...capnp.CallOption) Net_disconnect_Results_Promise {
	if c.Client == nil {
		return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_disconnect_Params{Struct: s}) }
	}
	return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteOnlineList(ctx context.Context, params func(Net_remoteOnlineList_Params) error, opts ...capnp.CallOption) Net_remoteOnlineList_Results_Promise {
	if c.Client == nil {
		return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteOnlineList_Params{Struct: s}) }
	}
	return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) RemoteByName(ctx context.Context, params func(Net_remoteByName_Params) error, opts ...capnp.CallOption) Net_remoteByName_Results_Promise {
	if c.Client == nil {
		return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteByName_Params{Struct: s}) }
	}
	return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c Net) Push(ctx context.Context, params func(Net_push_Params) error, opts ...capnp.CallOption) Net_push_Results_Promise {
	if c.Client == nil {
		return Net_push_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "push",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_push_Params{Struct: s}) }
	}
	return Net_push_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type Net_Server interface {
	RemoteAddOrUpdate(Net_remoteAddOrUpdate) error

	RemoteRm(Net_remoteRm) error

	RemoteLs(Net_remoteLs) error

	RemoteUpdate(Net_remoteUpdate) error

	RemoteSave(Net_remoteSave) error

	RemotePing(Net_remotePing) error

	RemoteClear(Net_remoteClear) error

	NetLocate(Net_netLocate) error

	NetLocateNext(Net_netLocateNext) error

	Whoami(Net_whoami) error

	Connect(Net_connect) error

	Disconnect(Net_disconnect) error

	RemoteOnlineList(Net_remoteOnlineList) error

	RemoteByName(Net_remoteByName) error

	Push(Net_push) error
}

func Net_ServerToClient(s Net_Server) Net {
	c, _ := s.(server.Closer)
	return Net{Client: server.New(Net_Methods(nil, s), c)}
}

func Net_Methods(methods []server.Method, s Net_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 15)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteAddOrUpdate{c, opts, Net_remoteAddOrUpdate_Params{Struct: p}, Net_remoteAddOrUpdate_Results{Struct: r}}
			return s.RemoteAddOrUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteRm{c, opts, Net_remoteRm_Params{Struct: p}, Net_remoteRm_Results{Struct: r}}
			return s.RemoteRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteLs{c, opts, Net_remoteLs_Params{Struct: p}, Net_remoteLs_Results{Struct: r}}
			return s.RemoteLs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteUpdate{c, opts, Net_remoteUpdate_Params{Struct: p}, Net_remoteUpdate_Results{Struct: r}}
			return s.RemoteUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteSave{c, opts, Net_remoteSave_Params{Struct: p}, Net_remoteSave_Results{Struct: r}}
			return s.RemoteSave(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remotePing{c, opts, Net_remotePing_Params{Struct: p}, Net_remotePing_Results{Struct: r}}
			return s.RemotePing(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteClear{c, opts, Net_remoteClear_Params{Struct: p}, Net_remoteClear_Results{Struct: r}}
			return s.RemoteClear(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocate{c, opts, Net_netLocate_Params{Struct: p}, Net_netLocate_Results{Struct: r}}
			return s.NetLocate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocateNext{c, opts, Net_netLocateNext_Params{Struct: p}, Net_netLocateNext_Results{Struct: r}}
			return s.NetLocateNext(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_whoami{c, opts, Net_whoami_Params{Struct: p}, Net_whoami_Results{Struct: r}}
			return s.Whoami(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_connect{c, opts, Net_connect_Params{Struct: p}, Net_connect_Results{Struct: r}}
			return s.Connect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_disconnect{c, opts, Net_disconnect_Params{Struct: p}, Net_disconnect_Results{Struct: r}}
			return s.Disconnect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteOnlineList{c, opts, Net_remoteOnlineList_Params{Struct: p}, Net_remoteOnlineList_Results{Struct: r}}
			return s.RemoteOnlineList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteByName{c, opts, Net_remoteByName_Params{Struct: p}, Net_remoteByName_Results{Struct: r}}
			return s.RemoteByName(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "push",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_push{c, opts, Net_push_Params{Struct: p}, Net_push_Results{Struct: r}}
			return s.Push(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

// Net_remoteAddOrUpdate holds the arguments for a server call to Net.remoteAddOrUpdate.
type Net_remoteAddOrUpdate struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteAddOrUpdate_Params
	Results Net_remoteAddOrUpdate_Results
}

// Net_remoteRm holds the arguments for a server call to Net.remoteRm.
type Net_remoteRm struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteRm_Params
	Results Net_remoteRm_Results
}

// Net_remoteLs holds the arguments for a server call to Net.remoteLs.
type Net_remoteLs struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteLs_Params
	Results Net_remoteLs_Results
}

// Net_remoteUpdate holds the arguments for a server call to Net.remoteUpdate.
type Net_remoteUpdate struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteUpdate_Params
	Results Net_remoteUpdate_Results
}

// Net_remoteSave holds the arguments for a server call to Net.remoteSave.
type Net_remoteSave struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteSave_Params
	Results Net_remoteSave_Results
}

// Net_remotePing holds the arguments for a server call to Net.remotePing.
type Net_remotePing struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remotePing_Params
	Results Net_remotePing_Results
}

// Net_remoteClear holds the arguments for a server call to Net.remoteClear.
type Net_remoteClear struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteClear_Params
	Results Net_remoteClear_Results
}

// Net_netLocate holds the arguments for a server call to Net.netLocate.
type Net_netLocate struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_netLocate_Params
	Results Net_netLocate_Results
}

// Net_netLocateNext holds the arguments for a server call to Net.netLocateNext.
type Net_netLocateNext struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_netLocateNext_Params
	Results Net_netLocateNext_Results
}

// Net_whoami holds the arguments for a server call to Net.whoami.
type Net_whoami struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_whoami_Params
	Results Net_whoami_Results
}

// Net_connect holds the arguments for a server call to Net.connect.
type Net_connect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_connect_Params
	Results Net_connect_Results
}

// Net_disconnect holds the arguments for a server call to Net.disconnect.
type Net_disconnect struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_disconnect_Params
	Results Net_disconnect_Results
}

// Net_remoteOnlineList holds the arguments for a server call to Net.remoteOnlineList.
type Net_remoteOnlineList struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteOnlineList_Params
	Results Net_remoteOnlineList_Results
}

// Net_remoteByName holds the arguments for a server call to Net.remoteByName.
type Net_remoteByName struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_remoteByName_Params
	Results Net_remoteByName_Results
}

// Net_push holds the arguments for a server call to Net.push.
type Net_push struct {
	Ctx     context.Context
	Options capnp.CallOptions
	Params  Net_push_Params
	Results Net_push_Results
}

type Net_remoteAddOrUpdate_Params struct{ capnp.Struct }

// Net_remoteAddOrUpdate_Params_TypeID is the unique identifier for the type Net_remoteAddOrUpdate_Params.
const Net_remoteAddOrUpdate_Params_TypeID = 0xf5c310bd5e2aa138

func NewNet_remoteAddOrUpdate_Params(s *capnp.Segment) (Net_remoteAddOrUpdate_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteAddOrUpdate_Params{st}, err
}

func NewRootNet_remoteAddOrUpdate_Params(s *capnp.Segment) (Net_remoteAddOrUpdate_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteAddOrUpdate_Params{st}, err
}

func ReadRootNet_remoteAddOrUpdate_Params(msg *capnp.Message) (Net_remoteAddOrUpdate_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteAddOrUpdate_Params{root.Struct()}, err
}

func (s Net_remoteAddOrUpdate_Params) String() string {
	str, _ := text.Marshal(0xf5c310bd5e2aa138, s.Struct)
	return str
}

func (s Net_remoteAddOrUpdate_Params) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s Net_remoteAddOrUpdate_Params) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteAddOrUpdate_Params) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s Net_remoteAddOrUpdate_Params) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_remoteAddOrUpdate_Params_List is a list of Net_remoteAddOrUpdate_Params.
type Net_remoteAddOrUpdate_Params_List struct{ capnp.List }

// NewNet_remoteAddOrUpdate_Params creates a new list of Net_remoteAddOrUpdate_Params.
func NewNet_remoteAddOrUpdate_Params_List(s *capnp.Segment, sz int32) (Net_remoteAddOrUpdate_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteAddOrUpdate_Params_List{l}, err
}

func (s Net_remoteAddOrUpdate_Params_List) At(i int) Net_remoteAddOrUpdate_Params {
	return Net_remoteAddOrUpdate_Params{s.List.Struct(i)}
}

func (s Net_remoteAddOrUpdate_Params_List) Set(i int, v Net_remoteAddOrUpdate_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteAddOrUpdate_Params_List) String() string {
	str, _ := text.MarshalList(0xf5c310bd5e2aa138, s.List)
	return str
}

// Net_remoteAddOrUpdate_Params_Promise is a wrapper for a Net_remoteAddOrUpdate_Params promised by a client call.
type Net_remoteAddOrUpdate_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteAddOrUpdate_Params_Promise) Struct() (Net_remoteAddOrUpdate_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteAddOrUpdate_Params{s}, err
}

func (p Net_remoteAddOrUpdate_Params_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_remoteAddOrUpdate_Results struct{ capnp.Struct }

// Net_remoteAddOrUpdate_Results_TypeID is the unique identifier for the type Net_remoteAddOrUpdate_Results.
const Net_remoteAddOrUpdate_Results_TypeID = 0xfcaa6dc30ba75197

func NewNet_remoteAddOrUpdate_Results(s *capnp.Segment) (Net_remoteAddOrUpdate_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteAddOrUpdate_Results{st}, err
}

func NewRootNet_remoteAddOrUpdate_Results(s *capnp.Segment) (Net_remoteAddOrUpdate_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteAddOrUpdate_Results{st}, err
}

func ReadRootNet_remoteAddOrUpdate_Results(msg *capnp.Message) (Net_remoteAddOrUpdate_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteAddOrUpdate_Results{root.Struct()}, err
}

func (s Net_remoteAddOrUpdate_Results) String() string {
	str, _ := text.Marshal(0xfcaa6dc30ba75197, s.Struct)
	return str
}

// Net_remoteAddOrUpdate_Results_List is a list of Net_remoteAddOrUpdate_Results.
type Net_remoteAddOrUpdate_Results_List struct{ capnp.List }

// NewNet_remoteAddOrUpdate_Results creates a new list of Net_remoteAddOrUpdate_Results.
func NewNet_remoteAddOrUpdate_Results_List(s *capnp.Segment, sz int32) (Net_remoteAddOrUpdate_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteAddOrUpdate_Results_List{l}, err
}

func (s Net_remoteAddOrUpdate_Results_List) At(i int) Net_remoteAddOrUpdate_Results {
	return Net_remoteAddOrUpdate_Results{s.List.Struct(i)}
}

func (s Net_remoteAddOrUpdate_Results_List) Set(i int, v Net_remoteAddOrUpdate_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteAddOrUpdate_Results_List) String() string {
	str, _ := text.MarshalList(0xfcaa6dc30ba75197, s.List)
	return str
}

// Net_remoteAddOrUpdate_Results_Promise is a wrapper for a Net_remoteAddOrUpdate_Results promised by a client call.
type Net_remoteAddOrUpdate_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteAddOrUpdate_Results_Promise) Struct() (Net_remoteAddOrUpdate_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteAddOrUpdate_Results{s}, err
}

type Net_remoteRm_Params struct{ capnp.Struct }

// Net_remoteRm_Params_TypeID is the unique identifier for the type Net_remoteRm_Params.
const Net_remoteRm_Params_TypeID = 0xf485a561c31c83d2

func NewNet_remoteRm_Params(s *capnp.Segment) (Net_remoteRm_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteRm_Params{st}, err
}

func NewRootNet_remoteRm_Params(s *capnp.Segment) (Net_remoteRm_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteRm_Params{st}, err
}

func ReadRootNet_remoteRm_Params(msg *capnp.Message) (Net_remoteRm_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteRm_Params{root.Struct()}, err
}

func (s Net_remoteRm_Params) String() string {
	str, _ := text.Marshal(0xf485a561c31c83d2, s.Struct)
	return str
}

func (s Net_remoteRm_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_remoteRm_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteRm_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_remoteRm_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

// Net_remoteRm_Params_List is a list of Net_remoteRm_Params.
type Net_remoteRm_Params_List struct{ capnp.List }

// NewNet_remoteRm_Params creates a new list of Net_remoteRm_Params.
func NewNet_remoteRm_Params_List(s *capnp.Segment, sz int32) (Net_remoteRm_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteRm_Params_List{l}, err
}

func (s Net_remoteRm_Params_List) At(i int) Net_remoteRm_Params {
	return Net_remoteRm_Params{s.List.Struct(i)}
}

func (s Net_remoteRm_Params_List) Set(i int, v Net_remoteRm_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteRm_Params_List) String() string {
	str, _ := text.MarshalList(0xf485a561c31c83d2, s.List)
	return str
}

// Net_remoteRm_Params_Promise is a wrapper for a Net_remoteRm_Params promised by a client call.
type Net_remoteRm_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteRm_Params_Promise) Struct() (Net_remoteRm_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteRm_Params{s}, err
}

type Net_remoteRm_Results struct{ capnp.Struct }

// Net_remoteRm_Results_TypeID is the unique identifier for the type Net_remoteRm_Results.
const Net_remoteRm_Results_TypeID = 0xdb78f249dcc7b9f1

func NewNet_remoteRm_Results(s *capnp.Segment) (Net_remoteRm_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteRm_Results{st}, err
}

func NewRootNet_remoteRm_Results(s *capnp.Segment) (Net_remoteRm_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteRm_Results{st}, err
}

func ReadRootNet_remoteRm_Results(msg *capnp.Message) (Net_remoteRm_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteRm_Results{root.Struct()}, err
}

func (s Net_remoteRm_Results) String() string {
	str, _ := text.Marshal(0xdb78f249dcc7b9f1, s.Struct)
	return str
}

// Net_remoteRm_Results_List is a list of Net_remoteRm_Results.
type Net_remoteRm_Results_List struct{ capnp.List }

// NewNet_remoteRm_Results creates a new list of Net_remoteRm_Results.
func NewNet_remoteRm_Results_List(s *capnp.Segment, sz int32) (Net_remoteRm_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteRm_Results_List{l}, err
}

func (s Net_remoteRm_Results_List) At(i int) Net_remoteRm_Results {
	return Net_remoteRm_Results{s.List.Struct(i)}
}

func (s Net_remoteRm_Results_List) Set(i int, v Net_remoteRm_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteRm_Results_List) String() string {
	str, _ := text.MarshalList(0xdb78f249dcc7b9f1, s.List)
	return str
}

// Net_remoteRm_Results_Promise is a wrapper for a Net_remoteRm_Results promised by a client call.
type Net_remoteRm_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteRm_Results_Promise) Struct() (Net_remoteRm_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteRm_Results{s}, err
}

type Net_remoteLs_Params struct{ capnp.Struct }

// Net_remoteLs_Params_TypeID is the unique identifier for the type Net_remoteLs_Params.
const Net_remoteLs_Params_TypeID = 0xc18496cf650e6886

func NewNet_remoteLs_Params(s *capnp.Segment) (Net_remoteLs_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteLs_Params{st}, err
}

func NewRootNet_remoteLs_Params(s *capnp.Segment) (Net_remoteLs_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteLs_Params{st}, err
}

func ReadRootNet_remoteLs_Params(msg *capnp.Message) (Net_remoteLs_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteLs_Params{root.Struct()}, err
}

func (s Net_remoteLs_Params) String() string {
	str, _ := text.Marshal(0xc18496cf650e6886, s.Struct)
	return str
}

// Net_remoteLs_Params_List is a list of Net_remoteLs_Params.
type Net_remoteLs_Params_List struct{ capnp.List }

// NewNet_remoteLs_Params creates a new list of Net_remoteLs_Params.
func NewNet_remoteLs_Params_List(s *capnp.Segment, sz int32) (Net_remoteLs_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteLs_Params_List{l}, err
}

func (s Net_remoteLs_Params_List) At(i int) Net_remoteLs_Params {
	return Net_remoteLs_Params{s.List.Struct(i)}
}

func (s Net_remoteLs_Params_List) Set(i int, v Net_remoteLs_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteLs_Params_List) String() string {
	str, _ := text.MarshalList(0xc18496cf650e6886, s.List)
	return str
}

// Net_remoteLs_Params_Promise is a wrapper for a Net_remoteLs_Params promised by a client call.
type Net_remoteLs_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteLs_Params_Promise) Struct() (Net_remoteLs_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteLs_Params{s}, err
}

type Net_remoteLs_Results struct{ capnp.Struct }

// Net_remoteLs_Results_TypeID is the unique identifier for the type Net_remoteLs_Results.
const Net_remoteLs_Results_TypeID = 0xb2255c049c7bc42f

func NewNet_remoteLs_Results(s *capnp.Segment) (Net_remoteLs_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteLs_Results{st}, err
}

func NewRootNet_remoteLs_Results(s *capnp.Segment) (Net_remoteLs_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteLs_Results{st}, err
}

func ReadRootNet_remoteLs_Results(msg *capnp.Message) (Net_remoteLs_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteLs_Results{root.Struct()}, err
}

func (s Net_remoteLs_Results) String() string {
	str, _ := text.Marshal(0xb2255c049c7bc42f, s.Struct)
	return str
}

func (s Net_remoteLs_Results) Remotes() (Remote_List, error) {
	p, err := s.Struct.Ptr(0)
	return Remote_List{List: p.List()}, err
}

func (s Net_remoteLs_Results) HasRemotes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteLs_Results) SetRemotes(v Remote_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewRemotes sets the remotes field to a newly
// allocated Remote_List, preferring placement in s's segment.
func (s Net_remoteLs_Results) NewRemotes(n int32) (Remote_List, error) {
	l, err := NewRemote_List(s.Struct.Segment(), n)
	if err != nil {
		return Remote_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Net_remoteLs_Results_List is a list of Net_remoteLs_Results.
type Net_remoteLs_Results_List struct{ capnp.List }

// NewNet_remoteLs_Results creates a new list of Net_remoteLs_Results.
func NewNet_remoteLs_Results_List(s *capnp.Segment, sz int32) (Net_remoteLs_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteLs_Results_List{l}, err
}

func (s Net_remoteLs_Results_List) At(i int) Net_remoteLs_Results {
	return Net_remoteLs_Results{s.List.Struct(i)}
}

func (s Net_remoteLs_Results_List) Set(i int, v Net_remoteLs_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteLs_Results_List) String() string {
	str, _ := text.MarshalList(0xb2255c049c7bc42f, s.List)
	return str
}

// Net_remoteLs_Results_Promise is a wrapper for a Net_remoteLs_Results promised by a client call.
type Net_remoteLs_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteLs_Results_Promise) Struct() (Net_remoteLs_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteLs_Results{s}, err
}

type Net_remoteUpdate_Params struct{ capnp.Struct }

// Net_remoteUpdate_Params_TypeID is the unique identifier for the type Net_remoteUpdate_Params.
const Net_remoteUpdate_Params_TypeID = 0xc089763bca3e3f44

func NewNet_remoteUpdate_Params(s *capnp.Segment) (Net_remoteUpdate_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteUpdate_Params{st}, err
}

func NewRootNet_remoteUpdate_Params(s *capnp.Segment) (Net_remoteUpdate_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteUpdate_Params{st}, err
}

func ReadRootNet_remoteUpdate_Params(msg *capnp.Message) (Net_remoteUpdate_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteUpdate_Params{root.Struct()}, err
}

func (s Net_remoteUpdate_Params) String() string {
	str, _ := text.Marshal(0xc089763bca3e3f44, s.Struct)
	return str
}

func (s Net_remoteUpdate_Params) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s Net_remoteUpdate_Params) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteUpdate_Params) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s Net_remoteUpdate_Params) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_remoteUpdate_Params_List is a list of Net_remoteUpdate_Params.
type Net_remoteUpdate_Params_List struct{ capnp.List }

// NewNet_remoteUpdate_Params creates a new list of Net_remoteUpdate_Params.
func NewNet_remoteUpdate_Params_List(s *capnp.Segment, sz int32) (Net_remoteUpdate_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteUpdate_Params_List{l}, err
}

func (s Net_remoteUpdate_Params_List) At(i int) Net_remoteUpdate_Params {
	return Net_remoteUpdate_Params{s.List.Struct(i)}
}

func (s Net_remoteUpdate_Params_List) Set(i int, v Net_remoteUpdate_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteUpdate_Params_List) String() string {
	str, _ := text.MarshalList(0xc089763bca3e3f44, s.List)
	return str
}

// Net_remoteUpdate_Params_Promise is a wrapper for a Net_remoteUpdate_Params promised by a client call.
type Net_remoteUpdate_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteUpdate_Params_Promise) Struct() (Net_remoteUpdate_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteUpdate_Params{s}, err
}

func (p Net_remoteUpdate_Params_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_remoteUpdate_Results struct{ capnp.Struct }

// Net_remoteUpdate_Results_TypeID is the unique identifier for the type Net_remoteUpdate_Results.
const Net_remoteUpdate_Results_TypeID = 0x99b03ceb2dad70db

func NewNet_remoteUpdate_Results(s *capnp.Segment) (Net_remoteUpdate_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteUpdate_Results{st}, err
}

func NewRootNet_remoteUpdate_Results(s *capnp.Segment) (Net_remoteUpdate_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteUpdate_Results{st}, err
}

func ReadRootNet_remoteUpdate_Results(msg *capnp.Message) (Net_remoteUpdate_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteUpdate_Results{root.Struct()}, err
}

func (s Net_remoteUpdate_Results) String() string {
	str, _ := text.Marshal(0x99b03ceb2dad70db, s.Struct)
	return str
}

// Net_remoteUpdate_Results_List is a list of Net_remoteUpdate_Results.
type Net_remoteUpdate_Results_List struct{ capnp.List }

// NewNet_remoteUpdate_Results creates a new list of Net_remoteUpdate_Results.
func NewNet_remoteUpdate_Results_List(s *capnp.Segment, sz int32) (Net_remoteUpdate_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteUpdate_Results_List{l}, err
}

func (s Net_remoteUpdate_Results_List) At(i int) Net_remoteUpdate_Results {
	return Net_remoteUpdate_Results{s.List.Struct(i)}
}

func (s Net_remoteUpdate_Results_List) Set(i int, v Net_remoteUpdate_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteUpdate_Results_List) String() string {
	str, _ := text.MarshalList(0x99b03ceb2dad70db, s.List)
	return str
}

// Net_remoteUpdate_Results_Promise is a wrapper for a Net_remoteUpdate_Results promised by a client call.
type Net_remoteUpdate_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteUpdate_Results_Promise) Struct() (Net_remoteUpdate_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteUpdate_Results{s}, err
}

type Net_remoteSave_Params struct{ capnp.Struct }

// Net_remoteSave_Params_TypeID is the unique identifier for the type Net_remoteSave_Params.
const Net_remoteSave_Params_TypeID = 0xb5dc333528e5f7ae

func NewNet_remoteSave_Params(s *capnp.Segment) (Net_remoteSave_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteSave_Params{st}, err
}

func NewRootNet_remoteSave_Params(s *capnp.Segment) (Net_remoteSave_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteSave_Params{st}, err
}

func ReadRootNet_remoteSave_Params(msg *capnp.Message) (Net_remoteSave_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteSave_Params{root.Struct()}, err
}

func (s Net_remoteSave_Params) String() string {
	str, _ := text.Marshal(0xb5dc333528e5f7ae, s.Struct)
	return str
}

func (s Net_remoteSave_Params) Remotes() (Remote_List, error) {
	p, err := s.Struct.Ptr(0)
	return Remote_List{List: p.List()}, err
}

func (s Net_remoteSave_Params) HasRemotes() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteSave_Params) SetRemotes(v Remote_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewRemotes sets the remotes field to a newly
// allocated Remote_List, preferring placement in s's segment.
func (s Net_remoteSave_Params) NewRemotes(n int32) (Remote_List, error) {
	l, err := NewRemote_List(s.Struct.Segment(), n)
	if err != nil {
		return Remote_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Net_remoteSave_Params_List is a list of Net_remoteSave_Params.
type Net_remoteSave_Params_List struct{ capnp.List }

// NewNet_remoteSave_Params creates a new list of Net_remoteSave_Params.
func NewNet_remoteSave_Params_List(s *capnp.Segment, sz int32) (Net_remoteSave_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteSave_Params_List{l}, err
}

func (s Net_remoteSave_Params_List) At(i int) Net_remoteSave_Params {
	return Net_remoteSave_Params{s.List.Struct(i)}
}

func (s Net_remoteSave_Params_List) Set(i int, v Net_remoteSave_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteSave_Params_List) String() string {
	str, _ := text.MarshalList(0xb5dc333528e5f7ae, s.List)
	return str
}

// Net_remoteSave_Params_Promise is a wrapper for a Net_remoteSave_Params promised by a client call.
type Net_remoteSave_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteSave_Params_Promise) Struct() (Net_remoteSave_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteSave_Params{s}, err
}

type Net_remoteSave_Results struct{ capnp.Struct }

// Net_remoteSave_Results_TypeID is the unique identifier for the type Net_remoteSave_Results.
const Net_remoteSave_Results_TypeID = 0xe83f954c9635f05a

func NewNet_remoteSave_Results(s *capnp.Segment) (Net_remoteSave_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteSave_Results{st}, err
}

func NewRootNet_remoteSave_Results(s *capnp.Segment) (Net_remoteSave_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteSave_Results{st}, err
}

func ReadRootNet_remoteSave_Results(msg *capnp.Message) (Net_remoteSave_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteSave_Results{root.Struct()}, err
}

func (s Net_remoteSave_Results) String() string {
	str, _ := text.Marshal(0xe83f954c9635f05a, s.Struct)
	return str
}

// Net_remoteSave_Results_List is a list of Net_remoteSave_Results.
type Net_remoteSave_Results_List struct{ capnp.List }

// NewNet_remoteSave_Results creates a new list of Net_remoteSave_Results.
func NewNet_remoteSave_Results_List(s *capnp.Segment, sz int32) (Net_remoteSave_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteSave_Results_List{l}, err
}

func (s Net_remoteSave_Results_List) At(i int) Net_remoteSave_Results {
	return Net_remoteSave_Results{s.List.Struct(i)}
}

func (s Net_remoteSave_Results_List) Set(i int, v Net_remoteSave_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteSave_Results_List) String() string {
	str, _ := text.MarshalList(0xe83f954c9635f05a, s.List)
	return str
}

// Net_remoteSave_Results_Promise is a wrapper for a Net_remoteSave_Results promised by a client call.
type Net_remoteSave_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteSave_Results_Promise) Struct() (Net_remoteSave_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteSave_Results{s}, err
}

type Net_remotePing_Params struct{ capnp.Struct }

// Net_remotePing_Params_TypeID is the unique identifier for the type Net_remotePing_Params.
const Net_remotePing_Params_TypeID = 0xbee5e0529f9017ff

func NewNet_remotePing_Params(s *capnp.Segment) (Net_remotePing_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remotePing_Params{st}, err
}

func NewRootNet_remotePing_Params(s *capnp.Segment) (Net_remotePing_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remotePing_Params{st}, err
}

func ReadRootNet_remotePing_Params(msg *capnp.Message) (Net_remotePing_Params, error) {
	root, err := msg.RootPtr()
	return Net_remotePing_Params{root.Struct()}, err
}

func (s Net_remotePing_Params) String() string {
	str, _ := text.Marshal(0xbee5e0529f9017ff, s.Struct)
	return str
}

func (s Net_remotePing_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_remotePing_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remotePing_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_remotePing_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

// Net_remotePing_Params_List is a list of Net_remotePing_Params.
type Net_remotePing_Params_List struct{ capnp.List }

// NewNet_remotePing_Params creates a new list of Net_remotePing_Params.
func NewNet_remotePing_Params_List(s *capnp.Segment, sz int32) (Net_remotePing_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remotePing_Params_List{l}, err
}

func (s Net_remotePing_Params_List) At(i int) Net_remotePing_Params {
	return Net_remotePing_Params{s.List.Struct(i)}
}

func (s Net_remotePing_Params_List) Set(i int, v Net_remotePing_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remotePing_Params_List) String() string {
	str, _ := text.MarshalList(0xbee5e0529f9017ff, s.List)
	return str
}

// Net_remotePing_Params_Promise is a wrapper for a Net_remotePing_Params promised by a client call.
type Net_remotePing_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remotePing_Params_Promise) Struct() (Net_remotePing_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remotePing_Params{s}, err
}

type Net_remotePing_Results struct{ capnp.Struct }

// Net_remotePing_Results_TypeID is the unique identifier for the type Net_remotePing_Results.
const Net_remotePing_Results_TypeID = 0xad37ff6270c35769

func NewNet_remotePing_Results(s *capnp.Segment) (Net_remotePing_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_remotePing_Results{st}, err
}

func NewRootNet_remotePing_Results(s *capnp.Segment) (Net_remotePing_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_remotePing_Results{st}, err
}

func ReadRootNet_remotePing_Results(msg *capnp.Message) (Net_remotePing_Results, error) {
	root, err := msg.RootPtr()
	return Net_remotePing_Results{root.Struct()}, err
}

func (s Net_remotePing_Results) String() string {
	str, _ := text.Marshal(0xad37ff6270c35769, s.Struct)
	return str
}

func (s Net_remotePing_Results) Roundtrip() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Net_remotePing_Results) SetRoundtrip(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

// Net_remotePing_Results_List is a list of Net_remotePing_Results.
type Net_remotePing_Results_List struct{ capnp.List }

// NewNet_remotePing_Results creates a new list of Net_remotePing_Results.
func NewNet_remotePing_Results_List(s *capnp.Segment, sz int32) (Net_remotePing_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Net_remotePing_Results_List{l}, err
}

func (s Net_remotePing_Results_List) At(i int) Net_remotePing_Results {
	return Net_remotePing_Results{s.List.Struct(i)}
}

func (s Net_remotePing_Results_List) Set(i int, v Net_remotePing_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remotePing_Results_List) String() string {
	str, _ := text.MarshalList(0xad37ff6270c35769, s.List)
	return str
}

// Net_remotePing_Results_Promise is a wrapper for a Net_remotePing_Results promised by a client call.
type Net_remotePing_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remotePing_Results_Promise) Struct() (Net_remotePing_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remotePing_Results{s}, err
}

type Net_remoteClear_Params struct{ capnp.Struct }

// Net_remoteClear_Params_TypeID is the unique identifier for the type Net_remoteClear_Params.
const Net_remoteClear_Params_TypeID = 0xd35d6ae0fdbd9bc5

func NewNet_remoteClear_Params(s *capnp.Segment) (Net_remoteClear_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Params{st}, err
}

func NewRootNet_remoteClear_Params(s *capnp.Segment) (Net_remoteClear_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Params{st}, err
}

func ReadRootNet_remoteClear_Params(msg *capnp.Message) (Net_remoteClear_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteClear_Params{root.Struct()}, err
}

func (s Net_remoteClear_Params) String() string {
	str, _ := text.Marshal(0xd35d6ae0fdbd9bc5, s.Struct)
	return str
}

// Net_remoteClear_Params_List is a list of Net_remoteClear_Params.
type Net_remoteClear_Params_List struct{ capnp.List }

// NewNet_remoteClear_Params creates a new list of Net_remoteClear_Params.
func NewNet_remoteClear_Params_List(s *capnp.Segment, sz int32) (Net_remoteClear_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteClear_Params_List{l}, err
}

func (s Net_remoteClear_Params_List) At(i int) Net_remoteClear_Params {
	return Net_remoteClear_Params{s.List.Struct(i)}
}

func (s Net_remoteClear_Params_List) Set(i int, v Net_remoteClear_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteClear_Params_List) String() string {
	str, _ := text.MarshalList(0xd35d6ae0fdbd9bc5, s.List)
	return str
}

// Net_remoteClear_Params_Promise is a wrapper for a Net_remoteClear_Params promised by a client call.
type Net_remoteClear_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteClear_Params_Promise) Struct() (Net_remoteClear_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteClear_Params{s}, err
}

type Net_remoteClear_Results struct{ capnp.Struct }

// Net_remoteClear_Results_TypeID is the unique identifier for the type Net_remoteClear_Results.
const Net_remoteClear_Results_TypeID = 0xdc0aec8d179d4ec9

func NewNet_remoteClear_Results(s *capnp.Segment) (Net_remoteClear_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Results{st}, err
}

func NewRootNet_remoteClear_Results(s *capnp.Segment) (Net_remoteClear_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteClear_Results{st}, err
}

func ReadRootNet_remoteClear_Results(msg *capnp.Message) (Net_remoteClear_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteClear_Results{root.Struct()}, err
}

func (s Net_remoteClear_Results) String() string {
	str, _ := text.Marshal(0xdc0aec8d179d4ec9, s.Struct)
	return str
}

// Net_remoteClear_Results_List is a list of Net_remoteClear_Results.
type Net_remoteClear_Results_List struct{ capnp.List }

// NewNet_remoteClear_Results creates a new list of Net_remoteClear_Results.
func NewNet_remoteClear_Results_List(s *capnp.Segment, sz int32) (Net_remoteClear_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteClear_Results_List{l}, err
}

func (s Net_remoteClear_Results_List) At(i int) Net_remoteClear_Results {
	return Net_remoteClear_Results{s.List.Struct(i)}
}

func (s Net_remoteClear_Results_List) Set(i int, v Net_remoteClear_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteClear_Results_List) String() string {
	str, _ := text.MarshalList(0xdc0aec8d179d4ec9, s.List)
	return str
}

// Net_remoteClear_Results_Promise is a wrapper for a Net_remoteClear_Results promised by a client call.
type Net_remoteClear_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteClear_Results_Promise) Struct() (Net_remoteClear_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteClear_Results{s}, err
}

type Net_netLocate_Params struct{ capnp.Struct }

// Net_netLocate_Params_TypeID is the unique identifier for the type Net_netLocate_Params.
const Net_netLocate_Params_TypeID = 0xd701f5ae7e7560e9

func NewNet_netLocate_Params(s *capnp.Segment) (Net_netLocate_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Net_netLocate_Params{st}, err
}

func NewRootNet_netLocate_Params(s *capnp.Segment) (Net_netLocate_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2})
	return Net_netLocate_Params{st}, err
}

func ReadRootNet_netLocate_Params(msg *capnp.Message) (Net_netLocate_Params, error) {
	root, err := msg.RootPtr()
	return Net_netLocate_Params{root.Struct()}, err
}

func (s Net_netLocate_Params) String() string {
	str, _ := text.Marshal(0xd701f5ae7e7560e9, s.Struct)
	return str
}

func (s Net_netLocate_Params) Who() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_netLocate_Params) HasWho() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_netLocate_Params) WhoBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_netLocate_Params) SetWho(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Net_netLocate_Params) TimeoutSec() float64 {
	return math.Float64frombits(s.Struct.Uint64(0))
}

func (s Net_netLocate_Params) SetTimeoutSec(v float64) {
	s.Struct.SetUint64(0, math.Float64bits(v))
}

func (s Net_netLocate_Params) LocateMask() (string, error) {
	p, err := s.Struct.Ptr(1)
	return p.Text(), err
}

func (s Net_netLocate_Params) HasLocateMask() bool {
	p, err := s.Struct.Ptr(1)
	return p.IsValid() || err != nil
}

func (s Net_netLocate_Params) LocateMaskBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(1)
	return p.TextBytes(), err
}

func (s Net_netLocate_Params) SetLocateMask(v string) error {
	return s.Struct.SetText(1, v)
}

// Net_netLocate_Params_List is a list of Net_netLocate_Params.
type Net_netLocate_Params_List struct{ capnp.List }

// NewNet_netLocate_Params creates a new list of Net_netLocate_Params.
func NewNet_netLocate_Params_List(s *capnp.Segment, sz int32) (Net_netLocate_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 2}, sz)
	return Net_netLocate_Params_List{l}, err
}

func (s Net_netLocate_Params_List) At(i int) Net_netLocate_Params {
	return Net_netLocate_Params{s.List.Struct(i)}
}

func (s Net_netLocate_Params_List) Set(i int, v Net_netLocate_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocate_Params_List) String() string {
	str, _ := text.MarshalList(0xd701f5ae7e7560e9, s.List)
	return str
}

// Net_netLocate_Params_Promise is a wrapper for a Net_netLocate_Params promised by a client call.
type Net_netLocate_Params_Promise struct{ *capnp.Pipeline }

func (p Net_netLocate_Params_Promise) Struct() (Net_netLocate_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocate_Params{s}, err
}

type Net_netLocate_Results struct{ capnp.Struct }

// Net_netLocate_Results_TypeID is the unique identifier for the type Net_netLocate_Results.
const Net_netLocate_Results_TypeID = 0xd2117353ea065c72

func NewNet_netLocate_Results(s *capnp.Segment) (Net_netLocate_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocate_Results{st}, err
}

func NewRootNet_netLocate_Results(s *capnp.Segment) (Net_netLocate_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocate_Results{st}, err
}

func ReadRootNet_netLocate_Results(msg *capnp.Message) (Net_netLocate_Results, error) {
	root, err := msg.RootPtr()
	return Net_netLocate_Results{root.Struct()}, err
}

func (s Net_netLocate_Results) String() string {
	str, _ := text.Marshal(0xd2117353ea065c72, s.Struct)
	return str
}

func (s Net_netLocate_Results) Ticket() uint64 {
	return s.Struct.Uint64(0)
}

func (s Net_netLocate_Results) SetTicket(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Net_netLocate_Results_List is a list of Net_netLocate_Results.
type Net_netLocate_Results_List struct{ capnp.List }

// NewNet_netLocate_Results creates a new list of Net_netLocate_Results.
func NewNet_netLocate_Results_List(s *capnp.Segment, sz int32) (Net_netLocate_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Net_netLocate_Results_List{l}, err
}

func (s Net_netLocate_Results_List) At(i int) Net_netLocate_Results {
	return Net_netLocate_Results{s.List.Struct(i)}
}

func (s Net_netLocate_Results_List) Set(i int, v Net_netLocate_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocate_Results_List) String() string {
	str, _ := text.MarshalList(0xd2117353ea065c72, s.List)
	return str
}

// Net_netLocate_Results_Promise is a wrapper for a Net_netLocate_Results promised by a client call.
type Net_netLocate_Results_Promise struct{ *capnp.Pipeline }

func (p Net_netLocate_Results_Promise) Struct() (Net_netLocate_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocate_Results{s}, err
}

type Net_netLocateNext_Params struct{ capnp.Struct }

// Net_netLocateNext_Params_TypeID is the unique identifier for the type Net_netLocateNext_Params.
const Net_netLocateNext_Params_TypeID = 0xc338177a5379031a

func NewNet_netLocateNext_Params(s *capnp.Segment) (Net_netLocateNext_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocateNext_Params{st}, err
}

func NewRootNet_netLocateNext_Params(s *capnp.Segment) (Net_netLocateNext_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0})
	return Net_netLocateNext_Params{st}, err
}

func ReadRootNet_netLocateNext_Params(msg *capnp.Message) (Net_netLocateNext_Params, error) {
	root, err := msg.RootPtr()
	return Net_netLocateNext_Params{root.Struct()}, err
}

func (s Net_netLocateNext_Params) String() string {
	str, _ := text.Marshal(0xc338177a5379031a, s.Struct)
	return str
}

func (s Net_netLocateNext_Params) Ticket() uint64 {
	return s.Struct.Uint64(0)
}

func (s Net_netLocateNext_Params) SetTicket(v uint64) {
	s.Struct.SetUint64(0, v)
}

// Net_netLocateNext_Params_List is a list of Net_netLocateNext_Params.
type Net_netLocateNext_Params_List struct{ capnp.List }

// NewNet_netLocateNext_Params creates a new list of Net_netLocateNext_Params.
func NewNet_netLocateNext_Params_List(s *capnp.Segment, sz int32) (Net_netLocateNext_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 0}, sz)
	return Net_netLocateNext_Params_List{l}, err
}

func (s Net_netLocateNext_Params_List) At(i int) Net_netLocateNext_Params {
	return Net_netLocateNext_Params{s.List.Struct(i)}
}

func (s Net_netLocateNext_Params_List) Set(i int, v Net_netLocateNext_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocateNext_Params_List) String() string {
	str, _ := text.MarshalList(0xc338177a5379031a, s.List)
	return str
}

// Net_netLocateNext_Params_Promise is a wrapper for a Net_netLocateNext_Params promised by a client call.
type Net_netLocateNext_Params_Promise struct{ *capnp.Pipeline }

func (p Net_netLocateNext_Params_Promise) Struct() (Net_netLocateNext_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocateNext_Params{s}, err
}

type Net_netLocateNext_Results struct{ capnp.Struct }

// Net_netLocateNext_Results_TypeID is the unique identifier for the type Net_netLocateNext_Results.
const Net_netLocateNext_Results_TypeID = 0x9a291d6964350a5b

func NewNet_netLocateNext_Results(s *capnp.Segment) (Net_netLocateNext_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_netLocateNext_Results{st}, err
}

func NewRootNet_netLocateNext_Results(s *capnp.Segment) (Net_netLocateNext_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_netLocateNext_Results{st}, err
}

func ReadRootNet_netLocateNext_Results(msg *capnp.Message) (Net_netLocateNext_Results, error) {
	root, err := msg.RootPtr()
	return Net_netLocateNext_Results{root.Struct()}, err
}

func (s Net_netLocateNext_Results) String() string {
	str, _ := text.Marshal(0x9a291d6964350a5b, s.Struct)
	return str
}

func (s Net_netLocateNext_Results) Result() (LocateResult, error) {
	p, err := s.Struct.Ptr(0)
	return LocateResult{Struct: p.Struct()}, err
}

func (s Net_netLocateNext_Results) HasResult() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_netLocateNext_Results) SetResult(v LocateResult) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewResult sets the result field to a newly
// allocated LocateResult struct, preferring placement in s's segment.
func (s Net_netLocateNext_Results) NewResult() (LocateResult, error) {
	ss, err := NewLocateResult(s.Struct.Segment())
	if err != nil {
		return LocateResult{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_netLocateNext_Results_List is a list of Net_netLocateNext_Results.
type Net_netLocateNext_Results_List struct{ capnp.List }

// NewNet_netLocateNext_Results creates a new list of Net_netLocateNext_Results.
func NewNet_netLocateNext_Results_List(s *capnp.Segment, sz int32) (Net_netLocateNext_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_netLocateNext_Results_List{l}, err
}

func (s Net_netLocateNext_Results_List) At(i int) Net_netLocateNext_Results {
	return Net_netLocateNext_Results{s.List.Struct(i)}
}

func (s Net_netLocateNext_Results_List) Set(i int, v Net_netLocateNext_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_netLocateNext_Results_List) String() string {
	str, _ := text.MarshalList(0x9a291d6964350a5b, s.List)
	return str
}

// Net_netLocateNext_Results_Promise is a wrapper for a Net_netLocateNext_Results promised by a client call.
type Net_netLocateNext_Results_Promise struct{ *capnp.Pipeline }

func (p Net_netLocateNext_Results_Promise) Struct() (Net_netLocateNext_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_netLocateNext_Results{s}, err
}

func (p Net_netLocateNext_Results_Promise) Result() LocateResult_Promise {
	return LocateResult_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_whoami_Params struct{ capnp.Struct }

// Net_whoami_Params_TypeID is the unique identifier for the type Net_whoami_Params.
const Net_whoami_Params_TypeID = 0x86541181da6400f7

func NewNet_whoami_Params(s *capnp.Segment) (Net_whoami_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_whoami_Params{st}, err
}

func NewRootNet_whoami_Params(s *capnp.Segment) (Net_whoami_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_whoami_Params{st}, err
}

func ReadRootNet_whoami_Params(msg *capnp.Message) (Net_whoami_Params, error) {
	root, err := msg.RootPtr()
	return Net_whoami_Params{root.Struct()}, err
}

func (s Net_whoami_Params) String() string {
	str, _ := text.Marshal(0x86541181da6400f7, s.Struct)
	return str
}

// Net_whoami_Params_List is a list of Net_whoami_Params.
type Net_whoami_Params_List struct{ capnp.List }

// NewNet_whoami_Params creates a new list of Net_whoami_Params.
func NewNet_whoami_Params_List(s *capnp.Segment, sz int32) (Net_whoami_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_whoami_Params_List{l}, err
}

func (s Net_whoami_Params_List) At(i int) Net_whoami_Params {
	return Net_whoami_Params{s.List.Struct(i)}
}

func (s Net_whoami_Params_List) Set(i int, v Net_whoami_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_whoami_Params_List) String() string {
	str, _ := text.MarshalList(0x86541181da6400f7, s.List)
	return str
}

// Net_whoami_Params_Promise is a wrapper for a Net_whoami_Params promised by a client call.
type Net_whoami_Params_Promise struct{ *capnp.Pipeline }

func (p Net_whoami_Params_Promise) Struct() (Net_whoami_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_whoami_Params{s}, err
}

type Net_whoami_Results struct{ capnp.Struct }

// Net_whoami_Results_TypeID is the unique identifier for the type Net_whoami_Results.
const Net_whoami_Results_TypeID = 0xd0071dd673841599

func NewNet_whoami_Results(s *capnp.Segment) (Net_whoami_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_whoami_Results{st}, err
}

func NewRootNet_whoami_Results(s *capnp.Segment) (Net_whoami_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_whoami_Results{st}, err
}

func ReadRootNet_whoami_Results(msg *capnp.Message) (Net_whoami_Results, error) {
	root, err := msg.RootPtr()
	return Net_whoami_Results{root.Struct()}, err
}

func (s Net_whoami_Results) String() string {
	str, _ := text.Marshal(0xd0071dd673841599, s.Struct)
	return str
}

func (s Net_whoami_Results) Whoami() (Identity, error) {
	p, err := s.Struct.Ptr(0)
	return Identity{Struct: p.Struct()}, err
}

func (s Net_whoami_Results) HasWhoami() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_whoami_Results) SetWhoami(v Identity) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewWhoami sets the whoami field to a newly
// allocated Identity struct, preferring placement in s's segment.
func (s Net_whoami_Results) NewWhoami() (Identity, error) {
	ss, err := NewIdentity(s.Struct.Segment())
	if err != nil {
		return Identity{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_whoami_Results_List is a list of Net_whoami_Results.
type Net_whoami_Results_List struct{ capnp.List }

// NewNet_whoami_Results creates a new list of Net_whoami_Results.
func NewNet_whoami_Results_List(s *capnp.Segment, sz int32) (Net_whoami_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_whoami_Results_List{l}, err
}

func (s Net_whoami_Results_List) At(i int) Net_whoami_Results {
	return Net_whoami_Results{s.List.Struct(i)}
}

func (s Net_whoami_Results_List) Set(i int, v Net_whoami_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_whoami_Results_List) String() string {
	str, _ := text.MarshalList(0xd0071dd673841599, s.List)
	return str
}

// Net_whoami_Results_Promise is a wrapper for a Net_whoami_Results promised by a client call.
type Net_whoami_Results_Promise struct{ *capnp.Pipeline }

func (p Net_whoami_Results_Promise) Struct() (Net_whoami_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_whoami_Results{s}, err
}

func (p Net_whoami_Results_Promise) Whoami() Identity_Promise {
	return Identity_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_connect_Params struct{ capnp.Struct }

// Net_connect_Params_TypeID is the unique identifier for the type Net_connect_Params.
const Net_connect_Params_TypeID = 0xaf631f5cddda9aa3

func NewNet_connect_Params(s *capnp.Segment) (Net_connect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Params{st}, err
}

func NewRootNet_connect_Params(s *capnp.Segment) (Net_connect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Params{st}, err
}

func ReadRootNet_connect_Params(msg *capnp.Message) (Net_connect_Params, error) {
	root, err := msg.RootPtr()
	return Net_connect_Params{root.Struct()}, err
}

func (s Net_connect_Params) String() string {
	str, _ := text.Marshal(0xaf631f5cddda9aa3, s.Struct)
	return str
}

// Net_connect_Params_List is a list of Net_connect_Params.
type Net_connect_Params_List struct{ capnp.List }

// NewNet_connect_Params creates a new list of Net_connect_Params.
func NewNet_connect_Params_List(s *capnp.Segment, sz int32) (Net_connect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_connect_Params_List{l}, err
}

func (s Net_connect_Params_List) At(i int) Net_connect_Params {
	return Net_connect_Params{s.List.Struct(i)}
}

func (s Net_connect_Params_List) Set(i int, v Net_connect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_connect_Params_List) String() string {
	str, _ := text.MarshalList(0xaf631f5cddda9aa3, s.List)
	return str
}

// Net_connect_Params_Promise is a wrapper for a Net_connect_Params promised by a client call.
type Net_connect_Params_Promise struct{ *capnp.Pipeline }

func (p Net_connect_Params_Promise) Struct() (Net_connect_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_connect_Params{s}, err
}

type Net_connect_Results struct{ capnp.Struct }

// Net_connect_Results_TypeID is the unique identifier for the type Net_connect_Results.
const Net_connect_Results_TypeID = 0xcb6e3e65f2dbc914

func NewNet_connect_Results(s *capnp.Segment) (Net_connect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Results{st}, err
}

func NewRootNet_connect_Results(s *capnp.Segment) (Net_connect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_connect_Results{st}, err
}

func ReadRootNet_connect_Results(msg *capnp.Message) (Net_connect_Results, error) {
	root, err := msg.RootPtr()
	return Net_connect_Results{root.Struct()}, err
}

func (s Net_connect_Results) String() string {
	str, _ := text.Marshal(0xcb6e3e65f2dbc914, s.Struct)
	return str
}

// Net_connect_Results_List is a list of Net_connect_Results.
type Net_connect_Results_List struct{ capnp.List }

// NewNet_connect_Results creates a new list of Net_connect_Results.
func NewNet_connect_Results_List(s *capnp.Segment, sz int32) (Net_connect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_connect_Results_List{l}, err
}

func (s Net_connect_Results_List) At(i int) Net_connect_Results {
	return Net_connect_Results{s.List.Struct(i)}
}

func (s Net_connect_Results_List) Set(i int, v Net_connect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_connect_Results_List) String() string {
	str, _ := text.MarshalList(0xcb6e3e65f2dbc914, s.List)
	return str
}

// Net_connect_Results_Promise is a wrapper for a Net_connect_Results promised by a client call.
type Net_connect_Results_Promise struct{ *capnp.Pipeline }

func (p Net_connect_Results_Promise) Struct() (Net_connect_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_connect_Results{s}, err
}

type Net_disconnect_Params struct{ capnp.Struct }

// Net_disconnect_Params_TypeID is the unique identifier for the type Net_disconnect_Params.
const Net_disconnect_Params_TypeID = 0xe19b7cffa7304650

func NewNet_disconnect_Params(s *capnp.Segment) (Net_disconnect_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Params{st}, err
}

func NewRootNet_disconnect_Params(s *capnp.Segment) (Net_disconnect_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Params{st}, err
}

func ReadRootNet_disconnect_Params(msg *capnp.Message) (Net_disconnect_Params, error) {
	root, err := msg.RootPtr()
	return Net_disconnect_Params{root.Struct()}, err
}

func (s Net_disconnect_Params) String() string {
	str, _ := text.Marshal(0xe19b7cffa7304650, s.Struct)
	return str
}

// Net_disconnect_Params_List is a list of Net_disconnect_Params.
type Net_disconnect_Params_List struct{ capnp.List }

// NewNet_disconnect_Params creates a new list of Net_disconnect_Params.
func NewNet_disconnect_Params_List(s *capnp.Segment, sz int32) (Net_disconnect_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_disconnect_Params_List{l}, err
}

func (s Net_disconnect_Params_List) At(i int) Net_disconnect_Params {
	return Net_disconnect_Params{s.List.Struct(i)}
}

func (s Net_disconnect_Params_List) Set(i int, v Net_disconnect_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_disconnect_Params_List) String() string {
	str, _ := text.MarshalList(0xe19b7cffa7304650, s.List)
	return str
}

// Net_disconnect_Params_Promise is a wrapper for a Net_disconnect_Params promised by a client call.
type Net_disconnect_Params_Promise struct{ *capnp.Pipeline }

func (p Net_disconnect_Params_Promise) Struct() (Net_disconnect_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_disconnect_Params{s}, err
}

type Net_disconnect_Results struct{ capnp.Struct }

// Net_disconnect_Results_TypeID is the unique identifier for the type Net_disconnect_Results.
const Net_disconnect_Results_TypeID = 0xb9095b6d17298884

func NewNet_disconnect_Results(s *capnp.Segment) (Net_disconnect_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Results{st}, err
}

func NewRootNet_disconnect_Results(s *capnp.Segment) (Net_disconnect_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_disconnect_Results{st}, err
}

func ReadRootNet_disconnect_Results(msg *capnp.Message) (Net_disconnect_Results, error) {
	root, err := msg.RootPtr()
	return Net_disconnect_Results{root.Struct()}, err
}

func (s Net_disconnect_Results) String() string {
	str, _ := text.Marshal(0xb9095b6d17298884, s.Struct)
	return str
}

// Net_disconnect_Results_List is a list of Net_disconnect_Results.
type Net_disconnect_Results_List struct{ capnp.List }

// NewNet_disconnect_Results creates a new list of Net_disconnect_Results.
func NewNet_disconnect_Results_List(s *capnp.Segment, sz int32) (Net_disconnect_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_disconnect_Results_List{l}, err
}

func (s Net_disconnect_Results_List) At(i int) Net_disconnect_Results {
	return Net_disconnect_Results{s.List.Struct(i)}
}

func (s Net_disconnect_Results_List) Set(i int, v Net_disconnect_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_disconnect_Results_List) String() string {
	str, _ := text.MarshalList(0xb9095b6d17298884, s.List)
	return str
}

// Net_disconnect_Results_Promise is a wrapper for a Net_disconnect_Results promised by a client call.
type Net_disconnect_Results_Promise struct{ *capnp.Pipeline }

func (p Net_disconnect_Results_Promise) Struct() (Net_disconnect_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_disconnect_Results{s}, err
}

type Net_remoteOnlineList_Params struct{ capnp.Struct }

// Net_remoteOnlineList_Params_TypeID is the unique identifier for the type Net_remoteOnlineList_Params.
const Net_remoteOnlineList_Params_TypeID = 0xb13597d7a0d68f31

func NewNet_remoteOnlineList_Params(s *capnp.Segment) (Net_remoteOnlineList_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteOnlineList_Params{st}, err
}

func NewRootNet_remoteOnlineList_Params(s *capnp.Segment) (Net_remoteOnlineList_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_remoteOnlineList_Params{st}, err
}

func ReadRootNet_remoteOnlineList_Params(msg *capnp.Message) (Net_remoteOnlineList_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteOnlineList_Params{root.Struct()}, err
}

func (s Net_remoteOnlineList_Params) String() string {
	str, _ := text.Marshal(0xb13597d7a0d68f31, s.Struct)
	return str
}

// Net_remoteOnlineList_Params_List is a list of Net_remoteOnlineList_Params.
type Net_remoteOnlineList_Params_List struct{ capnp.List }

// NewNet_remoteOnlineList_Params creates a new list of Net_remoteOnlineList_Params.
func NewNet_remoteOnlineList_Params_List(s *capnp.Segment, sz int32) (Net_remoteOnlineList_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_remoteOnlineList_Params_List{l}, err
}

func (s Net_remoteOnlineList_Params_List) At(i int) Net_remoteOnlineList_Params {
	return Net_remoteOnlineList_Params{s.List.Struct(i)}
}

func (s Net_remoteOnlineList_Params_List) Set(i int, v Net_remoteOnlineList_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteOnlineList_Params_List) String() string {
	str, _ := text.MarshalList(0xb13597d7a0d68f31, s.List)
	return str
}

// Net_remoteOnlineList_Params_Promise is a wrapper for a Net_remoteOnlineList_Params promised by a client call.
type Net_remoteOnlineList_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteOnlineList_Params_Promise) Struct() (Net_remoteOnlineList_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteOnlineList_Params{s}, err
}

type Net_remoteOnlineList_Results struct{ capnp.Struct }

// Net_remoteOnlineList_Results_TypeID is the unique identifier for the type Net_remoteOnlineList_Results.
const Net_remoteOnlineList_Results_TypeID = 0xb973694cb94aee47

func NewNet_remoteOnlineList_Results(s *capnp.Segment) (Net_remoteOnlineList_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteOnlineList_Results{st}, err
}

func NewRootNet_remoteOnlineList_Results(s *capnp.Segment) (Net_remoteOnlineList_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteOnlineList_Results{st}, err
}

func ReadRootNet_remoteOnlineList_Results(msg *capnp.Message) (Net_remoteOnlineList_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteOnlineList_Results{root.Struct()}, err
}

func (s Net_remoteOnlineList_Results) String() string {
	str, _ := text.Marshal(0xb973694cb94aee47, s.Struct)
	return str
}

func (s Net_remoteOnlineList_Results) Infos() (RemoteStatus_List, error) {
	p, err := s.Struct.Ptr(0)
	return RemoteStatus_List{List: p.List()}, err
}

func (s Net_remoteOnlineList_Results) HasInfos() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteOnlineList_Results) SetInfos(v RemoteStatus_List) error {
	return s.Struct.SetPtr(0, v.List.ToPtr())
}

// NewInfos sets the infos field to a newly
// allocated RemoteStatus_List, preferring placement in s's segment.
func (s Net_remoteOnlineList_Results) NewInfos(n int32) (RemoteStatus_List, error) {
	l, err := NewRemoteStatus_List(s.Struct.Segment(), n)
	if err != nil {
		return RemoteStatus_List{}, err
	}
	err = s.Struct.SetPtr(0, l.List.ToPtr())
	return l, err
}

// Net_remoteOnlineList_Results_List is a list of Net_remoteOnlineList_Results.
type Net_remoteOnlineList_Results_List struct{ capnp.List }

// NewNet_remoteOnlineList_Results creates a new list of Net_remoteOnlineList_Results.
func NewNet_remoteOnlineList_Results_List(s *capnp.Segment, sz int32) (Net_remoteOnlineList_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteOnlineList_Results_List{l}, err
}

func (s Net_remoteOnlineList_Results_List) At(i int) Net_remoteOnlineList_Results {
	return Net_remoteOnlineList_Results{s.List.Struct(i)}
}

func (s Net_remoteOnlineList_Results_List) Set(i int, v Net_remoteOnlineList_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteOnlineList_Results_List) String() string {
	str, _ := text.MarshalList(0xb973694cb94aee47, s.List)
	return str
}

// Net_remoteOnlineList_Results_Promise is a wrapper for a Net_remoteOnlineList_Results promised by a client call.
type Net_remoteOnlineList_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteOnlineList_Results_Promise) Struct() (Net_remoteOnlineList_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteOnlineList_Results{s}, err
}

type Net_remoteByName_Params struct{ capnp.Struct }

// Net_remoteByName_Params_TypeID is the unique identifier for the type Net_remoteByName_Params.
const Net_remoteByName_Params_TypeID = 0x91ac69870ceff408

func NewNet_remoteByName_Params(s *capnp.Segment) (Net_remoteByName_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Params{st}, err
}

func NewRootNet_remoteByName_Params(s *capnp.Segment) (Net_remoteByName_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Params{st}, err
}

func ReadRootNet_remoteByName_Params(msg *capnp.Message) (Net_remoteByName_Params, error) {
	root, err := msg.RootPtr()
	return Net_remoteByName_Params{root.Struct()}, err
}

func (s Net_remoteByName_Params) String() string {
	str, _ := text.Marshal(0x91ac69870ceff408, s.Struct)
	return str
}

func (s Net_remoteByName_Params) Name() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_remoteByName_Params) HasName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteByName_Params) NameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_remoteByName_Params) SetName(v string) error {
	return s.Struct.SetText(0, v)
}

// Net_remoteByName_Params_List is a list of Net_remoteByName_Params.
type Net_remoteByName_Params_List struct{ capnp.List }

// NewNet_remoteByName_Params creates a new list of Net_remoteByName_Params.
func NewNet_remoteByName_Params_List(s *capnp.Segment, sz int32) (Net_remoteByName_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteByName_Params_List{l}, err
}

func (s Net_remoteByName_Params_List) At(i int) Net_remoteByName_Params {
	return Net_remoteByName_Params{s.List.Struct(i)}
}

func (s Net_remoteByName_Params_List) Set(i int, v Net_remoteByName_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteByName_Params_List) String() string {
	str, _ := text.MarshalList(0x91ac69870ceff408, s.List)
	return str
}

// Net_remoteByName_Params_Promise is a wrapper for a Net_remoteByName_Params promised by a client call.
type Net_remoteByName_Params_Promise struct{ *capnp.Pipeline }

func (p Net_remoteByName_Params_Promise) Struct() (Net_remoteByName_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteByName_Params{s}, err
}

type Net_remoteByName_Results struct{ capnp.Struct }

// Net_remoteByName_Results_TypeID is the unique identifier for the type Net_remoteByName_Results.
const Net_remoteByName_Results_TypeID = 0xac6cc5b649f638a8

func NewNet_remoteByName_Results(s *capnp.Segment) (Net_remoteByName_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Results{st}, err
}

func NewRootNet_remoteByName_Results(s *capnp.Segment) (Net_remoteByName_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1})
	return Net_remoteByName_Results{st}, err
}

func ReadRootNet_remoteByName_Results(msg *capnp.Message) (Net_remoteByName_Results, error) {
	root, err := msg.RootPtr()
	return Net_remoteByName_Results{root.Struct()}, err
}

func (s Net_remoteByName_Results) String() string {
	str, _ := text.Marshal(0xac6cc5b649f638a8, s.Struct)
	return str
}

func (s Net_remoteByName_Results) Remote() (Remote, error) {
	p, err := s.Struct.Ptr(0)
	return Remote{Struct: p.Struct()}, err
}

func (s Net_remoteByName_Results) HasRemote() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_remoteByName_Results) SetRemote(v Remote) error {
	return s.Struct.SetPtr(0, v.Struct.ToPtr())
}

// NewRemote sets the remote field to a newly
// allocated Remote struct, preferring placement in s's segment.
func (s Net_remoteByName_Results) NewRemote() (Remote, error) {
	ss, err := NewRemote(s.Struct.Segment())
	if err != nil {
		return Remote{}, err
	}
	err = s.Struct.SetPtr(0, ss.Struct.ToPtr())
	return ss, err
}

// Net_remoteByName_Results_List is a list of Net_remoteByName_Results.
type Net_remoteByName_Results_List struct{ capnp.List }

// NewNet_remoteByName_Results creates a new list of Net_remoteByName_Results.
func NewNet_remoteByName_Results_List(s *capnp.Segment, sz int32) (Net_remoteByName_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 1}, sz)
	return Net_remoteByName_Results_List{l}, err
}

func (s Net_remoteByName_Results_List) At(i int) Net_remoteByName_Results {
	return Net_remoteByName_Results{s.List.Struct(i)}
}

func (s Net_remoteByName_Results_List) Set(i int, v Net_remoteByName_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_remoteByName_Results_List) String() string {
	str, _ := text.MarshalList(0xac6cc5b649f638a8, s.List)
	return str
}

// Net_remoteByName_Results_Promise is a wrapper for a Net_remoteByName_Results promised by a client call.
type Net_remoteByName_Results_Promise struct{ *capnp.Pipeline }

func (p Net_remoteByName_Results_Promise) Struct() (Net_remoteByName_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_remoteByName_Results{s}, err
}

func (p Net_remoteByName_Results_Promise) Remote() Remote_Promise {
	return Remote_Promise{Pipeline: p.Pipeline.GetPipeline(0)}
}

type Net_push_Params struct{ capnp.Struct }

// Net_push_Params_TypeID is the unique identifier for the type Net_push_Params.
const Net_push_Params_TypeID = 0xe88fae3b2e03bc0c

func NewNet_push_Params(s *capnp.Segment) (Net_push_Params, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Net_push_Params{st}, err
}

func NewRootNet_push_Params(s *capnp.Segment) (Net_push_Params, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Net_push_Params{st}, err
}

func ReadRootNet_push_Params(msg *capnp.Message) (Net_push_Params, error) {
	root, err := msg.RootPtr()
	return Net_push_Params{root.Struct()}, err
}

func (s Net_push_Params) String() string {
	str, _ := text.Marshal(0xe88fae3b2e03bc0c, s.Struct)
	return str
}

func (s Net_push_Params) RemoteName() (string, error) {
	p, err := s.Struct.Ptr(0)
	return p.Text(), err
}

func (s Net_push_Params) HasRemoteName() bool {
	p, err := s.Struct.Ptr(0)
	return p.IsValid() || err != nil
}

func (s Net_push_Params) RemoteNameBytes() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return p.TextBytes(), err
}

func (s Net_push_Params) SetRemoteName(v string) error {
	return s.Struct.SetText(0, v)
}

func (s Net_push_Params) DryRun() bool {
	return s.Struct.Bit(0)
}

func (s Net_push_Params) SetDryRun(v bool) {
	s.Struct.SetBit(0, v)
}

// Net_push_Params_List is a list of Net_push_Params.
type Net_push_Params_List struct{ capnp.List }

// NewNet_push_Params creates a new list of Net_push_Params.
func NewNet_push_Params_List(s *capnp.Segment, sz int32) (Net_push_Params_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Net_push_Params_List{l}, err
}

func (s Net_push_Params_List) At(i int) Net_push_Params { return Net_push_Params{s.List.Struct(i)} }

func (s Net_push_Params_List) Set(i int, v Net_push_Params) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_push_Params_List) String() string {
	str, _ := text.MarshalList(0xe88fae3b2e03bc0c, s.List)
	return str
}

// Net_push_Params_Promise is a wrapper for a Net_push_Params promised by a client call.
type Net_push_Params_Promise struct{ *capnp.Pipeline }

func (p Net_push_Params_Promise) Struct() (Net_push_Params, error) {
	s, err := p.Pipeline.Struct()
	return Net_push_Params{s}, err
}

type Net_push_Results struct{ capnp.Struct }

// Net_push_Results_TypeID is the unique identifier for the type Net_push_Results.
const Net_push_Results_TypeID = 0xa073a01c891a0f7f

func NewNet_push_Results(s *capnp.Segment) (Net_push_Results, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_push_Results{st}, err
}

func NewRootNet_push_Results(s *capnp.Segment) (Net_push_Results, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0})
	return Net_push_Results{st}, err
}

func ReadRootNet_push_Results(msg *capnp.Message) (Net_push_Results, error) {
	root, err := msg.RootPtr()
	return Net_push_Results{root.Struct()}, err
}

func (s Net_push_Results) String() string {
	str, _ := text.Marshal(0xa073a01c891a0f7f, s.Struct)
	return str
}

// Net_push_Results_List is a list of Net_push_Results.
type Net_push_Results_List struct{ capnp.List }

// NewNet_push_Results creates a new list of Net_push_Results.
func NewNet_push_Results_List(s *capnp.Segment, sz int32) (Net_push_Results_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 0, PointerCount: 0}, sz)
	return Net_push_Results_List{l}, err
}

func (s Net_push_Results_List) At(i int) Net_push_Results { return Net_push_Results{s.List.Struct(i)} }

func (s Net_push_Results_List) Set(i int, v Net_push_Results) error {
	return s.List.SetStruct(i, v.Struct)
}

func (s Net_push_Results_List) String() string {
	str, _ := text.MarshalList(0xa073a01c891a0f7f, s.List)
	return str
}

// Net_push_Results_Promise is a wrapper for a Net_push_Results promised by a client call.
type Net_push_Results_Promise struct{ *capnp.Pipeline }

func (p Net_push_Results_Promise) Struct() (Net_push_Results, error) {
	s, err := p.Pipeline.Struct()
	return Net_push_Results{s}, err
}

type API struct{ Client capnp.Client }

// API_TypeID is the unique identifier for the type API.
const API_TypeID = 0xfc487818328b97ef

func (c API) Stage(ctx context.Context, params func(FS_stage_Params) error, opts ...capnp.CallOption) FS_stage_Results_Promise {
	if c.Client == nil {
		return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stage_Params{Struct: s}) }
	}
	return FS_stage_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) List(ctx context.Context, params func(FS_list_Params) error, opts ...capnp.CallOption) FS_list_Results_Promise {
	if c.Client == nil {
		return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_list_Params{Struct: s}) }
	}
	return FS_list_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Cat(ctx context.Context, params func(FS_cat_Params) error, opts ...capnp.CallOption) FS_cat_Results_Promise {
	if c.Client == nil {
		return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_cat_Params{Struct: s}) }
	}
	return FS_cat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Mkdir(ctx context.Context, params func(FS_mkdir_Params) error, opts ...capnp.CallOption) FS_mkdir_Results_Promise {
	if c.Client == nil {
		return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_mkdir_Params{Struct: s}) }
	}
	return FS_mkdir_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Remove(ctx context.Context, params func(FS_remove_Params) error, opts ...capnp.CallOption) FS_remove_Results_Promise {
	if c.Client == nil {
		return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_remove_Params{Struct: s}) }
	}
	return FS_remove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Move(ctx context.Context, params func(FS_move_Params) error, opts ...capnp.CallOption) FS_move_Results_Promise {
	if c.Client == nil {
		return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_move_Params{Struct: s}) }
	}
	return FS_move_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Copy(ctx context.Context, params func(FS_copy_Params) error, opts ...capnp.CallOption) FS_copy_Results_Promise {
	if c.Client == nil {
		return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_copy_Params{Struct: s}) }
	}
	return FS_copy_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Pin(ctx context.Context, params func(FS_pin_Params) error, opts ...capnp.CallOption) FS_pin_Results_Promise {
	if c.Client == nil {
		return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_pin_Params{Struct: s}) }
	}
	return FS_pin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Unpin(ctx context.Context, params func(FS_unpin_Params) error, opts ...capnp.CallOption) FS_unpin_Results_Promise {
	if c.Client == nil {
		return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_unpin_Params{Struct: s}) }
	}
	return FS_unpin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Stat(ctx context.Context, params func(FS_stat_Params) error, opts ...capnp.CallOption) FS_stat_Results_Promise {
	if c.Client == nil {
		return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stat_Params{Struct: s}) }
	}
	return FS_stat_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GarbageCollect(ctx context.Context, params func(FS_garbageCollect_Params) error, opts ...capnp.CallOption) FS_garbageCollect_Results_Promise {
	if c.Client == nil {
		return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_garbageCollect_Params{Struct: s}) }
	}
	return FS_garbageCollect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Touch(ctx context.Context, params func(FS_touch_Params) error, opts ...capnp.CallOption) FS_touch_Results_Promise {
	if c.Client == nil {
		return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_touch_Params{Struct: s}) }
	}
	return FS_touch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Exists(ctx context.Context, params func(FS_exists_Params) error, opts ...capnp.CallOption) FS_exists_Results_Promise {
	if c.Client == nil {
		return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_exists_Params{Struct: s}) }
	}
	return FS_exists_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Tar(ctx context.Context, params func(FS_tar_Params) error, opts ...capnp.CallOption) FS_tar_Results_Promise {
	if c.Client == nil {
		return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_tar_Params{Struct: s}) }
	}
	return FS_tar_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) DeletedNodes(ctx context.Context, params func(FS_deletedNodes_Params) error, opts ...capnp.CallOption) FS_deletedNodes_Results_Promise {
	if c.Client == nil {
		return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_deletedNodes_Params{Struct: s}) }
	}
	return FS_deletedNodes_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Undelete(ctx context.Context, params func(FS_undelete_Params) error, opts ...capnp.CallOption) FS_undelete_Results_Promise {
	if c.Client == nil {
		return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_undelete_Params{Struct: s}) }
	}
	return FS_undelete_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Repin(ctx context.Context, params func(FS_repin_Params) error, opts ...capnp.CallOption) FS_repin_Results_Promise {
	if c.Client == nil {
		return FS_repin_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "repin",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_repin_Params{Struct: s}) }
	}
	return FS_repin_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) IsCached(ctx context.Context, params func(FS_isCached_Params) error, opts ...capnp.CallOption) FS_isCached_Results_Promise {
	if c.Client == nil {
		return FS_isCached_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "isCached",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_isCached_Params{Struct: s}) }
	}
	return FS_isCached_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) StageFromStream(ctx context.Context, params func(FS_stageFromStream_Params) error, opts ...capnp.CallOption) FS_stageFromStream_Results_Promise {
	if c.Client == nil {
		return FS_stageFromStream_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stageFromStream",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_stageFromStream_Params{Struct: s}) }
	}
	return FS_stageFromStream_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RecodeStream(ctx context.Context, params func(FS_recodeStream_Params) error, opts ...capnp.CallOption) FS_recodeStream_Results_Promise {
	if c.Client == nil {
		return FS_recodeStream_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "recodeStream",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(FS_recodeStream_Params{Struct: s}) }
	}
	return FS_recodeStream_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Log(ctx context.Context, params func(VCS_log_Params) error, opts ...capnp.CallOption) VCS_log_Results_Promise {
	if c.Client == nil {
		return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_log_Params{Struct: s}) }
	}
	return VCS_log_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Commit(ctx context.Context, params func(VCS_commit_Params) error, opts ...capnp.CallOption) VCS_commit_Results_Promise {
	if c.Client == nil {
		return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commit_Params{Struct: s}) }
	}
	return VCS_commit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Tag(ctx context.Context, params func(VCS_tag_Params) error, opts ...capnp.CallOption) VCS_tag_Results_Promise {
	if c.Client == nil {
		return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_tag_Params{Struct: s}) }
	}
	return VCS_tag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Untag(ctx context.Context, params func(VCS_untag_Params) error, opts ...capnp.CallOption) VCS_untag_Results_Promise {
	if c.Client == nil {
		return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_untag_Params{Struct: s}) }
	}
	return VCS_untag_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Reset(ctx context.Context, params func(VCS_reset_Params) error, opts ...capnp.CallOption) VCS_reset_Results_Promise {
	if c.Client == nil {
		return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_reset_Params{Struct: s}) }
	}
	return VCS_reset_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) History(ctx context.Context, params func(VCS_history_Params) error, opts ...capnp.CallOption) VCS_history_Results_Promise {
	if c.Client == nil {
		return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_history_Params{Struct: s}) }
	}
	return VCS_history_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) MakeDiff(ctx context.Context, params func(VCS_makeDiff_Params) error, opts ...capnp.CallOption) VCS_makeDiff_Results_Promise {
	if c.Client == nil {
		return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_makeDiff_Params{Struct: s}) }
	}
	return VCS_makeDiff_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Sync(ctx context.Context, params func(VCS_sync_Params) error, opts ...capnp.CallOption) VCS_sync_Results_Promise {
	if c.Client == nil {
		return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_sync_Params{Struct: s}) }
	}
	return VCS_sync_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Fetch(ctx context.Context, params func(VCS_fetch_Params) error, opts ...capnp.CallOption) VCS_fetch_Results_Promise {
	if c.Client == nil {
		return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_fetch_Params{Struct: s}) }
	}
	return VCS_fetch_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) CommitInfo(ctx context.Context, params func(VCS_commitInfo_Params) error, opts ...capnp.CallOption) VCS_commitInfo_Results_Promise {
	if c.Client == nil {
		return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(VCS_commitInfo_Params{Struct: s}) }
	}
	return VCS_commitInfo_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Quit(ctx context.Context, params func(Repo_quit_Params) error, opts ...capnp.CallOption) Repo_quit_Results_Promise {
	if c.Client == nil {
		return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_quit_Params{Struct: s}) }
	}
	return Repo_quit_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Ping(ctx context.Context, params func(Repo_ping_Params) error, opts ...capnp.CallOption) Repo_ping_Results_Promise {
	if c.Client == nil {
		return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_ping_Params{Struct: s}) }
	}
	return Repo_ping_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Mount(ctx context.Context, params func(Repo_mount_Params) error, opts ...capnp.CallOption) Repo_mount_Results_Promise {
	if c.Client == nil {
		return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_mount_Params{Struct: s}) }
	}
	return Repo_mount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Unmount(ctx context.Context, params func(Repo_unmount_Params) error, opts ...capnp.CallOption) Repo_unmount_Results_Promise {
	if c.Client == nil {
		return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_unmount_Params{Struct: s}) }
	}
	return Repo_unmount_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigGet(ctx context.Context, params func(Repo_configGet_Params) error, opts ...capnp.CallOption) Repo_configGet_Results_Promise {
	if c.Client == nil {
		return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configGet_Params{Struct: s}) }
	}
	return Repo_configGet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigSet(ctx context.Context, params func(Repo_configSet_Params) error, opts ...capnp.CallOption) Repo_configSet_Results_Promise {
	if c.Client == nil {
		return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configSet_Params{Struct: s}) }
	}
	return Repo_configSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigAll(ctx context.Context, params func(Repo_configAll_Params) error, opts ...capnp.CallOption) Repo_configAll_Results_Promise {
	if c.Client == nil {
		return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configAll_Params{Struct: s}) }
	}
	return Repo_configAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) ConfigDoc(ctx context.Context, params func(Repo_configDoc_Params) error, opts ...capnp.CallOption) Repo_configDoc_Results_Promise {
	if c.Client == nil {
		return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_configDoc_Params{Struct: s}) }
	}
	return Repo_configDoc_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Become(ctx context.Context, params func(Repo_become_Params) error, opts ...capnp.CallOption) Repo_become_Results_Promise {
	if c.Client == nil {
		return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_become_Params{Struct: s}) }
	}
	return Repo_become_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabAdd(ctx context.Context, params func(Repo_fstabAdd_Params) error, opts ...capnp.CallOption) Repo_fstabAdd_Results_Promise {
	if c.Client == nil {
		return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 3}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabAdd_Params{Struct: s}) }
	}
	return Repo_fstabAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabRemove(ctx context.Context, params func(Repo_fstabRemove_Params) error, opts ...capnp.CallOption) Repo_fstabRemove_Results_Promise {
	if c.Client == nil {
		return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabRemove_Params{Struct: s}) }
	}
	return Repo_fstabRemove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabApply(ctx context.Context, params func(Repo_fstabApply_Params) error, opts ...capnp.CallOption) Repo_fstabApply_Results_Promise {
	if c.Client == nil {
		return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabApply_Params{Struct: s}) }
	}
	return Repo_fstabApply_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabList(ctx context.Context, params func(Repo_fstabList_Params) error, opts ...capnp.CallOption) Repo_fstabList_Results_Promise {
	if c.Client == nil {
		return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabList_Params{Struct: s}) }
	}
	return Repo_fstabList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) FstabUnmountAll(ctx context.Context, params func(Repo_fstabUnmountAll_Params) error, opts ...capnp.CallOption) Repo_fstabUnmountAll_Results_Promise {
	if c.Client == nil {
		return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_fstabUnmountAll_Params{Struct: s}) }
	}
	return Repo_fstabUnmountAll_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Version(ctx context.Context, params func(Repo_version_Params) error, opts ...capnp.CallOption) Repo_version_Results_Promise {
	if c.Client == nil {
		return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_version_Params{Struct: s}) }
	}
	return Repo_version_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GatewayUserAdd(ctx context.Context, params func(Repo_gatewayUserAdd_Params) error, opts ...capnp.CallOption) Repo_gatewayUserAdd_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 4}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserAdd_Params{Struct: s}) }
	}
	return Repo_gatewayUserAdd_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GatewayUserRm(ctx context.Context, params func(Repo_gatewayUserRm_Params) error, opts ...capnp.CallOption) Repo_gatewayUserRm_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserRm_Params{Struct: s}) }
	}
	return Repo_gatewayUserRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) GatewayUserList(ctx context.Context, params func(Repo_gatewayUserList_Params) error, opts ...capnp.CallOption) Repo_gatewayUserList_Results_Promise {
	if c.Client == nil {
		return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_gatewayUserList_Params{Struct: s}) }
	}
	return Repo_gatewayUserList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) DebugProfilePort(ctx context.Context, params func(Repo_debugProfilePort_Params) error, opts ...capnp.CallOption) Repo_debugProfilePort_Results_Promise {
	if c.Client == nil {
		return Repo_debugProfilePort_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "debugProfilePort",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_debugProfilePort_Params{Struct: s}) }
	}
	return Repo_debugProfilePort_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) HintSet(ctx context.Context, params func(Repo_hintSet_Params) error, opts ...capnp.CallOption) Repo_hintSet_Results_Promise {
	if c.Client == nil {
		return Repo_hintSet_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintSet",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_hintSet_Params{Struct: s}) }
	}
	return Repo_hintSet_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) HintRemove(ctx context.Context, params func(Repo_hintRemove_Params) error, opts ...capnp.CallOption) Repo_hintRemove_Results_Promise {
	if c.Client == nil {
		return Repo_hintRemove_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      20,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintRemove",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_hintRemove_Params{Struct: s}) }
	}
	return Repo_hintRemove_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) HintList(ctx context.Context, params func(Repo_hintList_Params) error, opts ...capnp.CallOption) Repo_hintList_Results_Promise {
	if c.Client == nil {
		return Repo_hintList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      21,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Repo_hintList_Params{Struct: s}) }
	}
	return Repo_hintList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteAddOrUpdate(ctx context.Context, params func(Net_remoteAddOrUpdate_Params) error, opts ...capnp.CallOption) Net_remoteAddOrUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteAddOrUpdate_Params{Struct: s}) }
	}
	return Net_remoteAddOrUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteRm(ctx context.Context, params func(Net_remoteRm_Params) error, opts ...capnp.CallOption) Net_remoteRm_Results_Promise {
	if c.Client == nil {
		return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteRm_Params{Struct: s}) }
	}
	return Net_remoteRm_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteLs(ctx context.Context, params func(Net_remoteLs_Params) error, opts ...capnp.CallOption) Net_remoteLs_Results_Promise {
	if c.Client == nil {
		return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteLs_Params{Struct: s}) }
	}
	return Net_remoteLs_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteUpdate(ctx context.Context, params func(Net_remoteUpdate_Params) error, opts ...capnp.CallOption) Net_remoteUpdate_Results_Promise {
	if c.Client == nil {
		return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteUpdate_Params{Struct: s}) }
	}
	return Net_remoteUpdate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteSave(ctx context.Context, params func(Net_remoteSave_Params) error, opts ...capnp.CallOption) Net_remoteSave_Results_Promise {
	if c.Client == nil {
		return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteSave_Params{Struct: s}) }
	}
	return Net_remoteSave_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemotePing(ctx context.Context, params func(Net_remotePing_Params) error, opts ...capnp.CallOption) Net_remotePing_Results_Promise {
	if c.Client == nil {
		return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remotePing_Params{Struct: s}) }
	}
	return Net_remotePing_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteClear(ctx context.Context, params func(Net_remoteClear_Params) error, opts ...capnp.CallOption) Net_remoteClear_Results_Promise {
	if c.Client == nil {
		return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteClear_Params{Struct: s}) }
	}
	return Net_remoteClear_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) NetLocate(ctx context.Context, params func(Net_netLocate_Params) error, opts ...capnp.CallOption) Net_netLocate_Results_Promise {
	if c.Client == nil {
		return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 2}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocate_Params{Struct: s}) }
	}
	return Net_netLocate_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) NetLocateNext(ctx context.Context, params func(Net_netLocateNext_Params) error, opts ...capnp.CallOption) Net_netLocateNext_Results_Promise {
	if c.Client == nil {
		return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_netLocateNext_Params{Struct: s}) }
	}
	return Net_netLocateNext_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Whoami(ctx context.Context, params func(Net_whoami_Params) error, opts ...capnp.CallOption) Net_whoami_Results_Promise {
	if c.Client == nil {
		return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_whoami_Params{Struct: s}) }
	}
	return Net_whoami_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Connect(ctx context.Context, params func(Net_connect_Params) error, opts ...capnp.CallOption) Net_connect_Results_Promise {
	if c.Client == nil {
		return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_connect_Params{Struct: s}) }
	}
	return Net_connect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Disconnect(ctx context.Context, params func(Net_disconnect_Params) error, opts ...capnp.CallOption) Net_disconnect_Results_Promise {
	if c.Client == nil {
		return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_disconnect_Params{Struct: s}) }
	}
	return Net_disconnect_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteOnlineList(ctx context.Context, params func(Net_remoteOnlineList_Params) error, opts ...capnp.CallOption) Net_remoteOnlineList_Results_Promise {
	if c.Client == nil {
		return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 0}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteOnlineList_Params{Struct: s}) }
	}
	return Net_remoteOnlineList_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) RemoteByName(ctx context.Context, params func(Net_remoteByName_Params) error, opts ...capnp.CallOption) Net_remoteByName_Results_Promise {
	if c.Client == nil {
		return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 0, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_remoteByName_Params{Struct: s}) }
	}
	return Net_remoteByName_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}
func (c API) Push(ctx context.Context, params func(Net_push_Params) error, opts ...capnp.CallOption) Net_push_Results_Promise {
	if c.Client == nil {
		return Net_push_Results_Promise{Pipeline: capnp.NewPipeline(capnp.ErrorAnswer(capnp.ErrNullClient))}
	}
	call := &capnp.Call{
		Ctx: ctx,
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "push",
		},
		Options: capnp.NewCallOptions(opts),
	}
	if params != nil {
		call.ParamsSize = capnp.ObjectSize{DataSize: 8, PointerCount: 1}
		call.ParamsFunc = func(s capnp.Struct) error { return params(Net_push_Params{Struct: s}) }
	}
	return Net_push_Results_Promise{Pipeline: capnp.NewPipeline(c.Client.Call(call))}
}

type API_Server interface {
	Stage(FS_stage) error

	List(FS_list) error

	Cat(FS_cat) error

	Mkdir(FS_mkdir) error

	Remove(FS_remove) error

	Move(FS_move) error

	Copy(FS_copy) error

	Pin(FS_pin) error

	Unpin(FS_unpin) error

	Stat(FS_stat) error

	GarbageCollect(FS_garbageCollect) error

	Touch(FS_touch) error

	Exists(FS_exists) error

	Tar(FS_tar) error

	DeletedNodes(FS_deletedNodes) error

	Undelete(FS_undelete) error

	Repin(FS_repin) error

	IsCached(FS_isCached) error

	StageFromStream(FS_stageFromStream) error

	RecodeStream(FS_recodeStream) error

	Log(VCS_log) error

	Commit(VCS_commit) error

	Tag(VCS_tag) error

	Untag(VCS_untag) error

	Reset(VCS_reset) error

	History(VCS_history) error

	MakeDiff(VCS_makeDiff) error

	Sync(VCS_sync) error

	Fetch(VCS_fetch) error

	CommitInfo(VCS_commitInfo) error

	Quit(Repo_quit) error

	Ping(Repo_ping) error

	Mount(Repo_mount) error

	Unmount(Repo_unmount) error

	ConfigGet(Repo_configGet) error

	ConfigSet(Repo_configSet) error

	ConfigAll(Repo_configAll) error

	ConfigDoc(Repo_configDoc) error

	Become(Repo_become) error

	FstabAdd(Repo_fstabAdd) error

	FstabRemove(Repo_fstabRemove) error

	FstabApply(Repo_fstabApply) error

	FstabList(Repo_fstabList) error

	FstabUnmountAll(Repo_fstabUnmountAll) error

	Version(Repo_version) error

	GatewayUserAdd(Repo_gatewayUserAdd) error

	GatewayUserRm(Repo_gatewayUserRm) error

	GatewayUserList(Repo_gatewayUserList) error

	DebugProfilePort(Repo_debugProfilePort) error

	HintSet(Repo_hintSet) error

	HintRemove(Repo_hintRemove) error

	HintList(Repo_hintList) error

	RemoteAddOrUpdate(Net_remoteAddOrUpdate) error

	RemoteRm(Net_remoteRm) error

	RemoteLs(Net_remoteLs) error

	RemoteUpdate(Net_remoteUpdate) error

	RemoteSave(Net_remoteSave) error

	RemotePing(Net_remotePing) error

	RemoteClear(Net_remoteClear) error

	NetLocate(Net_netLocate) error

	NetLocateNext(Net_netLocateNext) error

	Whoami(Net_whoami) error

	Connect(Net_connect) error

	Disconnect(Net_disconnect) error

	RemoteOnlineList(Net_remoteOnlineList) error

	RemoteByName(Net_remoteByName) error

	Push(Net_push) error
}

func API_ServerToClient(s API_Server) API {
	c, _ := s.(server.Closer)
	return API{Client: server.New(API_Methods(nil, s), c)}
}

func API_Methods(methods []server.Method, s API_Server) []server.Method {
	if cap(methods) == 0 {
		methods = make([]server.Method, 0, 67)
	}

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stage",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stage{c, opts, FS_stage_Params{Struct: p}, FS_stage_Results{Struct: r}}
			return s.Stage(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "list",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_list{c, opts, FS_list_Params{Struct: p}, FS_list_Results{Struct: r}}
			return s.List(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "cat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_cat{c, opts, FS_cat_Params{Struct: p}, FS_cat_Results{Struct: r}}
			return s.Cat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "mkdir",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_mkdir{c, opts, FS_mkdir_Params{Struct: p}, FS_mkdir_Results{Struct: r}}
			return s.Mkdir(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "remove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_remove{c, opts, FS_remove_Params{Struct: p}, FS_remove_Results{Struct: r}}
			return s.Remove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "move",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_move{c, opts, FS_move_Params{Struct: p}, FS_move_Results{Struct: r}}
			return s.Move(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "copy",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_copy{c, opts, FS_copy_Params{Struct: p}, FS_copy_Results{Struct: r}}
			return s.Copy(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "pin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_pin{c, opts, FS_pin_Params{Struct: p}, FS_pin_Results{Struct: r}}
			return s.Pin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "unpin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_unpin{c, opts, FS_unpin_Params{Struct: p}, FS_unpin_Results{Struct: r}}
			return s.Unpin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stat",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stat{c, opts, FS_stat_Params{Struct: p}, FS_stat_Results{Struct: r}}
			return s.Stat(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "garbageCollect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_garbageCollect{c, opts, FS_garbageCollect_Params{Struct: p}, FS_garbageCollect_Results{Struct: r}}
			return s.GarbageCollect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "touch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_touch{c, opts, FS_touch_Params{Struct: p}, FS_touch_Results{Struct: r}}
			return s.Touch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "exists",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_exists{c, opts, FS_exists_Params{Struct: p}, FS_exists_Results{Struct: r}}
			return s.Exists(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "tar",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_tar{c, opts, FS_tar_Params{Struct: p}, FS_tar_Results{Struct: r}}
			return s.Tar(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "deletedNodes",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_deletedNodes{c, opts, FS_deletedNodes_Params{Struct: p}, FS_deletedNodes_Results{Struct: r}}
			return s.DeletedNodes(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "undelete",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_undelete{c, opts, FS_undelete_Params{Struct: p}, FS_undelete_Results{Struct: r}}
			return s.Undelete(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "repin",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_repin{c, opts, FS_repin_Params{Struct: p}, FS_repin_Results{Struct: r}}
			return s.Repin(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "isCached",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_isCached{c, opts, FS_isCached_Params{Struct: p}, FS_isCached_Results{Struct: r}}
			return s.IsCached(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "stageFromStream",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_stageFromStream{c, opts, FS_stageFromStream_Params{Struct: p}, FS_stageFromStream_Results{Struct: r}}
			return s.StageFromStream(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xe2b3585db47cd4f9,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:FS",
			MethodName:    "recodeStream",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := FS_recodeStream{c, opts, FS_recodeStream_Params{Struct: p}, FS_recodeStream_Results{Struct: r}}
			return s.RecodeStream(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "log",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_log{c, opts, VCS_log_Params{Struct: p}, VCS_log_Results{Struct: r}}
			return s.Log(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commit{c, opts, VCS_commit_Params{Struct: p}, VCS_commit_Results{Struct: r}}
			return s.Commit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "tag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_tag{c, opts, VCS_tag_Params{Struct: p}, VCS_tag_Results{Struct: r}}
			return s.Tag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "untag",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_untag{c, opts, VCS_untag_Params{Struct: p}, VCS_untag_Results{Struct: r}}
			return s.Untag(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "reset",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_reset{c, opts, VCS_reset_Params{Struct: p}, VCS_reset_Results{Struct: r}}
			return s.Reset(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "history",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_history{c, opts, VCS_history_Params{Struct: p}, VCS_history_Results{Struct: r}}
			return s.History(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "makeDiff",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_makeDiff{c, opts, VCS_makeDiff_Params{Struct: p}, VCS_makeDiff_Results{Struct: r}}
			return s.MakeDiff(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "sync",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_sync{c, opts, VCS_sync_Params{Struct: p}, VCS_sync_Results{Struct: r}}
			return s.Sync(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "fetch",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_fetch{c, opts, VCS_fetch_Params{Struct: p}, VCS_fetch_Results{Struct: r}}
			return s.Fetch(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xfaa680ef12c44624,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:VCS",
			MethodName:    "commitInfo",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := VCS_commitInfo{c, opts, VCS_commitInfo_Params{Struct: p}, VCS_commitInfo_Results{Struct: r}}
			return s.CommitInfo(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "quit",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_quit{c, opts, Repo_quit_Params{Struct: p}, Repo_quit_Results{Struct: r}}
			return s.Quit(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "ping",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_ping{c, opts, Repo_ping_Params{Struct: p}, Repo_ping_Results{Struct: r}}
			return s.Ping(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "mount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_mount{c, opts, Repo_mount_Params{Struct: p}, Repo_mount_Results{Struct: r}}
			return s.Mount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "unmount",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_unmount{c, opts, Repo_unmount_Params{Struct: p}, Repo_unmount_Results{Struct: r}}
			return s.Unmount(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configGet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configGet{c, opts, Repo_configGet_Params{Struct: p}, Repo_configGet_Results{Struct: r}}
			return s.ConfigGet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configSet{c, opts, Repo_configSet_Params{Struct: p}, Repo_configSet_Results{Struct: r}}
			return s.ConfigSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configAll{c, opts, Repo_configAll_Params{Struct: p}, Repo_configAll_Results{Struct: r}}
			return s.ConfigAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "configDoc",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_configDoc{c, opts, Repo_configDoc_Params{Struct: p}, Repo_configDoc_Results{Struct: r}}
			return s.ConfigDoc(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "become",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_become{c, opts, Repo_become_Params{Struct: p}, Repo_become_Results{Struct: r}}
			return s.Become(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabAdd{c, opts, Repo_fstabAdd_Params{Struct: p}, Repo_fstabAdd_Results{Struct: r}}
			return s.FstabAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabRemove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabRemove{c, opts, Repo_fstabRemove_Params{Struct: p}, Repo_fstabRemove_Results{Struct: r}}
			return s.FstabRemove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabApply",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabApply{c, opts, Repo_fstabApply_Params{Struct: p}, Repo_fstabApply_Results{Struct: r}}
			return s.FstabApply(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabList{c, opts, Repo_fstabList_Params{Struct: p}, Repo_fstabList_Results{Struct: r}}
			return s.FstabList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "fstabUnmountAll",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_fstabUnmountAll{c, opts, Repo_fstabUnmountAll_Params{Struct: p}, Repo_fstabUnmountAll_Results{Struct: r}}
			return s.FstabUnmountAll(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "version",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_version{c, opts, Repo_version_Params{Struct: p}, Repo_version_Results{Struct: r}}
			return s.Version(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      15,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserAdd",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserAdd{c, opts, Repo_gatewayUserAdd_Params{Struct: p}, Repo_gatewayUserAdd_Results{Struct: r}}
			return s.GatewayUserAdd(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      16,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserRm{c, opts, Repo_gatewayUserRm_Params{Struct: p}, Repo_gatewayUserRm_Results{Struct: r}}
			return s.GatewayUserRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      17,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "gatewayUserList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_gatewayUserList{c, opts, Repo_gatewayUserList_Params{Struct: p}, Repo_gatewayUserList_Results{Struct: r}}
			return s.GatewayUserList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      18,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "debugProfilePort",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_debugProfilePort{c, opts, Repo_debugProfilePort_Params{Struct: p}, Repo_debugProfilePort_Results{Struct: r}}
			return s.DebugProfilePort(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      19,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintSet",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_hintSet{c, opts, Repo_hintSet_Params{Struct: p}, Repo_hintSet_Results{Struct: r}}
			return s.HintSet(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      20,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintRemove",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_hintRemove{c, opts, Repo_hintRemove_Params{Struct: p}, Repo_hintRemove_Results{Struct: r}}
			return s.HintRemove(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xa862cd929f7af191,
			MethodID:      21,
			InterfaceName: "server/capnp/local_api.capnp:Repo",
			MethodName:    "hintList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Repo_hintList{c, opts, Repo_hintList_Params{Struct: p}, Repo_hintList_Results{Struct: r}}
			return s.HintList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      0,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteAddOrUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteAddOrUpdate{c, opts, Net_remoteAddOrUpdate_Params{Struct: p}, Net_remoteAddOrUpdate_Results{Struct: r}}
			return s.RemoteAddOrUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      1,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteRm",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteRm{c, opts, Net_remoteRm_Params{Struct: p}, Net_remoteRm_Results{Struct: r}}
			return s.RemoteRm(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      2,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteLs",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteLs{c, opts, Net_remoteLs_Params{Struct: p}, Net_remoteLs_Results{Struct: r}}
			return s.RemoteLs(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      3,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteUpdate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteUpdate{c, opts, Net_remoteUpdate_Params{Struct: p}, Net_remoteUpdate_Results{Struct: r}}
			return s.RemoteUpdate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      4,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteSave",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteSave{c, opts, Net_remoteSave_Params{Struct: p}, Net_remoteSave_Results{Struct: r}}
			return s.RemoteSave(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      5,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remotePing",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remotePing{c, opts, Net_remotePing_Params{Struct: p}, Net_remotePing_Results{Struct: r}}
			return s.RemotePing(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      6,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteClear",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteClear{c, opts, Net_remoteClear_Params{Struct: p}, Net_remoteClear_Results{Struct: r}}
			return s.RemoteClear(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      7,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocate",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocate{c, opts, Net_netLocate_Params{Struct: p}, Net_netLocate_Results{Struct: r}}
			return s.NetLocate(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 8, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      8,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "netLocateNext",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_netLocateNext{c, opts, Net_netLocateNext_Params{Struct: p}, Net_netLocateNext_Results{Struct: r}}
			return s.NetLocateNext(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      9,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "whoami",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_whoami{c, opts, Net_whoami_Params{Struct: p}, Net_whoami_Results{Struct: r}}
			return s.Whoami(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      10,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "connect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_connect{c, opts, Net_connect_Params{Struct: p}, Net_connect_Results{Struct: r}}
			return s.Connect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      11,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "disconnect",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_disconnect{c, opts, Net_disconnect_Params{Struct: p}, Net_disconnect_Results{Struct: r}}
			return s.Disconnect(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      12,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteOnlineList",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteOnlineList{c, opts, Net_remoteOnlineList_Params{Struct: p}, Net_remoteOnlineList_Results{Struct: r}}
			return s.RemoteOnlineList(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      13,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "remoteByName",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_remoteByName{c, opts, Net_remoteByName_Params{Struct: p}, Net_remoteByName_Results{Struct: r}}
			return s.RemoteByName(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 1},
	})

	methods = append(methods, server.Method{
		Method: capnp.Method{
			InterfaceID:   0xaa133a60be5a7d01,
			MethodID:      14,
			InterfaceName: "server/capnp/local_api.capnp:Net",
			MethodName:    "push",
		},
		Impl: func(c context.Context, opts capnp.CallOptions, p, r capnp.Struct) error {
			call := Net_push{c, opts, Net_push_Params{Struct: p}, Net_push_Results{Struct: r}}
			return s.Push(call)
		},
		ResultsSize: capnp.ObjectSize{DataSize: 0, PointerCount: 0},
	})

	return methods
}

const schema_ea883e7d5248d81b = "x\xda\xb4|{|\x14U\x96\xff=U\x09\xc5;i" +
	"*\xf8\x82\xd0M\xe4\xa1Q\x1e\x09\xe4g\x8c@:\x01" +
	"\x81\x04BR\xdd\x80N\xc6W\xa5\xfb&)\xe8G\xe8" +
	"\xaa&\x04e\x10FDX\xf1\x8d\x88\xca\"\xee0\x82" +
	"\x8a\x88\x8fQP\x1c\x11X'\xa3\xec\x80\x82\x8a\x82\x0b" +
	"\xb3d\x15\x16\x16Qp\xd4\x81\xe9\xdf\xe7\xde\xea[}" +
	";\xe9\xa4;,\xf3W\xd2U\xa7\xee\xf3\xbc\xcf\xf7\xde" +
	"\x91G\xaer\x0ay\xe9w\xde\x80\x90\xfb>!\xbdK" +
	"\xc4v\xf7\x95\x87\xf4ik\xeeE\x8a\x03\x00\xa14\x09" +
	"\xa1Q+\xfb\xd5\x00\x02y]\xbfb\x04\x91c\x03\xbe" +
	"\xdd\x7f \xed\x87\xc5\xc8\x96\xc3\xde\xef\xe8\xf7\x18\xa0\xb4" +
	"\xc8\xb9\xb2\xdfj\x07\xc6\xf6\xbc\x9f{\xb3\xa5\xdf|@" +
	"i\x17\xfe\xe6\xfdr\x91m\xfa\xfd\xb6\x81\xec\xf9\x1a\xfa" +
	"<\xf2x\xd7\x8c\xa3\xbfT\x1f\xe4\xbfX\xd6\xefy\xf2" +
	"\xe6\xa7\xcb\xf0\xf5#\xffu\xd7Rds\xb07M\xfd" +
	"B\xe4\xcd\x03+\xfee\x9aVX\xfa\x00\xf7\x06\x9bo" +
	"\x84\xbbo\xc2\xc7_lYn\xb6\x96\x0e\xe4\x95B\x86" +
	"\x06\xb2J\x87\xee\xf8\xf0\xe9\xffw\\\xd9\xfb\x10R\xb2" +
	"\x01\"\xfd\xbe\x98\xecZ0\xee\x81\x13(] \x94\x8b" +
	"\xfa\xb9@^\xd9O\x92W\xf6\xb3\xcb\xcd\xfd6#\xf8" +
	"\xcf\xfd\xc3r'\xe7h\x8f\xc4:\xf2\xf7\xa7\x1du=" +
	"{\xba\xe7R\xed\xe5G\x11\x9d\x90\xd9\xd1\xaf\xfa\xbfH" +
	":\xd2\xfa\x93\x8e\x8e\xf4\xf8\xca\xc8}b\xf6\xe3\xd1\x91" +
	"\xd0\xf6\x97\xf5_N\x08V\xf7oD\x10\xd9{\xeb\xe4" +
	"\xda\xcd\x1e\xed\x09s\x12f\x0b\xe7\xfa/&\x04\x90M" +
	"Zx\xe7\xc1ic_\xff\xfdC+\xa3\xdb`R\x0c" +
	"\xcc\xae&\x14\xc3\xb2I\x13\xa1!O\x9c\xda\xf7\xd6\x86" +
	"\x95\xdc:,\xcb^N\x86w\xff\xf3WO|f\xa5" +
	"\xf3I~\xed\xb2_$o~^\xf5\xd9\xac\x09\xca?" +
	"\x9e\xe4\xd6[\xcb\xfe\x80\xbc\x99Tz\xea/?\xd9\xa6" +
	"\xaej\xbd4\x94\xe6W\xd9\xe5 \xfb\xb3%\xd9\x9fm" +
	"\x1f\xb5&\xdb\x0e\x08\"\xb7A\xc1US]\x0f\xae\xe2" +
	"7{\x00]\x9d[>\x9es\xfa\xf1\x1e#\x9f\xe2\xb7" +
	"a\xcd\x00:\xf9M\x03\xc8\xdc\x02}\xaf\x0e_v\xe8" +
	"\x04#\xa0\xdf\xee\x1b\xf0\x01!8:\xe0\x1b\x04\x91\xaf" +
	"\x1a6\x0d\xfb\x9f1\xaf\xaeF1\x869h\x7f\x8d\xb4" +
	"\xfd\xeb\xee\x05^-\xfb\xda\xa7\xf9\x95o\xb6o#\x9f" +
	"\x1e\xb4\x93\xb6\x975I\xef5\x7f\xfb\xe43|\xe7?" +
	"\xdb\xe9\xc2\xa6;\x08\xc1\xb3B\xf7UWlx\xe1\x99" +
	"\xe8\xca\xd3\xad\x19\xec\x98E\x08\xf2\x1cd]3m\xc5" +
	"e\x0b\x1b\xaf|\x96\xdf\xbb\x95\x8e\xf9T\x00(\xc1\xe5" +
	"J\xe5\xd7\xbd\xed\xaf?\xcbK\x08\x0c|\x8d\x10\xd8\x06" +
	"\x92.\"\xaeeM\x97\xff\xe2]\xc3\x8f\xa1` m" +
	"\xa1\x84\x12\xdcYX:sB\x97O\xd7\xf0\xbb\xaf\x0e" +
	"|\x9e\x10\xcc\xa1\x04?^\xf6\x9d0a\xd5\xf9\x7f\xe5" +
	"\x09\x1e\x1dH7\x7f\x0d%xk\xdbS}\x1e\xef\xbb" +
	"d-?\x86\xed\x03\xe9\x1a\xef\xa1\x04\x85\xf3?xl" +
	"\xcf'\xdf\xc6\x11\x9c\x19H\xc5\xf8\x02%X\x98q\xd5" +
	"\xb2\xfe\xcf\xe9\xcfqk\x9c\x9dC\xf7\xefO\xd3.\xff" +
	"\xc0\xe1[\xb0\x8e\xef\xbc[\x0e\x1d\xdd\x959\xe4\xd3\xa6" +
	"S\x0fy^j\xd9\xb8\x0e)\x03c\xbcy\xa3IQ" +
	"\x96C\x96\xe8\xbe\xd1\xd5\xcf\x0f\xbfs\xe4\xf3\x84\x9b\xd2" +
	"8n\xeaJ(7\xe6\xe4\x83\xbc5G\x92\xb7\xe6\xd8" +
	"G\x9d\xcaY*\"\x88\xccv\xbbK\xbe\x97K\xff\x8d" +
	"\xe3\xa6\x8dC(3/\xb9n\xc1n\xf7\xa7\xa7\x7f\xc7" +
	"\x8ds\xf5\x90\x1a\xf2f\xdb'}\xfe|\xcd\xd8\xf0z" +
	"~\x8aK\x86\xd0e~t\x08]\xa4\xf5[\xc0{\xcb" +
	"\xc8\xdf\xf3\xcc\xb2e\xc8\xd3\x84`\x07%\x98\xe0R\xde" +
	"\xc3][~\x8fl\xd7\xb3\x06\x8e\x0e\xf93i;g" +
	"\xee\xe2\xcd\x9fL\\\xf6\x02\xbf\x06\x07\x86P\x09o\xa1" +
	"\x9f>zf\xfe\xda\xc7\xf6\xd4l@\xb6l16A" +
	"\x04\xa3\xfa\x0e\xed\x03\xf2\xe0\xa1T\\\x87.M\x97\xf7" +
	"\xe5J\x08E.\x93V}\xf5\xdc\xf4\xc76\xf0,\xb1" +
	"5\x97\xaeXs.io\xf4\xcc\x01\x91\xa9\xbf\xee\xb6" +
	"1N\xde\x7f\xce\xa5[\x9e~\x1dYS\xff\xfeo\x02" +
	"\xdd\xea\x16l\x8c\xce\x86\xf2\xa5z\x1d\xddQ?%\x10" +
	"\xfb\xf4\xb4\x0d\xafyv#?\xe6\xe6\xebB\x84\xe0\xc0" +
	"u\xa4\x8fY\x8bg\x0e\xdd\x0d\xc76\xb6\x96q\x91j" +
	"\x9f\xeb\\ w\xbb^\x92\xbb]o\x1f\x95w=\x95" +
	"qXP\xfd\xde]E\xf2\x8bm&Y1\xac;\xc8" +
	"\xb7\x0f\xa3\xbaa\xd8\x87\xa2||\x04\x99\xe4\xc0O\xf7" +
	"\x0c\xbe\xef\x85\xa7^\xe46q\xdf\x08\xcaR\x9b\xb5\xa9" +
	"\x0f\xb5L\x1e\xf0\x12?\xb4\xed#\xa8\xd05\x8f C" +
	"\xcb\x0d~\xff\xcc\xf9\x7f_\xf6\x12\xa7\xb2\x8e\x93\xf7i" +
	"\x919\xfeY[\x1f9\xb9\xf3%\xae\xd1\x03#\xa8\x89" +
	"\xd8P\xf8c\xd9\x1fv\xfb^\xe6\xb7w\xf7\x08*\x87" +
	"\x07h\xa3_\xcb-\xb9\x85\xef>\xfc2\xbf\xe8\xe7F" +
	"Pe\x91>\x92.\xc8\xf8O7:{\x9d\x8b#\x18" +
	"<\x92\xeeJ\x01%\xd0n\xd9\xd9P\x13\xb9aS\x94" +
	"\xd3i\xef3L\x02L\x09\xfe\xed\xe9/\x0f\xdff\xf7" +
	"l\xe6\xb8s\xd9\xc8\xc5dt\xc6\xc3\x9b\x1e|\xf7\xda" +
	"\xff\xda\xcc\x8d;<\x92\xf2\xd6^\xf7?\xbe\xfa\xcf\xe1" +
	"?n\xe6\xc7\xad\x8d\xa4\xfb\x14\xa6\x8d\xaa\xbdo\xfa\xe8" +
	"\x8a\xf3#_\x8d\xe3\x85\x95#\xe9r\xad\x1bI\xb6\xfa" +
	"\xad9_\x8f.\xfa\xe2\xd7\xaf\xc6I \xe4Q\x8a^" +
	"y\x84\"\xef\xe1\xcf\x9e\xfb|U\xc1\x16n`s\xf2" +
	"h\xf7S\xbb~{\xea\xec\xe9\x8a-\xc8\xe6\x10#?" +
	"\xef\xbf\xe7\x8d\xdbo}\xfd\xafdSq^\x0d\xc8M" +
	"y\x12Br8o\xa9\xdcL\xfe\x8b\x8c\xd8u\xf7\xb3" +
	"i\xb7\x0d~-N\x86\xf2\xa8M\xdd\x91G\xf5i\xc5" +
	"\xa4\x0f>;R\xf3\x1a\xd7\xd1\x99<j\xdc\x8b\xef=" +
	"\x94\xfd\xd7\xe2\x93\xaf![v\x1bn;\x9c\xd7\x07\xe4" +
	"S\xb4\xaf\xe3y\x9b\x11Df\xac\xb9\xe6\xea\x17o\xbd" +
	"\xe7\x8dV\xc4\xe6\x8a\xe6\xe7\x80\xbc:_\x92W\xe7\xdb" +
	"\xe5\x1d\xf9\xc4B\x18\xef\xdf\xf4\x97\x01C\xff\xf8&\xbf" +
	"s\xebG\xd1\x8dys\x14\x19\xd6+\x7fk\xb9\xa6`" +
	"\xd4\xa17\xf9q\xb7\x8c\xa2\xb2\x7f\x8e\x12\x9c\xb9p\xf6" +
	"\xd0\x8e\xb1\xc1\xb7\xe2\xec\xc0h*Ny\xa3\xc9\x0a\xde" +
	"\x18\xfe\xcd\xc4\xd9\x87\xf7\xbe\xc5Ml\xc5h\xba\xb5\xf7" +
	"=p\xed\xe5\xfe_w\xdb\xca\xbdi\x1aMYr\xd2" +
	"\xff\x96o\x9d\xaa\xe9[\xe3\xb6v\xf4'\xa4\xd1\x05\xa3" +
	"I\xaf\x9b\x87N\xbd\xfa\x91c\xbd\xb6q\x9fn\x1aM" +
	"W\xeb\xf5//\x8c}n\xe3\x1d\xef\xf0\"\xb2z4" +
	"e\xd6\x8d\xf4\xd3M\x87\"\x8f\xe7\x8e\xfa\xed;\x1cC" +
	"\x1d\x1cM\x8d\xe2\xf9\x97v\xac\x1d\xe7:\xc9\xbfi\x1e" +
	"M\x95\xe7S\xbb\x16\x94\xe6\xddV\xf1nk\x897\xf5" +
	"\xcfh\x17\xc8{F\x93=h\x1eM\xf6`^\xc5\xf5" +
	"\xab\xef}x\xc5v~Q\xb5\x02s\xf4\x05d\x08O" +
	"\x14\xba\xe7\xfd0\xed\xf9\xed\\G\x9b\xc8\xfb\xb4\xc8\x94" +
	"\xb5Y\xf74\x96m\xdc\xce\xcdk]\x01\x95_\xf7M" +
	"#\x9f<\xd9\xf4\x87\xed\xfc\xbcV\x14PN]M\x1b" +
	"}\xda\xbd\xbf\xf7\xdd\xef\xccy/\xa1\xe7\xb1\xb5 \x07" +
	"\xe4\xe6\x02In.\xb0\x8f\xfa\xb9\xe0\x16\xa2\x95\xca\xc6" +
	"l:\xf9\xe7\x96m\xef\xf1\xc3\xf4\xdf@\xb7v\xc1\x0d" +
	"\xd4\xfe^\xfe\xc8Z\xd7\x91\x96\xf7\xf8]Xc\x12l" +
	"\xa2\x04\x93\x8eO\xff\xef\xcf~\xe8\xffGN\xdb\xec\xb9" +
	"\x81*\xaa\x09\xc5\xe3\xfe|\xd3\xdce\xef\xf3\x9fn\xbd" +
	"\x81\xea\xfdf\xfai\xe3K\xab\xb2\x86\xba7\xbd\xcf-" +
	"\xc1q\xd2tZ\xe4\xa7\xe1\x07\xbf\xfc\xba\xf6\xf0\xfb<" +
	"C\x1d\xbc\x812T\xcb\x0d\x84\xa1\xee\xaf\xef\x8d\xff\xf2" +
	"\xe4};\xb85*)\xa4\xdbt\x95\xd8\xe4\x9e\x7fy" +
	"\xe1N^\xcd\xe4\x15RMVRHz]2\xbd\xf1" +
	"\xde\xdd\xa7\xcf\xef\xe4zU\x0b\xa9G7z\xed\xb1W" +
	"^\xefS\xb1\x8b{\xa3\x14\xd2-\xf9\xe8\xad\x9f\xff\xf8" +
	"\x9b\xfb\x0b?\xe4\x97\xe9\xe6B*\"3h\xa3\xaf\xfd" +
	"\xcf-/\xab?\xb6|\xc8k\xa8B:\x95;\xce\xbc" +
	":\xe4\xe5\x87f4\xf3{\x86\x0b\xe9\x9e\xcd\xa1\x9f\xd6" +
	">7\xeb\xe9?\x0d\xb8\xab\xb9\x95\xb4J\xd4O)\xec" +
	"\x03\xf2\xbaBI^Wh\x1f\xb5\xa7\xf0a\xb2e\x9f" +
	"\xbb\xeb\x8b\x87lx\xbd\x99[\xf0\xe6\"\xca\xf6Y\xcd" +
	"_}\x8f\xc7\x05>\xe2\x16\xe5\xcd\"\xba(\x83\xb6\xbd" +
	"\xe1\xc2w\xee\xff\x88\x1b\xde\xfa\"\xaa\xc1~<\xa5," +
	"{\xf0\xfb\xb3\x1fs\xad\xad.\xa2\xcc\xf6\xe1\x96\xf4\xcf" +
	"\xb6U\xde\xff\x17\xee\x9b%E46Y\xdd\xf7>\xfd" +
	"\xb3li/\xbf\xb1\xe1\"\xea\x17.*\xa2\xb6\xe0\x7f" +
	"\x97\x9e\xf8\x87|\xd9\xde\xd6l\xd8\x85\xf2rQ\x0e\xc8" +
	"[\x8a$yK\x91}\xd4\xe1\xa2\x0f\xc9\x9c\xf6\x97i" +
	"Yo\xff\xc7\xe6}\xfc\xfan\x1aCYe\xfb\x18\xd2" +
	"b\xe8\xb6.'\xdc\xba\xed\x13~W\x8f\x8e\xa1lx" +
	"\x86\x12\xec~f\xfb\x85#\xb3n\xff\x94\x9b\xbbm," +
	"\xd5#\x9fF\xfa=y\xf7\x90\xc0\xa7\x9cc\x02c\xbf" +
	"'o\xb6\xe4V\xec\xfc\xc3L\xef~n\x86\xe7\xc6P" +
	"N(\x1d_\xfd\xf7\x86\xc1O\xefOh\xdd[\xc6\xe4" +
	"\x83|n\x8c$\x9f\x1bc\x97\x07\x8f%*\xf4\xf8]" +
	"\xe1\xdf\xbcr\x0e>g6\x842l\xfa8\xaa\xda\xfb" +
	"\x8e#\xfa`\xec[\x03WV\xf6\xed\xf99?\xc37" +
	"\xc7Q\x0e\xda=\x8eL\xa0\xfc\xc5\xc7\x8ao\xaa\xce\xfb" +
	"\x9c\x1bL\xcb8\xbaE\xbbw\x1f\xf8\xfb\x8f\x83\x96~" +
	"\xces\xd0\xc1q\xa60\xd0O\xc7\x9f\x7f\xb2\xba\xd7w" +
	"/\xc4\xb5\x9d^L\x17\xa7o1!\xe8\xa5\xdew\xcc" +
	"?\xf9\xf4\xe7\xfc\x86\x15\x14\xd3\xd1\xddL\x09\x9e\\1" +
	"J\xbdz\xed\xcd\x07y\x02\\L\xdd\xbf9\x94@{" +
	"z\xc3O?\xea\xd3\x0f&2)\x8f\x16\xbb@^_" +
	"Lt\xdf\xbab\xb2\x1a\xdf}r\xef\xfa\xf1\x7f\x1d\xfa" +
	"\x15?\xe0&'5\xcaK\x9c\xd4^l\xfd\xf0P\xd9" +
	"\xf7\xf3\xbe\xe26k\xbd\x93\xb2\xd6\xd9\x9d/\xdf\x9c\xf6" +
	"_\x1b\xbe\xe2\xd8q\xa5\x93z\xa8\xcd\xd3\xd6\\\xbe\xe2" +
	"d\xf7C\xdc7\x8b\x9ct\xb3Z>|f\xd5\xaa\xda" +
	"\xa5\x87Z\x8d\x8d\xee\xc1\x1cg9\xe9\x94\x8cm\x91\x93" +
	"(\x8e\xef6\x14\x1a\xb3\x1a\x9a\xbf\xe6\xc7v\xd8I\xe3" +
	"\xa5StlW\x1d8\xb6\xf7\xae\xf5[\x8e\xf0!K" +
	"\xaf\x12\xba\x98\xd9%\xa4\x85\xd7B\xd7\xefz{\xcd\xd9" +
	"#\xfcZ5\x95\xd0paY\x09i\xe1\x83\x1f\xa6d" +
	"-=6\xfdh\x9c\xde+\xa1\xe2\xb1\x9b\x12TM\x1c" +
	"\xf9B\xe4\x9eg\x8erSi)\xa1\xcab\x93\xb4k" +
	"\xe1\xa0\x9c7\x8f&Z\xe6\x03%\xb9 \xb7\x94\x90\xa9" +
	"\x1c-!\xcbl\xf9\x1b\xad=\xca\xdd\xa5\x02\xc8\xfbJ" +
	"/'S+\x95\xd2\xe5\xbe\x13\x89\xf7q\xd3\xf8\xd3\xe2" +
	"\x84~?\xfd\x95\xf1(m\xf4\xc2\xcdd\xe0\xa3zM" +
	"\xa4>\xea\x85\x7f\xef\xf2\xee\x17w\xf5\xfd&\x8e\x8d\xf3" +
	"&\xd1\x9d\x1b;\x89\xb0\xf1\xe2\x8f\xb6}`<{\xdb" +
	"7\xd1\xd5\xa1\xf2p`\x12\xe5\xa4\x16JP\xfd]\xc1" +
	"\x93SW\x16\x7f\xcb\xcdm\xc9d*\x87=\xdf\x15\x87" +
	"\xdf\xf4\xca\xc3\xdf\xc6\xf9Y\xe1\xc9T\x13.\x9aLV" +
	"v\xe65\x1f;\xfeXp\xedq~o\x8e\x9a\x04\xa7" +
	"&\x93\x85\xcb\xfa\xefm\xca\xa0\xe5e'\x90\x92ci" +
	"\x81\xec\xb2/\xa9\x9fQF\x08\x1e\xd9\xff\xb5}\xcb\xf7" +
	"_\x9e\xe05x\x19]\xd9\xdd\x9f\x1d\xf9\xfb\xd2\x8c-" +
	"'\x139P%e\xe5 \xcf(\x93\xe4\x19evy" +
	"I\x19\x99\xc6\xf7c\xb3\xe6\x0c\xbb\xb7\xee\x14?\x94\xec" +
	"r\xeaA\x0c+'=\xdd\xd64.\xfc\xd6\x8d\xab\xbf" +
	"3\xb5J4?R~\x82z\xb3\x94\xa0\xef'\xe7\xff" +
	"0c\xde\xfb\xdf\xf1-,)\xa7\x93y\x94\x12\xfc\xf0" +
	"\x84p\xeb\xcc\xfcA?p\xac\xbe\xa5\x9c\x1a\xce\xff8" +
	"\xa9N\xe9\xf5\xcb\xda\x1f\xf8O\xd7\x94S\x06\xdaH?" +
	"\xfd\xe4\xb7\xfdw\xaa\xeb\x97\x9c\x8d\x8b\xdc\xcb)\x0b\x1e" +
	"\xa4\x04S\x8a6\xcb[\x86\xed\x8f#\xf8\xb9\x9c\xeec" +
	"\xfa\x14\x1a\xd2\xae\xcb\xbdc{\xe6\xces<\xc1\xe0)" +
	"\xd4=\xb9\x91\x12\xfcxu\xf5\xad7v\x1b\xfc\xb7\xb8" +
	"\xb4\xcc\x14:|L\x09>}\xff\xb3\x13\x9f\x0e\xfe\xf2" +
	"o\x09U\xe4\xca)\xa5 \xaf\x9fB\xd5\xfd\x14\xeah" +
	"\xb8\x8e\x96\xbe\xf3[\xfb\x8c\x9f\x12\x09\xe9\x99\xa9\xf9 " +
	"C\x85$C\x85]\x1eVAXa\xe3\xb8\x83\xc5K" +
	"Bo\xfd\xcc\xc7\x02\x15\xd4\xc8\x1d<\x9f1l\xe8\x1b" +
	"i\xbf\xc4\x19\x9f\x0a:\xb5E\x15d`w\x0c\xcdY" +
	"\xf9\xcb\xfd\x13~\xe1x`]\x05U.\x83&\xee\xea" +
	"s\xfa\xde\xdf\xff\xd2F`\x1e\xad\xe8\x0e\xf2\xba\x0a\xba" +
	"\xce\x15K\x05\xb9\xa0\x92\x08\xcc\x97\xcf\x1e>\xe1^\xfb" +
	"\xca\xdf9\xc3\x91]I\x13<\xa7W\xfdK\xfe\x15\xf3" +
	"&\x9fo\xd3P\xaf\xca\xee g\x93\xaf\xe5++%" +
	"\xf9\xca\xcaI\x08E\xaa\x97\x9d\xbep\xf9\x84\xd9\xe7\xb9" +
	"\x01\x0d\xac\xa4\xce\xef*\xe5\x85\x1e;\xfd/\x9e\xe7f" +
	"\xd9\xab\xf2K\xf2\xe6\x06a\xe5\x81\xec\xc6\xfb/\xc4\x85" +
	"-PI\x95~\xafJ\xb2B\xd3\x9eXu\xe0\xc3\x9e" +
	"\xdf\\\x88\xf3\xdc*M\xcf\xad\x92\xac\x83\x8eCsq" +
	"h\x84'Mm\x084\x8c\xf0\x05=\xaa\xefN\xb5A" +
	"\x1b\xee!\xbf\x8b&\xba\x87\x1bjh\x90\x0b\xeba\xc9" +
	"g\xe8J\x9a\x98\x86P\x1a d\xeb\x95\x8b\x90\xd2U" +
	"\x04%K\x80\x8c\x86`\xc8\x804$@\x1a\xd7bz" +
	"\xc2\x16]\xb8!8\xbc^\x0b\x18nl\xd0v}\x06" +
	"\xe8IFA\xbf\x99\x13\xd6\x8cA\xaeb\xfaE\xb2\x0f" +
	"\xa6acxc}P\xf5k\x83\x8a\xab\xd4\x90\xea\xd7" +
	"S\x19U\xadn\xa85%\x0d\x0d\xbe\xa6AUjH" +
	"\xe2\xbfjwu\xc2\x81\x06-0\xc8\x85\xed\xa9\x0ck" +
	"\xa2{\xb8n\xa8u\xb8-}\x07\xa3\x9a\x8bC\xba\x16" +
	"\x0cXk\xc5\xefAil\x0f\x16F\xe9 3f\x1e" +
	"\x10@f\xd2-va\x7f\xd0\xc0\x13\x83>/\x86P" +
	"\x15\x80\x92\x06B\xe4\x8e\xc7\xd7*\xdb?[\xbe\x1b)" +
	"i\x02\x94\x0c\x02\xe8\x89P\x1e\xd4@\xa4\xc4QK(" +
	"Ci\x0e\xa3^5\x1c\xaa#D?wh\xbaC\xf5" +
	"\xf9\x82\x8d\xd8\xeb0\x82\x0e\xd5\xe3\x91\xb0\xae#\xa4\xf4" +
	"\xb4\x06{s\x11B\x8aS\x04e\xaa\x00\x00Y\x84_" +
	"me\xe5\x08)\x93EP\xa6\x0b`\x13 \x0b\x04\x84" +
	"l\xcar\x84\x94\xe9\"(w\x09Pl\xf6\x06=\x91" +
	"\x00=\x89\x83\x87Uoe\xc0\xd7\x84\xc8\xdc\x90\x00D" +
	"gx\x82\x81Z\x9f\xe61\xc0m\x84T\x03\xd75!" +
	"d\xd1'\xdd\x8f\x10N\xb8\x7f\xe9\xed\xb2\x959\xdf\xd2" +
	"\xa6i\xaa\x1f\x0f\xaaR3\x08s\xb5'\x16\x01\xd5\x8f" +
	"\xdb\x0c%\x05\xb10Y\x966\xc4\xda\xbd\x96\xb4;H" +
	"\x04e\xa4\x006\xb6|\xc3\xc8\xc3kDPF\x13\x19" +
	"T\x8dz\xd6Y\x06i\x092c\xf9\x80V\x9c\x90\xde" +
	">;{\xb1\x0f\x1b\x98\x0d\xa1]\x81\xe7:KM\x85" +
	"\x90\x06E\xbf\xde\xce\x94\xac\x19\x95\xb63\xa3\x85\xc1\xda" +
	"Z\x9f\x16\xc0\xd6\xae\xa7>\x15Spt\x84\x92\x7f\x13" +
	"\xc2\x9e\xa0\x17\xbb\x8d\x10V\xfd\xe4\xbb\x8c8\xa6\xe8\xd1" +
	"\xfe\xce\xd5\xa9\x06nT\x9bf\xe88\xe4\xf2[=\xb2" +
	"\x0f\x13~7>\x18\xa8\xd5\xean\x0e\x18\xa1&\x84\x12" +
	"\xcb\x9d#*w\xb9D\xee<\x94^t`\xf2\x85\xe3" +
	"\x1a-\xe0\xf1\x85\xbdZ\xa0\xce\xe1\xc7\x86\xea\xd02\x02" +
	"\xb5\xc1k\x11R\xb2\xac\xf5]\x90\x83\x902O\x04\xe5" +
	">\x8ee\x16\x91\x87\xf7\x88\xa0<@$N0%n" +
	"\x09yx\xaf\x08\xca\x83\x02\xd8D1\x0bD\x84l\xcb" +
	"\xc8V\xdc'\x82\xf2\x88\x00\x90\x96\x05i\x08\xd9V\xcc" +
	"BHyP\x04\xe5)\x01\xa4\xd9\xb8\x89\xed\x8e4W" +
	"\xf5Y\xff{\x83\x1ek\xd7\xbc\xb8V%Z\x8b\xb1J" +
	"\x00c\xaf\xee\xc2:\xca0\xd4\x90\xd1f3;P\xff" +
	"\x0dZ\xa0nP\x95=ee\x1e\x0e\xf8\x83\xe1\x00'" +
	"K\x1c'\xbb\xa8b\x02\xe5\x0a\x01\"\x94\xaaJ5\x10" +
	"\xb4e\xe8.)mx\x89\xd7k\x89K\xa6\xd5\x89J" +
	"\xb8\xfb6\x11\x94zn\xf51\xd1w^\x11\x94\x06n" +
	"\xf5\xfdd\xa1\xeb\xa3\xfb\xc4V\x7fQQt\x9f\x9ej" +
	"\xadG\x1aT]o\x0c\x86\xbc(\xa6\xe6\x16\x9aZR" +
	"\x87\xde\x08\xaaD\xa0\x8f{#(\x0eiu\xf5F\xeb" +
	"\xa7)\xeb\xb8\x19\x0d^\xd5\xc0\x9d\xd1\x8d\x01lL\x0d" +
	"zT\x03O\xc3\xf3b\xb6\x9a_\xf9\xa2\x98\x0e)\x0e" +
	"\x99\x06-3\x165\xa6\xa4\xa5\xe8\xf2\xd7`O\xd0\x9f" +
	"PK\xe5\xc4z\x90\x1a\xeb\x83\xa9+)\xd323\x8d" +
	"\xce\xa9)WL%Y\x1b\x99G6r\xa4\x08\xca\x18" +
	"\x01\"\xb4\xb1V,\x14\xc2\x0d\xc1*\xd5\xa8G)\x1b" +
	"#:/\x93g\xa3>K\xd2A\x10\xc6\xb9^\x04\xa5" +
	"01\x1f/\x0c6\x18Z0\xa0Cf,+\x99\xaa" +
	"!\xa8SC5j\x1d\x1e\x1f\xf4\xf9\xb0\xc7`\x82\xc7" +
	"/t5'Dj]]\x08\xeb\xba\x86\xc4\xb9\xb8\xd3" +
	"B\x9d\x88O\xf2c\xbbh\x0f\xe1\x06_S\x8af\xb4" +
	"\xb5\x0e\x8f\xfaq\x97\xc6\x8c\x11O\x81\x99\xb1\xce4\xd8" +
	"\xeeP5}\xbc\xea\xa9\xc7\xde\x98\x89\xe2\xdb-\xe7\x16" +
	"\x98Q\xf2~O\xd2\xf1zT\xe3\xe2<\xf7\xf6\x9d\xea" +
	"\x86\xb0^\x9f\xaaF\x98\xe8\x1enZ`\xef\xb4\xa0\x17" +
	"\xeb\xc9\xf6\"\x14\x0c\x1a).\xdd\xcc\xf1\xee\xe1\x9e\xa0" +
	"\xdf\xaf\x19e\x81\xda`l\x8e\x9c\xbcT\xc7\xe4\xc5\x12" +
	"\x97\"N\\4}\xa6\xea\xd3\xbc.$\xe2Z\xb6\xa2" +
	"\xc5f\x9b\x90\x19+\x8d\xb4\x12\x171\xe1p\xdc\x86j" +
	"\xa7#\xe9\xd8{^\x0c\x11\xb7\xa1R\xc2t\xea/;" +
	"tC5\x86\xf9\xb4\xd9\xd8\xe1\xc5\xba'\xa4Qqu" +
	"\x04k\x1dj\xa0\xc9\x11\x08z1\xa2.stR\xf2" +
	"\x16\xc8E\xc8\xfd2\x88\xe0~\x1bbz@~\x13\xca" +
	"\x11r\xbfA\x9e\xbf\x0f\x02\x80iW\xe4\xed\x94\xfcm" +
	"\xf2x\x17!\x17\x81\x9a\x16y\x07T#\xe4~\x9f<" +
	"\xff\x98<O\x13\xa8q\x97\x9b!\x1f!\xf7.\xf2|" +
	"/y\x9e\xfe~\x16\xa4#$\xef\xa1\xcf\xffD\x9e\xef" +
	"'\xcf\xbbHY\xd0\x05!y\x1f}\xfe1y\xfe\x05" +
	"y.\x09Y$\xbc\x94\x0f@)B\xee\xbd\xe4\xf9!" +
	"\xf2\xbc\xeb\x8e,\xe8\x8a\x90|\x90\x0e\xf3\x0b\xf2\xfc\x18" +
	"y\xde\xed\x83,\xe8\x86\x90|\x94\x8e\xe7\x08y~\x92" +
	"<\xef.fAw\x84\xe4\xe3P\x83\x90\xfb[\xf2\xfc" +
	",y\xde#-\x0bz $\x9f\xa1\xf3:I\x9e\xff" +
	"D\x9e\xf7L\xcf\"\x0b,\x9f\xa3\xf4gA\x04\x97 " +
	"\x80\xadW\x97,\xe8\x85\x90|\x01r\x10r\xffD\xc8" +
	"\xd3\xc8\xf3\xde;\xb3\xa07B2\x08d\xf8\xe7\xc9\xf3" +
	"\xae\xe4y\x86\x94\x05\x19\x08\xc9\xe9B.B.A\x04" +
	"wO\xa1\xb5D\x1b!\x8c'\xab:\xd5\xea\xbd\x90\x00" +
	"\xbd\x10d\xe8\xda|\x0c\xdd\x90\x00\xddH,B\xa5\xd4" +
	"\xad!q>\x86t$@:\x02\xbbF\xb6\x92\x91\xd8" +
	"5}\x82\x16b,g\xf7\xe2\x06\xa3\x9e\x09\xe0B\x7f" +
	"\xd0;]\xe3l\xbd\xa6Wi\x81@\xbc\xd8k\xfa\xcd" +
	"\xf3\x1a|\x9a\x07\x89\x9a\xc1\xc7@\x06\x0e\x18\x93\x91\xa4" +
	"\xea\xf5\xd6\xd0\xc2:\x17:\xd5\xa8\x9e\xd98\xe0\x8d'" +
	"\xa1N\\\xf4\x7f\xbb\xa6\xbb\xd4F\xd6\xe4\xc5\x85\x10\xbc" +
	"qn\xebw\xa7\xb5+\xcd\xbe`]\xea17\x9e\xa7" +
	"\xe9\x86\x9e\xd4\xbf0\xc9R\x0c\x18Z\xa9\x94\x04j\x9e" +
	"w,Bxn\x8a\xce\xe2D\xf7p7q,L{" +
	"4\xdc\x1b\x0ct* \x89S\xa0, Id(\x07" +
	"\x09`'lfy{\x991D\x08\x828\xbfOl" +
	"o\xe7\x80*\xb0[\xc5t\x0eX\x00\x0ca&o\x11" +
	"r\x91 \xaf\x17$\x88!\x91\x80\xe1n\xe4\xd5\xf4\xed" +
	"\x0aA\x02\xc1\x82\xf3\x00Ki\xc9\x8b\x84|$\xc8a" +
	"A\x02\xd1\xc2*\x01\xcb\xc0\xc9\x9aP\x8a\x04\xf9vA" +
	"\x824\xabH\x01\xac\x12\"+\x82\x0b\x09r\x99 A" +
	"\xba\x95u\x07\x06Q\x90\xc7\xd2\xb7\x05\x82\x04]\xacB" +
	"!0\xe8\x87|-};P\x90@\xb2j\x98\xc0 " +
	"\x08r_\xfa\xb6\x97 AW\x0b\xc4\x04\x0c\x16#\x83" +
	"P\x84\x04\xf9\x1cH\xd0\xcd\xcag\x03\xcb\x1c\xcb\xc7\xa1" +
	"\x1c\x09\xf2Q\x90\xa0\xbbU\x96\x02V/\x96\x0f@\x0d" +
	"\x12\xe4= A\x0f\x0bp\x07\xac\xa2H\x15\xb0 o" +
	"\x05\x09zZ\x15A`\xe5uy\x13\x90Q\xad\x07\x09" +
	"zY\xd5\x1e`5Gy5,F\x82\xfc(H\xd0" +
	"\xdb*B\x03C\xe1\xc9K\x80\xacd\x13H\x90aA" +
	"\xbe\x80\xc1\"d?\xccG\x82\x8cA\x82L\x0b\xa8\x01" +
	"\x0c\x9f&\xff\x0aBH\x90\x15\x90\xc0f\x15\x02\x81\xd5" +
	"\xa7\xe5\x9bi\xbfcA\x82>VM\x1aX\xa2]\xce" +
	"\x83\xe5H\x90\x87\x81\x04\xb2\x05\xc4\x03\x86Z\x94\x07\xd2" +
	"Q\xf5\x05\x09\xb2\xac\x12)\xb0\xaa\x9a\xdc\x8d\xae\x06\x80" +
	"\x04}\xadb\"\xb0\xb4\xa5\xed\\9\x12l\xa7\xa4\x8c" +
	"9a\xcdpB\x06q\x18\x9d`\xa7\xce\xae\x13\x16F" +
	"\x83<\xa7\x99\x04\xd2\xea&a\x04\xb1_\xee\xb8_%" +
	">\x04>\xeb\xd7\x84 \x02\x8f\x13\x8aM]\xe5\x84\x88" +
	"\x99\xfc\xf3\x12U\xcb~\xb9\xb0\x1fI\xc1\xb9\xb1\xb7\x0d" +
	"\x0dH\xf45\xb1\x9fS5\xddl\x9f\xfe\x9a\x11\xf0\x03" +
	"\x19K\x89\xcf\x87\x9cV6\xce\x09\x11\x16)\xa2b3" +
	"V\xe4\x1f\xd9i\xbe\x80{\x02:\x0eM\xd5t\x83\x8c" +
	"\xc1\x8bk\xc2uU\xa1 \xd4j>\\\x15\x0c\x19d" +
	"d\x0b\xa39\"'D\xc8\x7f.\xec\x0f\x12\xa7;\xfa" +
	"\x93~J\xc8\xaa %M\xcdV\xc6\x97\xd0O\xcc\x89" +
	"\xe9\x16I\xf5\xf9b\x9a\xc5B.\xb6\xd2,\x1dz\xa2" +
	"\xff\xac\x04P\xfbF\xc5P-\xa3\xc2\xf7\x9a\x93(\x93" +
	"\xc6u\xcbk\xf7\x85\x86Z7-Q\x16\xaf\x83\x84\xa2" +
	"?8\x17'\x0a\x98.2\xf00\xf3\xb3\xc4s\x0c\x83" +
	"\x9e\xd8\xc3\xbc\x82z\x986\xd8\x16\x09`\x83z\x95\x10" +
	"\xd6\xa9\x1f\xe9(6c\xf9\xf8\xc4PQ\xa2\xc4Py" +
	",\x07\x14\xf5 m\xcbj\x10R\x1e\x10Ay\x82\xb8" +
	"\x8f\x82\x99\x99x4?\x96\x03\xb2\xa59\xcc\xc4\xd0\xca" +
	"\x10B\xca\x13\"(\xcf\xd1\xc0\x9et\x09\x991\x9cI" +
	"\xd4w\xf0\xa9\xba\xe1\xc68\xc0\x07\xc5\xa1`8\xe05" +
	"B\x1a\x92\x1a*t\xe6\x08\xd9q(\x14\x8c\xb9.j" +
	"\xd8\xa8\xc7\x01CCv\x8fj`o\x1b\x16\x10\xdb\x8b" +
	"W\xcc\xc4\xda\x18j\xd1X-\x0bX9E\xde\x07\x8f" +
	"E\xb5t\xacV\x06\xac\xe8,\xef\xa0\x1a\x9ehi\xc1" +
	"\xc2\x91\x00\xc3f\xc9\x9b\xe8[\xa2\xa5E\x0b\xc1\x02\x0c" +
	"D+\xaf\x86YQ-\x9df\xc1\xa2\x80\xd5<\xe5%" +
	"T\xe3-\x00b\xd1\x18p\x06\x18\xeeM\x9eC\xdfj" +
	"@,\x1a\x83+\x00+k\xcb\xb7S\xcb2\x03\x88E" +
	"cp\x02`\xb0\x07\xb9\x8c\xda\x8e\x12 \x16\x8d!\\" +
	"\x80\x01x\xe5\x02\xaa\xe1\x89\x96\xee\xc6\xe0\xe11\x90\x86" +
	"<\x10\x8a\xa2Z\xba\xbb\x85\xb1\x03\x86\x15\x91\xbb\x11\x1d" +
	"n\xbb@\x0c\x1a\xabK\x03\x03e\xd9\xceT#\xc1v" +
	"\x9c\x983\x86\x81\x03\x06\xcb\xb2\x1d^\x8e\x04\xdbAb" +
	"\xcc\x18\x84\x1b\x18\x8a\xd0\xb6g\x16\x12l\xbb\x89)c" +
	"U_`\x18Y\xdb\xd6\\$\xd86I\x11\x93\x99J" +
	"\xbc\xe0\xad\x0c\xd1\x8c\x14\x10eg>u\xf9Mmm" +
	"\xfe\x9a\xaa\xf3\xbff4\xa0\x0c\xafj\xc4\x88\xddjT" +
	"Q\x9a?\xab4$\x12[\x12\xfd9\xde\x87$\xac\x86" +
	"\x9c\x10aI,D;\xb2~\xd9iR\xcb\x09\xc5f" +
	"]\xc9\x09\x0b=\xc1@\x00{\x88&\xf6j:\xfd\x81" +
	"D\xfa\xd3l\xb12\x00D_\x99*\xd9zZ\xda\x84" +
	"2\x88B!\xb6,\xac\xd7\xc7k\xead\xd5\xaf\xd6\xe9" +
	"\xcf\xf6\x13\xee\xc1\xb0\xa7>Yu\xa2s\xc9\x0f\xaa\xd5" +
	"\xda\xa4\xc4\x93\xda\x16V\xe5\x93.\xa2\xba\xc2\xf2\x0c\xed" +
	"'\x10\xdb\xd13)\x8c.>a\xcf\x12n\x97\xa8\x8e" +
	"\xc3\\\x0cO\xd2\xf4\x0b\x89\xfb[\x19\xd4\xccN\xa4h" +
	"\xabh\xfe,A\x1f|\x86\xdb\xd2\xb0\xd0\x00=\x90\x00" +
	"=\xb8\x0ez\xb6\xdbA\x94\xbbY\x8a\xb5\xc3RF\xa2" +
	"\x8cxg\xa2\xbfZl\x10vmk2/:\x99\xeb" +
	"\x9f\xed\xd5B\x89\x92\xb9\x89\\\x8eP,/\x14/\x14" +
	"\x9e\x10V\x0d\\\xa5\"{\x08\x07\x12\x84\x92\xed\xcfH" +
	"o\x0ax\x12u_\x9e -\xe5\xe2R\xc9\x8d\x9aQ" +
	"\x7fK}\xd0\xcf[\xc8\x00\xc6\xde\x89\xd8\xf0 \xa8o" +
	"3\x82.I\x18\xa42\xc0t\x90U\x08I\xbex," +
	"`\x95\xb0\xea'\xf6\xb3+\xb5\x9f\x0c\xca\x02\x0c)G" +
	"F.\xd8\xae%\xd6\x93a \x80\xc1\xfbm\xd9D}" +
	"\xdb\xa4\x88\x8e\x03\xde\xf1\xf5\xe1\x00\x82\xd9N\xc8 \xe1" +
	"o*\xceil\x02S\xf5\x0e\x0b\xdf\x83\x04Xh\x12" +
	"r\x81/\xaf\x0ez\xa7\xb4]&\x03\xb6\x01\x17$\xf6" +
	"+&k\x010\xc8\xbap\xb5\xed\xdcXm\xdb\xf2\xa8" +
	"\xca\xe6\xf3\xc5\xed\xa8K\xa5,FH\xa9\x12A\xb9\xad" +
	"5\xb3\xe1\x80'\xd4\xd4`h\xa88\x18(\xf1\xd5\xc5" +
	"\x98\xdd\x13\xf47\x84\xb0\xae\x83f\xbeh[P\x10\xdb" +
	")0\xfa%\xbfft\xec2.\x8f\xb8\xb5@\x9d\x0f" +
	";|\x10\xac3k\x8b\x08\x92\x96\xb1\x88\\\xde%\x82" +
	"\xe2\xe3f\xa6\xe5Fk[\xf7re\xac\x05\xb91W" +
	"3\xa3\x9eO<\xf9\xf5:\xabZm\xa8u\xad\xabT" +
	"\xd4vwF\xe7\xb2\x90,q\xca\xbb(\xc6/\xc54" +
	"d\xe4\xd8\xc5\x82(\xb5b\x97d\xac\xe9V\xe7\xe2D" +
	"\x89\xa2K\xc8\x9b\xcc\xee&\x88bJ\x93D1\x0b\xf5" +
	"\x90\xa7\x8a\x8f\x9f\xbc\xbaQ\x95\xc8\xe2\xf7H\x92\x0fK" +
	"\xad\x9aM\x96\x85\xb9A\x9e\x04&\xbf\x13\x8a*\x91\xbc" +
	"\xf3i.-P\x1b\xe4V\xd4:b\x93\xb2\xb4\x87\x03" +
	"$2l#\xed\xa9\xd6\xc2:\xaaW\x91\xf1\xd5\x860" +
	"\xf6\xc6\xc6gA\x0aSb\xaf\x18/\xbbp\xd4\xe5\xea" +
	"<T(EU_A\x04\xa1\x92\x16\x1d\xcc\xc8\x92S" +
	"h\xc4PM\x10A\xa9\x8a\x19\xaa\x0a\xf2l\xaa\x08\xca" +
	"\xad\x1cXgFiL\x9f%D\xe7\x84\x82A\xa3U" +
	"!\xb4\xddP>\xb5z{JL\x12\xd6\xb9zxf" +
	"$\xa7\xbcz\xcc\xc4c\xd9\xf7\xb7\xde\x84\x0ezd\xe9" +
	"\x17\x96}1W5)V\x8d%\x1e\xda\xb8\xca\x1d\x15" +
	"\x9e\x8d\x84\xb9]\xdeQ$L\xdf*\xa7\x9b\x99BN" +
	"\xd7/\x11/\xb1CpI>D\xca\x02\xb5A\x87\xea" +
	"\x08\x89&\x96\xab\x01\xe3\x90\xa3\x11;\xfcZ]\xbd\xe1" +
	" \xae\x8c\xddA\x1c\x13\x84\x94+\xac\xd1\xad\xce\x8dE" +
	"\xfc\x96\x02ZS\x83\x90\xf2\xac\x08\xca\x06\xce0\xac'" +
	",\xf2\x9c\x08\xca\xbb\x02@\xd4.l}\x0c!\xe5]" +
	"\x11\x94?\x09`K\x033\x89\xb0\xbb\x1a!e\x97\x08" +
	"\xca^\x01l\xe9\"\xad>\xd9\xf6,GH\xd9+\x82" +
	"r\xa8\xb5#^\xab\x05\xeap\xa8!\x84$-`\xb4" +
	"\x07\x85\xc8\x8c\x9d@\x8en\xbd\xea\xf1\xe0\x06\xa3$\x0c" +
	"F\xd0D8@\xcc\xb13\xdfU\x85\x91\xa8\xd7w\x0a" +
	"_\x96R0\x90\xa4\xa8\xc0\xe1i:\x17\x00$i\xb7" +
	"S\x8e\xb3\x199v\x1a\x0f\x17\xc5\x8a$\x888/U" +
	"\xc0\x16KUF\xa7\x9bB\xd61\xd8\xd0\xf4O5\x9d" +
	")8\xafmTq\xaa\xe8\x99\x04\xd1\x10\xbf\x94\x86\xe6" +
	"\x99\x8d\x0d\xab\xee\xd89tk\x1b\xdd\xd4%\xc9g3" +
	"\xcc<;K\x14\xc7Av\x93\xe0\x19\xa3f\xecb\x80" +
	"\x18)y{)s\x83\x89\xd4\xbd\x98\x9cHb\xe5:" +
	"A\xab\x85\xda\xc4\xaa\xb5\x7f\xd4\xb9\xfe%2A\xab\xad" +
	"\xc5!\x1c\x10<\xd8Q\x83\x8dF\x8c\x03\x0e\xa31\xe8" +
	"\xf0\x14S\xdfJGH\xe9o\x8d\xe4Mb\xc0^\x15" +
	"A\xf9\x98c\xcc\xe6\xd2\xa8R<\xc2\xa9\xd4\xc3\xe4\xe1" +
	"\x17\"(g9_\xfb\x0cyxR\x04wWZ\xd5" +
	"7!{r:\xe4#\xe4\x02\x11\xdc\xfdiQ?\xdd" +
	",\xea_\x09E\x08\xb9\xb3\xc8\xf3\x91\xb4\xa8\xdf\xc5," +
	"\xea\x0f\xa3E\xfa\xeb\xc9\xf3\xc9 \x80]\xf5zyg" +
	"\xa6UMq\xa1\x99\xed\xee\x80@\xab\x0b\x04C\x1d\x11" +
	"\xf85]\xd7\x02u\xed\x12\xd8[u`\x9d\x100_" +
	"\x17\xfbq\xa8\xae\x83\xf7\x96\xf6&\xfeG\xbbD\xa9f" +
	"\xf5S\xf4\x19\xf9\xfcI\xdb<H'\xbc\x9c\xd4cv" +
	"\xaa\xeb:\x93\x9ec\xe5\xa26nMz2D=\x9b" +
	"Q{\xaa\xc9$\x83\xcc\xd8\xf1\xb8\x94\x9c\x95\xf1\xf5\xaa" +
	"\x14\xa8\xc3\x1dK\xd4\x89He\x00;\xea5\xdd\x10\x82" +
	"\xa1\xa6(\x16\xb66\x18r\xa8\x8e\x0c\xe2\xa8!\xa48" +
	"\xacQ\xed#\x92\xfd\xb1\x08\xca\x17\x9c<\x1d(\x8a\xf9" +
	"\x13\x96<\x1d$\x94\xfb\xa3B\xc6\xe4\xe9pnT\xc8" +
	"\x8e\xc5\xc4\xc9v\x94\x08\xd9!\x11\x94oc\xc2dk" +
	"!A\xfd1\x11\x94\xef\x04\x00S\x90l\xa7\xcaMi" +
	"T~\x12\xc0&\x01\x85\xc6\xd8\xce\x11\x0f\xe7\xac\x08." +
	"h\xa5k\x8a=\xf5j\xa0\x0e\xc7\xf0\xdbX\xf5\xb6\xc5" +
	"!e\x04\xf0\xbc\x04\xf0\xa4\x85TD\xa6\xc7\xac|\xa3" +
	"\xaaW\x85\xf0\\\x0d\x82a\xdd\xd7Tb\xa0\xce\x03J" +
	":\x19\xa5$P\xabm@\xb6\xd3T?\x02\xdc\x09#" +
	"j\x19D\x93\xe5D\xe3\xd2X\xc3\x98}\x1e\xef\xc3&" +
	"2=\x0ew\x92\x12\x90\x83\xe5\xb5fw*@\xe3\x0c" +
	"b\x1bYM,\x15e^l\x0f\x18\x9a\xd1\xd4\xb1\x13" +
	"\xdf\x879\xf15A1l8\x82\xe1\x90\xc3\x13\x0e\x85" +
	"p\xc0p\x90H\xc8\xac\x09\x12\xe9\xe02;5\\\x12" +
	"\x87I\x87\x96\x9f\x08\xa0L(}\"(\xf3b\x0e|" +
	"\x98\xb0\xb7af{\"\xd1\xaef \x89\x03\x1c\xd9\x83" +
	"\x8d\x01\x0e~\x94\xd0[\x8fh\xba\x19\xf8'\xc25\xa6" +
	"\xc2\x18Q\xe5\xc5G\xae9\x09\x8e\x99T':fR" +
	"\x1d\x8b\\\xe3|dC\xf3\xe3`\xd8p#\x11{\xac" +
	"\x84\xb9\x8f\xf6W\xa1\"Q\x9f\xddy\xef\x7f\x12N\x9c" +
	"\x96\xe2a\xaesU_\x18w\x06\x82\xde\xda3K\xdd" +
	"X\xd0\x88\xf3\x12{d\xb1\x89^\xb20\x87\x84\xd2~" +
	"u6&NT\xc2\x80?\xae\x92\xa2\xd5\xd6Bf\xec" +
	"\x98|Jg\x9f\xb8,W\x82\x12\x10?j.]\x99" +
	"\xa4M\x933\xe9p\xcd4q\xb2djnG\xc9\xd4" +
	"\x06\xce \xf1r\x18\x17\x0ag\xa8^\xaf%i\x19~" +
	"\x95c\xd1\xc4b\x97*\xc4\xeebP\x0c\xc9\x94\xaeu" +
	">\x06\xf4\xd4 \xd7\x9d.\x1f\x9aj=\xc5\x04\x8ci" +
	"\xfb4\xa3J\x0b\x98h\x81dg\xae\x8a\xda\x01\xa80" +
	"\xf4p\xca\xb8@z\xe0`b(\xe8\x8f\x9d7\xea\xd0" +
	"\xaf\xd2)\x19\xd8b\xd7\xc9 \x00[g\xa4\xd3\x8d\x13" +
	"\xc2p\x12\x02b\xf29@\x0c'\xb2\xed\xa8\xa9\xf6\x05" +
	"\x98\xf8j\xc1PSb\x88;\x9f*\x8f\x12r\x89]" +
	"v=DJ\x89S\xbe\xaf\x8b9\xbc\x96\x9eJZ\xbb" +
	"u\xb0\x99\xd8f\xcf\xc4\xa1\x0c]\x0b\x06Z\x09\x7f(" +
	"\x91\xbduE\xcf\xfe\x18\x9c\xf0\xcf\x99\x8f\x90\xd2 \x82" +
	"r\x0f'\xfcM\xd5\xb1JJ\xb4\xff\x99\x18\xd9\xcd3" +
	"\x9f\xf1\x93qa\x04s[\xe3~g\xa2b\x1cO\x1c" +
	"}\xe1Bb\x024\xab\xd8\x0e\xd7\"%\x0d\x80\xbb\xd0" +
	"\x08j\"\xcc-B\x12V\xfdJ\x15-\x16\xb2+\xdf" +
	"\x80]\x1d(\xcf\xa1\x10PL\xe1\xa3\xec\xd82\xb0\xa3" +
	"\xfc\xf2\xaf(|\xb4\x82\xc2G\xd9\xbd\\\xc0.T\x93" +
	"K\x84\x9c(\xc8S\xb4nj\x02v0^\xbe\x96\xb6" +
	"\x9cM\xe1\xa3\xecB.`\xd7\x9f\xc86\x0a\xe3L\xa7" +
	"\xf0Qv\x01\x11\xb0\xbb\xaf\xe4\x9f\x81\xf4{\x8a\x82m" +
	"\xd8m2\xc0.;\x91\x8f\xd2\xb7\x07(\xd8\x86\xdd\x0f" +
	"\x07\xec\xee\x09\xb9\x19\xc8\xa8\xb6S\xb0\x0d\xbb\xbe\x05\xd8" +
	"%\x8a\xf2\x16\xc8\x8f\x02\x84\xbaYWs\x00\xbb\x99G" +
	"^M[^A\xc16\xecr;`\xf7\x11\xc9\x8b(" +
	"P\xb3\x89\xc2G\xd9=^\xc0n\xd0\x91\xfd\xb4e\x95" +
	"\xc2G\xd9\x1d\x1a\xc0nf\x93gP\x18O\x19\x85\x8f" +
	"\xb2\x1b\x0d\x81\xdd0)\x8f\xa5c\xce\xa3\xf0Qv\xe9" +
	"\x1c\xb0\x9b\xd7\xe4\xc1\x14\xb6\x94M\xe1\xa3\xec\xbaD`" +
	"\x97\x1e\xca6\x0ay\xeaF\xe1\xa3\xec\xda\x02\xa0\xf75" +
	"\"\xed\x11\xdb\x85|$\xd8\xceH`\xb3\xee%\x00v" +
	"c\x9e\xad\xa5\x1c\x09\xb6\xc3\x12\xf4\xb1.L\x00v\xc1" +
	"\x86m\xdfb$\xd8\x9a%\x90\xad+\xfa\x80]\xa6h" +
	"\xdb>\x0b\x09\xb67%;\xd5\x94N\xc8\xf0i\xba\xe1" +
	"\x04\xc9\xa3\x1aN\xb0\xd3\x12\xbf\xd3L*\xce%o\xa3" +
	"\x7fH$\xec\x04\xa9A\x0b8\xc1N\x93>N\xc8 " +
	"\x1e\x0f\x85Y\x9a\x95\x1cTl\xd6r\x9c`\xa7\x09O" +
	"'C\x8b;A2(\x0a\x88\x01\xafQF\xd0\x8bu" +
	"'D\xd8qR\x8a1\xb2\xd3c\xc3\xce\xb8s9N" +
	"\x880\x8d\x0eQ\x95n\xc2~\xcc\xe3H(\x83<I" +
	"\xa5\xf8\x1d\xe7\xf6X\xc7\x179\xf8^5w\x84\x93)" +
	"\x92%5\xb1\xd3\x9a\x96\"YQ\xceA\xf5\x98\"Y" +
	"\xe9\x8a%\xee\xd9\xb9\xce5\xaeX\xde\xde<\xceV\xd9" +
	"\x18@b\xdc\xc1kZ\xa5kD\x12\xef\xd4SR\x17" +
	"\x9e\x1b\x07\xe83\xad|\x9c\x0e\xea\x08\xc2\xd0\xbeg\x16" +
	"\xc2:\x8e%B\x93U\xdbs\xb8\x8aUt\xfe\x15\xf9" +
	"1\xbf?N\xeb\xf3\x10O{m0\xe4\xc1\x9d\x0e|" +
	"\xadS\x9f\xf1\xd1\x87+6\x0akh\x15.\xbep&" +
	"$(\x9c%\x8a\x8f/\xe5\x81\xbeVE\xeb6\x1eU" +
	"\x92\x03_\x09\x80,\xc9\xceW\x99\xbdMS\x91\x18s" +
	"S\x8b\xbd\xa1&W8\x90\xfa\x016_\xb4\xd2\xd7\xa6" +
	"2\xc6\xfb\x0d8`\x84\xb4T\xce=t\xa6\xd6\x97(" +
	"\xe1\xf0\x7f\xb9\xf0\xc2b\x19\xd6p\x92\xc9O2\x15U" +
	"\x99\x81\xfd\xc9\x0e\x87\x97B\xa4\xc4\xa1S\x10G\x9aC" +
	"3\xb0\xdf\xbc\x99\xa1Q\xd5\x1d\xb35\x9f\x0f{\x1d5" +
	"M\x0e\xa3\x1e;\xea<(\xfeB\x86\x84bT\xca1" +
	"\xb0\x90L\x8e\x16F\xcf\x1dYG\x88\xe2c\xfe\xa4\x95" +
	"\xf5\xd6.p\x82 \x8c?\x05\xd9\xd1\xa1\xdaNfm" +
	"\x12$\xac\xf8`\xdcC\x88\xd8\xacR\xbdE\xe2\xd2\xe2" +
	"-)\x82-\xf5\xa3\x96\xd6Y\xd2K\xeb\xfcZ1[" +
	"\xa2s\xf4I1\x92\xc90\x18\x09\xe2K\xfeJ\x93\xf6" +
	"\xc0\xf7\xc9\xc0$%^\x06\x16\x8ee\x88.\xb6$\xd9" +
	"\xf1\x99\xb5N+'>u\x9bB\xe5A\x9f\xae\xd6\x98" +
	"WD\x10%\x90\xac\xfaN\x1e>%\x82\xf2\xbb\x98\x09" +
	"\\W\x1e-\xbe\xbf\xccA\xf87\x12\xc2\xdf\x89\xa0\xbc" +
	"\xcaU\xdf7\x91e\xd9 \x82\xf2\x86\x00\xb6t\xc1\xcc" +
	"lo!\x93yY\x04\xe5\xed\xd6)\x878>J\x00" +
	"\xfc\x88;\xcf[\xacz\x0c-v4\xbc]\x00H\xbb" +
	"\x956{m\x95\xaa\x85:\xae\x0d|\x1fq\xe1\x06\xe2" +
	"3\x04\x04\x83\x16\xd9\xbc\xb4\xf8\xa6\x05\xea\x1cv\xa2\xd8" +
	"[]\xa8\x920\xea\xcd\xe1\xa2^=\xe4i\x8b\xb8\x90" +
	"\xbc\xba\xd1\x01\x0e#\x993\x93\xe2\xfdE\x16\x844\x11" +
	"\x04\xba\x13Y\xaf\x14\xee\xc7h\x93\x8b\x11\xdb\x1b\x91i" +
	"\x88\xae\xa1\xf1\x1d\xbb\"\x1a\xd8\x05`r\x1e\x8d,\x06" +
	"\xd3\xc3\x14\xec\x9e@`\x17\xba\xd2r\xa3 \xf7\xa2\x87" +
	")\xd8\xad\xca\xc0n0\x95\x81|k;G\xc2;v" +
	"%\x19\xb0k[m\xc7\xf3\xcd\xe0!\xcd\xbaw\x0e\xd8" +
	"\xb5_\xb6}\xf9\xe6\x01\x82t\xeb6=`\xf7\xee\xd9" +
	"\xb6\x96\xd2\x03\x04\xd0\xc5\xba\xd2\x0e\xd8\x05\x87D*\x04" +
	"\xdbj\x12\xd6\xb1k}\x81]\x18f[\x91\x8b\x04\xdb" +
	"\"\x12\xd4\xb1[\x83\x81]\xb8k\x0b\x93\xfe4\x12\xd2" +
	"\xb1\x8b\xae\x81\xdd\xccm\xbb\xbd\x1a\x09\xb6\x19\x92\xe4\x0b" +
	"\xd69Y2\x88\x86\x13u4\x0e1\xffR.pZ" +
	"\xc9\x0e'D\x98\xa7O#\x88\x0c\xb2\xe9N\xb0S<" +
	"*=\xabf\x9eHEbm0>t\xe8\x9e\xf2i" +
	"\xd3T\x00\xdc%Uetw\xab\xc4t%\x13\xb8;" +
	"\x03\x11\x8a]\x87\x86P\xec\x0an\x84b7Us\x19" +
	"\xe7\x9e\xc9n\xb6H\x19K\xd8V\x91\xa7\xe891\xb7" +
	"1\x01\xee#\x11\xf6\xbb\x9c\xc3~\xc7\xdd@\xe0W\xe7" +
	"M\xc0\x0d\xa6\xaf\xd1\xc9\x9b\xcdb\x005\xb1}\x94 " +
	"!\xe4\xec\x02\x7f\xcc\xba7\x82\xff\x1f\x00\x00\xff\xff\x9f" +
	"\x1f\x8a\x9c"

func init() {
	schemas.Register(schema_ea883e7d5248d81b,
		0x809d4e73dc197b11,
		0x82f304d5d4e81ee4,
		0x860c3dd5698349f5,
		0x86541181da6400f7,
		0x86d95afae10f0893,
		0x87c49e302c6516f8,
		0x884238694e8b8d88,
		0x8ae5aae9653b7b02,
		0x8ed051e9369ac720,
		0x90690022482a2dd4,
		0x91ac69870ceff408,
		0x936b942a74db0be0,
		0x946963af664858d0,
		0x958ea6b33d4e8cbb,
		0x95a8b7d1ed942672,
		0x9640959b4623a286,
		0x96fe51446ad697f9,
		0x974c11f8cfed4247,
		0x978c524c1a35015c,
		0x98300b93ef71cc57,
		0x98eadc167523156e,
		0x99b03ceb2dad70db,
		0x9a291d6964350a5b,
		0x9b96e8c9be077989,
		0x9ba7a818970a029c,
		0x9c19777f493f1110,
		0x9cb31f0ede4f5117,
		0x9d64fa17798952ff,
		0x9dd306445642385f,
		0x9efc974402f016f6,
		0x9f8515931298bab7,
		0x9fe8d2cd92c27a38,
		0xa073a01c891a0f7f,
		0xa17d6c20c2174ec8,
		0xa1a9e5ab638eed79,
		0xa2305f2ea25a3484,
		0xa34213f24153536b,
		0xa4efd353c57d2b85,
		0xa5753d28ca12d2ba,
		0xa630576401b1a5b7,
		0xa6e50865be515244,
		0xa78946d2af827622,
		0xa862cd929f7af191,
		0xa89254a0db970716,
		0xa9095b4cff1e5634,
		0xa97d67096ee7d46d,
		0xa99c622e110c1203,
		0xa9e401c52756826a,
		0xaa133a60be5a7d01,
		0xaa98a78425cdd321,
		0xab1e48e58e4c69af,
		0xab89c6fc9bf26f2a,
		0xabc3ec90b96a6d71,
		0xac6cc5b649f638a8,
		0xac8fbc382ae513de,
		0xacf50d40a9d3436a,
		0xad37ff6270c35769,
		0xaf631f5cddda9aa3,
		0xafe329bc8cad8f74,
		0xaff62edfdbfe53d0,
		0xb030fc18cb3b0e61,
		0xb05bd83a34de71b7,
		0xb13597d7a0d68f31,
		0xb14deff4ede8084c,
		0xb2255c049c7bc42f,
		0xb262e0d6c2474d9c,
		0xb2ec3fe21ddc803f,
		0xb47c58aa23289d55,
		0xb5bf271ecf3bc074,
		0xb5dc333528e5f7ae,
		0xb76f3dc1dcf4fdf1,
		0xb7d0dd6b467e7539,
		0xb9095b6d17298884,
		0xb973694cb94aee47,
		0xba0de490234c27af,
		0xbb5ea9a03dfddab3,
		0xbb83332a93ffdcad,
		0xbbec523e9fc1abfc,
		0xbc4d5c31427dc498,
		0xbd8d8f80992c4d78,
		0xbda24ef378533894,
		0xbda949777c149f4b,
		0xbdb679ec96303b53,
		0xbe71bb7b0ed4539a,
		0xbebae5caecad3c49,
		0xbee5e0529f9017ff,
		0xbf1cf3d6e654e947,
		0xc089763bca3e3f44,
		0xc0ad53271497ab77,
		0xc0dd66dedad92ef8,
		0xc18496cf650e6886,
		0xc338177a5379031a,
		0xc3fcefc580775485,
		0xc44d12b3aee49f34,
		0xc738867ebff9b7cb,
		0xc7e5f661ac57ebb2,
		0xc9558eac26b0f15e,
		0xc9601ec89a6aa066,
		0xc9b3a8263f6853d7,
		0xcb6e3e65f2dbc914,
		0xcbd45f6552b4ba24,
		0xccf4f28c8951edf6,
		0xcf864fbad605b1c7,
		0xd0071dd673841599,
		0xd01613feea87ee6a,
		0xd1afceb8146949d4,
		0xd2117353ea065c72,
		0xd35d6ae0fdbd9bc5,
		0xd36e267b961bffd3,
		0xd46456b6c34d2ab1,
		0xd49a2570fb5a4342,
		0xd701f5ae7e7560e9,
		0xd70c154f9521b73d,
		0xd7315a3b3f92aa4a,
		0xd78724f6fbd5c5c5,
		0xd7a7f00d5a96fc43,
		0xd7ef486de484610d,
		0xd9459f2361338d96,
		0xd95473f6f8a89a69,
		0xdb27e243a580d2f0,
		0xdb78f249dcc7b9f1,
		0xdba8e30445acc3f4,
		0xdc0aec8d179d4ec9,
		0xdc876697979bc7e5,
		0xdec9706a7438a8f0,
		0xe0b1a560d0e4d51a,
		0xe0f49db8c42c72b2,
		0xe154e487144bf3c2,
		0xe19b7cffa7304650,
		0xe1b522247fc407ad,
		0xe2b3585db47cd4f9,
		0xe2f81b4403ef433b,
		0xe71560d8bc06c6fd,
		0xe75c9c74c2bacb82,
		0xe83f954c9635f05a,
		0xe88fae3b2e03bc0c,
		0xe92935bf20cc2856,
		0xea498a2451bae614,
		0xeadaf2b11fded490,
		0xecb10f87fbe0d6c5,
		0xed67802d71143df2,
		0xf09939b7753e795c,
		0xf0c07855b6fcd215,
		0xf3243256580294f3,
		0xf39ffa0d4b61ecce,
		0xf485a561c31c83d2,
		0xf4d42db113af3a4b,
		0xf5c310bd5e2aa138,
		0xf7250939585a23f6,
		0xf7da25d3ead6c0d3,
		0xf8551f83bb42e152,
		0xf9b772853fd93ea9,
		0xfa04b4272d0ffcd9,
		0xfa4486fa9522275e,
		0xfaa680ef12c44624,
		0xfbae9f53eadd9cda,
		0xfc487818328b97ef,
		0xfc6b4417fdef895a,
		0xfcaa6dc30ba75197,
		0xfd86771dd5950237,
		0xfde70cc7d597944e)
}
